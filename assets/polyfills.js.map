{"version":3,"sources":["webpack://superstore/./node_modules/details-element-polyfill/dist/details-element-polyfill.js","webpack://superstore/./node_modules/intersection-observer/intersection-observer.js","webpack://superstore/webpack/bootstrap","webpack://superstore/webpack/runtime/compat get default export","webpack://superstore/webpack/runtime/define property getters","webpack://superstore/webpack/runtime/hasOwnProperty shorthand"],"names":["prototype","setAttribute","removeAttribute","open","element","document","createElement","elementIsNative","HTMLDetailsElement","support","styles","_ref","forEach","slice","setAccessibilityAttributes","root","tagName","concat","getElementsByTagName","call","findElementsWithTagName","summary","details","findClosestElementWithTagName","hasAttribute","eventIsSignificant","event","defaultPrevented","ctrlKey","metaKey","shiftKey","target","isContentEditable","onTogglingTrigger","callback","addEventListener","which","parentNode","keyCode","preventDefault","triggerToggle","createEvent","initEvent","dispatchEvent","closest","head","insertAdjacentHTML","constructor","Object","getOwnPropertyDescriptor","defineProperties","get","this","set","value","name","_value","_this","wasOpen","result","querySelector","_this2","window","MutationObserver","mutations","mutation","addedNodes","observe","documentElement","subtree","childList","attributeName","attributes","getAttribute","setTimeout","isOpen","IntersectionObserverEntry","defineProperty","intersectionRatio","startDoc","doc","frame","getFrameElement","ownerDocument","registry","crossOriginUpdater","crossOriginRect","IntersectionObserver","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","_setupCrossOriginUpdater","boundingClientRect","intersectionRect","convertFromParentRect","top","bottom","left","right","width","height","observer","_checkForIntersections","_resetCrossOriginUpdater","_observationTargets","some","item","nodeType","Error","_registerInstance","push","entry","_monitorIntersections","unobserve","filter","_unmonitorIntersections","length","_unregisterInstance","disconnect","_unmonitorAllIntersections","takeRecords","records","_queuedEntries","_initThresholds","opt_threshold","threshold","Array","isArray","sort","t","i","a","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","exec","parseFloat","unit","win","defaultView","_monitoringDocuments","indexOf","monitoringInterval","domObserver","setInterval","addEvent","characterData","_monitoringUnsubscribes","clearInterval","removeEvent","rootDoc","index","itemDoc","unsubscribe","splice","unsubscribes","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","_computeTargetAndRootIntersection","rootBounds","newEntry","time","performance","now","_hasCrossedThreshold","isIntersecting","_callback","getComputedStyle","display","rect1","rect2","parent","getParentNode","atRoot","parentRect","parentComputedStyle","frameRect","frameIntersect","body","overflow","Math","max","min","isDoc","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","frameElement","e","ensureDOMRect","targetArea","intersectionArea","Number","toFixed","opt_options","fn","timeout","timer","options","bind","rootMargin","join","node","opt_useCapture","attachEvent","removeEventListener","detatchEvent","el","err","y","x","parentBoundingRect","parentIntersectionRect","child","assignedSlot","host","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","n","getter","__esModule","d","definition","key","o","enumerable","obj","prop","hasOwnProperty"],"mappings":"mCAIA,WACE,aACA,IAqBMA,EACAC,EAAuCC,EACvCC,EAvBFC,EAAUC,SAASC,cAAc,WACjCC,EAA+C,oBAAtBC,oBAAqCJ,aAAmBI,mBACjFC,EACI,SAAUL,GAAWG,EADzBE,EAEM,aAAcL,EAEpBM,EAAS,uQACTC,EAAO,GAAIC,EAAUD,EAAKC,QAASC,EAAQF,EAAKE,MA6HpD,SAASC,EAA2BC,IAuCpC,SAAiCA,EAAMC,GACrC,OAAQD,EAAKC,SAAWA,EAAU,CAAED,GAAS,IAAIE,OAA2C,mBAA7BF,EAAKG,qBAAqCL,EAAMM,KAAKJ,EAAKG,qBAAqBF,IAAY,KAvC1JI,CAAwBL,EAAM,WAAWH,SAAQ,SAASS,GACxD,IAAIC,EAAUC,EAA8BF,EAAS,WACrDA,EAAQpB,aAAa,gBAAiBqB,EAAQE,aAAa,SACtDH,EAAQG,aAAa,aAAaH,EAAQpB,aAAa,WAAY,KACnEoB,EAAQG,aAAa,SAASH,EAAQpB,aAAa,OAAQ,aAGpE,SAASwB,EAAmBC,GAC1B,QAASA,EAAMC,kBAAoBD,EAAME,SAAWF,EAAMG,SAAWH,EAAMI,UAAYJ,EAAMK,OAAOC,mBAEtG,SAASC,EAAkBC,GACzBC,iBAAiB,SAAS,SAAST,GACjC,GAAID,EAAmBC,IACjBA,EAAMU,OAAS,EAAG,CACpB,IAAIhC,EAAUmB,EAA8BG,EAAMK,OAAQ,WACtD3B,GAAWA,EAAQiC,YAA4C,WAA9BjC,EAAQiC,WAAWrB,SACtDkB,EAAS9B,EAAQiC,gBAItB,GACHF,iBAAiB,WAAW,SAAST,GACnC,GAAID,EAAmBC,KACA,IAAjBA,EAAMY,SAAkC,IAAjBZ,EAAMY,SAAe,CAC9C,IAAIlC,EAAUmB,EAA8BG,EAAMK,OAAQ,WACtD3B,GAAWA,EAAQiC,YAA4C,WAA9BjC,EAAQiC,WAAWrB,UACtDkB,EAAS9B,EAAQiC,YACjBX,EAAMa,sBAIX,GAEL,SAASC,EAAcpC,GACrB,IAAIsB,EAAQrB,SAASoC,YAAY,SACjCf,EAAMgB,UAAU,UAAU,GAAO,GACjCtC,EAAQuC,cAAcjB,GAKxB,SAASH,EAA8BnB,EAASY,GAC9C,GAA8B,mBAAnBZ,EAAQwC,QACjB,OAAOxC,EAAQwC,QAAQ5B,GAEvB,KAAOZ,GAAS,CACd,GAAIA,EAAQY,SAAWA,EACrB,OAAOZ,EAEPA,EAAUA,EAAQiC,YA9KrB5B,IAUHJ,SAASwC,KAAKC,mBAAmB,aAAc,UAAYpC,EAAS,YAGhEV,EAAYK,SAASC,cAAc,WAAWyC,YAAY/C,UAC1DC,EAAeD,EAAUC,aAAcC,EAAkBF,EAAUE,gBACnEC,EAAO6C,OAAOC,yBAAyBjD,EAAW,QACtDgD,OAAOE,iBAAiBlD,EAAW,CACjCG,KAAM,CACJgD,IAAK,WACH,MAAoB,WAAhBC,KAAKpC,QACAoC,KAAK5B,aAAa,QAErBrB,GAAQA,EAAKgD,IACRhD,EAAKgD,IAAIhC,KAAKiC,WADvB,GAKJC,IAAK,SAAaC,GAChB,MAAoB,WAAhBF,KAAKpC,QACAsC,EAAQF,KAAKnD,aAAa,OAAQ,IAAMmD,KAAKlD,gBAAgB,QAEhEC,GAAQA,EAAKkD,IACRlD,EAAKkD,IAAIlC,KAAKiC,KAAME,QAD7B,IAMNrD,aAAc,CACZqD,MAAO,SAAeC,EAAMC,GAC1B,IAAIC,EAAQL,KACRjC,EAAO,WACT,OAAOlB,EAAakB,KAAKsC,EAAOF,EAAMC,IAExC,GAAY,QAARD,GAAkC,WAAhBH,KAAKpC,QAAsB,CAC/C,IAAI0C,EAAUN,KAAK5B,aAAa,QAC5BmC,EAASxC,IACb,IAAKuC,EAAS,CACZ,IAAIrC,EAAU+B,KAAKQ,cAAc,WAC7BvC,GAASA,EAAQpB,aAAa,iBAAiB,GACnDuC,EAAcY,MAEhB,OAAOO,EAET,OAAOxC,MAGXjB,gBAAiB,CACfoD,MAAO,SAAeC,GACpB,IAAIM,EAAST,KACTjC,EAAO,WACT,OAAOjB,EAAgBiB,KAAK0C,EAAQN,IAEtC,GAAY,QAARA,GAAkC,WAAhBH,KAAKpC,QAAsB,CAC/C,IAAI0C,EAAUN,KAAK5B,aAAa,QAC5BmC,EAASxC,IACb,GAAIuC,EAAS,CACX,IAAIrC,EAAU+B,KAAKQ,cAAc,WAC7BvC,GAASA,EAAQpB,aAAa,iBAAiB,GACnDuC,EAAcY,MAEhB,OAAOO,EAET,OAAOxC,QAMbc,GAAkB,SAAS7B,GACzBA,EAAQoB,aAAa,QAAUpB,EAAQF,gBAAgB,QAAUE,EAAQH,aAAa,OAAQ,OA6BhGa,EAA2BT,UACvByD,OAAOC,iBACT,IAAIA,kBAAiB,SAASC,GAC5BpD,EAAQO,KAAK6C,GAAW,SAASC,GAC/BrD,EAAQO,KAAK8C,EAASC,WAAYpD,SAEnCqD,QAAQ9D,SAAS+D,gBAAiB,CACnCC,SAAS,EACTC,WAAW,IAGbjE,SAAS8B,iBAAiB,mBAAmB,SAAST,GACpDZ,EAA2BY,EAAMK,YAlHnCtB,IAAiBA,IA6EfqD,OAAOC,iBACT,IAAIA,kBAAiB,SAASC,GAC5BpD,EAAQO,KAAK6C,GAAW,SAASC,GAC/B,IAAIlC,EAASkC,EAASlC,OAAQwC,EAAgBN,EAASM,cACjC,WAAlBxC,EAAOf,SAAyC,QAAjBuD,GACjC/B,EAAcT,SAGjBoC,QAAQ9D,SAAS+D,gBAAiB,CACnCI,YAAY,EACZH,SAAS,IAGXpC,GAAkB,SAAS7B,GACzB,IAAIsD,EAAUtD,EAAQqE,aAAa,QACnCC,YAAW,WACT,IAAIC,EAASvE,EAAQqE,aAAa,QAC9Bf,GAAWiB,GACbnC,EAAcpC,KAEf,OAjHX,I,gBCIC,WACD,aAGA,GAAsB,iBAAX0D,OAMX,GAAI,yBAA0BA,QAC1B,8BAA+BA,QAC/B,sBAAuBA,OAAOc,0BAA0B5E,UAIpD,mBAAoB8D,OAAOc,0BAA0B5E,WACzDgD,OAAO6B,eAAef,OAAOc,0BAA0B5E,UACrD,iBAAkB,CAClBmD,IAAK,WACH,OAAOC,KAAK0B,kBAAoB,SAVxC,CAkCA,IAAIzE,EAAW,SAAU0E,GAGvB,IAFA,IAAIC,EAOHlB,OAAOzD,SANJ4E,EAAQC,EAAgBF,GACrBC,GAELA,EAAQC,EADRF,EAAMC,EAAME,eAGd,OAAOH,EAPM,GAgBXI,EAAW,GAOXC,EAAqB,KAMrBC,EAAkB,KAwFtBC,EAAqBvF,UAAUwF,iBAAmB,IAQlDD,EAAqBvF,UAAUyF,cAAgB,KAM/CF,EAAqBvF,UAAU0F,uBAAwB,EAYvDH,EAAqBI,yBAA2B,WAiB9C,OAhBKN,IAKHA,EAAqB,SAASO,EAAoBC,GAI9CP,EAHGM,GAAuBC,EAGRC,EAAsBF,EAAoBC,GAgrB3D,CACLE,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,MAAO,EACPC,OAAQ,GAprBNhB,EAASxE,SAAQ,SAASyF,GACxBA,EAASC,8BAIRjB,GAOTE,EAAqBgB,yBAA2B,WAC9ClB,EAAqB,KACrBC,EAAkB,MASpBC,EAAqBvF,UAAUmE,QAAU,SAASpC,GAKhD,IAJ8BqB,KAAKoD,oBAAoBC,MAAK,SAASC,GACnE,OAAOA,EAAKtG,SAAW2B,KAGzB,CAIA,IAAMA,GAA6B,GAAnBA,EAAO4E,SACrB,MAAM,IAAIC,MAAM,6BAGlBxD,KAAKyD,oBACLzD,KAAKoD,oBAAoBM,KAAK,CAAC1G,QAAS2B,EAAQgF,MAAO,OACvD3D,KAAK4D,sBAAsBjF,EAAOoD,eAClC/B,KAAKkD,2BAQPf,EAAqBvF,UAAUiH,UAAY,SAASlF,GAClDqB,KAAKoD,oBACDpD,KAAKoD,oBAAoBU,QAAO,SAASR,GACvC,OAAOA,EAAKtG,SAAW2B,KAE7BqB,KAAK+D,wBAAwBpF,EAAOoD,eACG,GAAnC/B,KAAKoD,oBAAoBY,QAC3BhE,KAAKiE,uBAQT9B,EAAqBvF,UAAUsH,WAAa,WAC1ClE,KAAKoD,oBAAsB,GAC3BpD,KAAKmE,6BACLnE,KAAKiE,uBAUP9B,EAAqBvF,UAAUwH,YAAc,WAC3C,IAAIC,EAAUrE,KAAKsE,eAAe7G,QAElC,OADAuC,KAAKsE,eAAiB,GACfD,GAaTlC,EAAqBvF,UAAU2H,gBAAkB,SAASC,GACxD,IAAIC,EAAYD,GAAiB,CAAC,GAGlC,OAFKE,MAAMC,QAAQF,KAAYA,EAAY,CAACA,IAErCA,EAAUG,OAAOd,QAAO,SAASe,EAAGC,EAAGC,GAC5C,GAAgB,iBAALF,GAAiBG,MAAMH,IAAMA,EAAI,GAAKA,EAAI,EACnD,MAAM,IAAIrB,MAAM,0DAElB,OAAOqB,IAAME,EAAED,EAAI,OAgBvB3C,EAAqBvF,UAAUqI,iBAAmB,SAASC,GACzD,IACIC,GADeD,GAAkB,OACVE,MAAM,OAAOC,KAAI,SAASC,GACnD,IAAIC,EAAQ,wBAAwBC,KAAKF,GACzC,IAAKC,EACH,MAAM,IAAI/B,MAAM,qDAElB,MAAO,CAACtD,MAAOuF,WAAWF,EAAM,IAAKG,KAAMH,EAAM,OAQnD,OAJAJ,EAAQ,GAAKA,EAAQ,IAAMA,EAAQ,GACnCA,EAAQ,GAAKA,EAAQ,IAAMA,EAAQ,GACnCA,EAAQ,GAAKA,EAAQ,IAAMA,EAAQ,GAE5BA,GAUThD,EAAqBvF,UAAUgH,sBAAwB,SAAShC,GAC9D,IAAI+D,EAAM/D,EAAIgE,YACd,GAAKD,IAI0C,GAA3C3F,KAAK6F,qBAAqBC,QAAQlE,GAAtC,CAMA,IAAI9C,EAAWkB,KAAKkD,uBAChB6C,EAAqB,KACrBC,EAAc,KAIdhG,KAAKqC,cACP0D,EAAqBJ,EAAIM,YAAYnH,EAAUkB,KAAKqC,gBAEpD6D,EAASP,EAAK,SAAU7G,GAAU,GAClCoH,EAAStE,EAAK,SAAU9C,GAAU,GAC9BkB,KAAKsC,uBAAyB,qBAAsBqD,IACtDK,EAAc,IAAIL,EAAIhF,iBAAiB7B,IAC3BiC,QAAQa,EAAK,CACvBR,YAAY,EACZF,WAAW,EACXiF,eAAe,EACflF,SAAS,KAKfjB,KAAK6F,qBAAqBnC,KAAK9B,GAC/B5B,KAAKoG,wBAAwB1C,MAAK,WAGhC,IAAIiC,EAAM/D,EAAIgE,YAEVD,IACEI,GACFJ,EAAIU,cAAcN,GAEpBO,EAAYX,EAAK,SAAU7G,GAAU,IAGvCwH,EAAY1E,EAAK,SAAU9C,GAAU,GACjCkH,GACFA,EAAY9B,gBAKhB,IAAIqC,EACDvG,KAAKrC,OAASqC,KAAKrC,KAAKoE,eAAiB/B,KAAKrC,OAAUV,EAC3D,GAAI2E,GAAO2E,EAAS,CAClB,IAAI1E,EAAQC,EAAgBF,GACxBC,GACF7B,KAAK4D,sBAAsB/B,EAAME,kBAWvCI,EAAqBvF,UAAUmH,wBAA0B,SAASnC,GAChE,IAAI4E,EAAQxG,KAAK6F,qBAAqBC,QAAQlE,GAC9C,IAAc,GAAV4E,EAAJ,CAIA,IAAID,EACDvG,KAAKrC,OAASqC,KAAKrC,KAAKoE,eAAiB/B,KAAKrC,OAAUV,EAoB3D,IAhBI+C,KAAKoD,oBAAoBC,MAAK,SAASC,GACrC,IAAImD,EAAUnD,EAAKtG,QAAQ+E,cAE3B,GAAI0E,GAAW7E,EACb,OAAO,EAGT,KAAO6E,GAAWA,GAAWF,GAAS,CACpC,IAAI1E,EAAQC,EAAgB2E,GAE5B,IADAA,EAAU5E,GAASA,EAAME,gBACVH,EACb,OAAO,EAGX,OAAO,KAEb,CAKA,IAAI8E,EAAc1G,KAAKoG,wBAAwBI,GAM/C,GALAxG,KAAK6F,qBAAqBc,OAAOH,EAAO,GACxCxG,KAAKoG,wBAAwBO,OAAOH,EAAO,GAC3CE,IAGI9E,GAAO2E,EAAS,CAClB,IAAI1E,EAAQC,EAAgBF,GACxBC,GACF7B,KAAK+D,wBAAwBlC,EAAME,mBAWzCI,EAAqBvF,UAAUuH,2BAA6B,WAC1D,IAAIyC,EAAe5G,KAAKoG,wBAAwB3I,MAAM,GACtDuC,KAAK6F,qBAAqB7B,OAAS,EACnChE,KAAKoG,wBAAwBpC,OAAS,EACtC,IAAK,IAAIc,EAAI,EAAGA,EAAI8B,EAAa5C,OAAQc,IACvC8B,EAAa9B,MAWjB3C,EAAqBvF,UAAUsG,uBAAyB,WACtD,GAAKlD,KAAKrC,OAAQsE,GAAuBC,EAAzC,CAKA,IAAI2E,EAAc7G,KAAK8G,eACnBC,EAAWF,EAAc7G,KAAKgH,eAiZ3B,CACLrE,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,MAAO,EACPC,OAAQ,GArZVhD,KAAKoD,oBAAoB5F,SAAQ,SAAS8F,GACxC,IAAI3E,EAAS2E,EAAKtG,QACdiK,EAAaC,EAAsBvI,GACnCwI,EAAqBnH,KAAKoH,oBAAoBzI,GAC9C0I,EAAW/D,EAAKK,MAChBlB,EAAmBoE,GAAeM,GAClCnH,KAAKsH,kCAAkC3I,EAAQsI,EAAYF,GAE3DQ,EAAa,KACZvH,KAAKoH,oBAAoBzI,GAElBsD,IAAsBjC,KAAKrC,OACrC4J,EAAaR,GAFbQ,EAqYG,CACL5E,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,MAAO,EACPC,OAAQ,GAtYR,IAAIwE,EAAWlE,EAAKK,MAAQ,IAAInC,EAA0B,CACxDiG,KAkQG/G,OAAOgH,aAAeA,YAAYC,KAAOD,YAAYC,MAjQxDhJ,OAAQA,EACR6D,mBAAoByE,EACpBM,WAAYA,EACZ9E,iBAAkBA,IAGf4E,EAEMR,GAAeM,EAGpBnH,KAAK4H,qBAAqBP,EAAUG,IACtCxH,KAAKsE,eAAeZ,KAAK8D,GAMvBH,GAAYA,EAASQ,gBACvB7H,KAAKsE,eAAeZ,KAAK8D,GAZ3BxH,KAAKsE,eAAeZ,KAAK8D,KAe1BxH,MAECA,KAAKsE,eAAeN,QACtBhE,KAAK8H,UAAU9H,KAAKoE,cAAepE,QAkBvCmC,EAAqBvF,UAAU0K,kCAC3B,SAAS3I,EAAQsI,EAAYF,GAE/B,GAA+C,QAA3CrG,OAAOqH,iBAAiBpJ,GAAQqJ,QAApC,CAMA,IAJA,IAqR+BC,EAAOC,EAClCvF,EACAC,EACAC,EACAC,EACAC,EACAC,EA3RAP,EAAmBwE,EACnBkB,EAASC,EAAczJ,GACvB0J,GAAS,GAELA,GAAUF,GAAQ,CACxB,IAAIG,EAAa,KACbC,EAAyC,GAAnBJ,EAAO5E,SAC7B7C,OAAOqH,iBAAiBI,GAAU,GAGtC,GAAmC,QAA/BI,EAAoBP,QAAmB,OAAO,KAElD,GAAIG,GAAUnI,KAAKrC,MAA0C,GAAlCwK,EAAO5E,SAEhC,GADA8E,GAAS,EACLF,GAAUnI,KAAKrC,MAAQwK,GAAUlL,EAC/BgF,IAAuBjC,KAAKrC,MACzBuE,GACwB,GAAzBA,EAAgBa,OAAwC,GAA1Bb,EAAgBc,QAEhDmF,EAAS,KACTG,EAAa,KACb7F,EAAmB,MAEnB6F,EAAapG,EAGfoG,EAAavB,MAEV,CAEL,IAAIlF,EAAQuG,EAAcD,GACtBK,EAAY3G,GAASqF,EAAsBrF,GAC3C4G,EACA5G,GACA7B,KAAKsH,kCAAkCzF,EAAO2G,EAAWzB,GACzDyB,GAAaC,GACfN,EAAStG,EACTyG,EAAa5F,EAAsB8F,EAAWC,KAE9CN,EAAS,KACT1F,EAAmB,UAGlB,CAKL,IAAIb,EAAMuG,EAAOpG,cACboG,GAAUvG,EAAI8G,MACdP,GAAUvG,EAAIZ,iBACkB,WAAhCuH,EAAoBI,WACtBL,EAAapB,EAAsBiB,IASvC,GAHIG,IA2NyBL,EA1NgBK,EA0NTJ,EA1NqBzF,EA2NvDE,SACAC,SACAC,SACAC,SACAC,SACAC,SALAL,EAAMiG,KAAKC,IAAIZ,EAAMtF,IAAKuF,EAAMvF,KAChCC,EAASgG,KAAKE,IAAIb,EAAMrF,OAAQsF,EAAMtF,QACtCC,EAAO+F,KAAKC,IAAIZ,EAAMpF,KAAMqF,EAAMrF,MAClCC,EAAQ8F,KAAKE,IAAIb,EAAMnF,MAAOoF,EAAMpF,OAEpCE,EAASJ,EAASD,EAhOlBF,GA+NAM,EAAQD,EAAQD,IAGH,GAAKG,GAAU,GAAM,CACpCL,IAAKA,EACLC,OAAQA,EACRC,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,OAAQA,IACL,OAvOEP,EAAkB,MACvB0F,EAASA,GAAUC,EAAcD,GAEnC,OAAO1F,IASTN,EAAqBvF,UAAUoK,aAAe,WAC5C,IAAID,EACJ,GAAI/G,KAAKrC,OAASoL,EAAM/I,KAAKrC,MAC3BoJ,EAAWG,EAAsBlH,KAAKrC,UACjC,CAEL,IAAIiE,EAAMmH,EAAM/I,KAAKrC,MAAQqC,KAAKrC,KAAOV,EACrC+L,EAAOpH,EAAIZ,gBACX0H,EAAO9G,EAAI8G,KACf3B,EAAW,CACTpE,IAAK,EACLE,KAAM,EACNC,MAAOkG,EAAKC,aAAeP,EAAKO,YAChClG,MAAOiG,EAAKC,aAAeP,EAAKO,YAChCrG,OAAQoG,EAAKE,cAAgBR,EAAKQ,aAClClG,OAAQgG,EAAKE,cAAgBR,EAAKQ,cAGtC,OAAOlJ,KAAKmJ,wBAAwBpC,IAUtC5E,EAAqBvF,UAAUuM,wBAA0B,SAASC,GAChE,IAAIjE,EAAUnF,KAAKqJ,kBAAkBhE,KAAI,SAASC,EAAQR,GACxD,MAAsB,MAAfQ,EAAOI,KAAeJ,EAAOpF,MAChCoF,EAAOpF,OAAS4E,EAAI,EAAIsE,EAAKrG,MAAQqG,EAAKpG,QAAU,OAEtDsG,EAAU,CACZ3G,IAAKyG,EAAKzG,IAAMwC,EAAQ,GACxBrC,MAAOsG,EAAKtG,MAAQqC,EAAQ,GAC5BvC,OAAQwG,EAAKxG,OAASuC,EAAQ,GAC9BtC,KAAMuG,EAAKvG,KAAOsC,EAAQ,IAK5B,OAHAmE,EAAQvG,MAAQuG,EAAQxG,MAAQwG,EAAQzG,KACxCyG,EAAQtG,OAASsG,EAAQ1G,OAAS0G,EAAQ3G,IAEnC2G,GAcTnH,EAAqBvF,UAAUgL,qBAC3B,SAASP,EAAUG,GAIrB,IAAI+B,EAAWlC,GAAYA,EAASQ,eAChCR,EAAS3F,mBAAqB,GAAK,EACnC8H,EAAWhC,EAASK,eACpBL,EAAS9F,mBAAqB,GAAK,EAGvC,GAAI6H,IAAaC,EAEjB,IAAK,IAAI1E,EAAI,EAAGA,EAAI9E,KAAKyJ,WAAWzF,OAAQc,IAAK,CAC/C,IAAIL,EAAYzE,KAAKyJ,WAAW3E,GAIhC,GAAIL,GAAa8E,GAAY9E,GAAa+E,GACtC/E,EAAY8E,GAAa9E,EAAY+E,EACvC,OAAO,IAWbrH,EAAqBvF,UAAUkK,aAAe,WAC5C,OAAQ9G,KAAKrC,MAAQ+L,EAAazM,EAAU+C,KAAKrC,OAUnDwE,EAAqBvF,UAAUwK,oBAAsB,SAASzI,GAC5D,IAAI4H,EACDvG,KAAKrC,OAASqC,KAAKrC,KAAKoE,eAAiB/B,KAAKrC,OAAUV,EAC3D,OACEyM,EAAanD,EAAS5H,MACpBqB,KAAKrC,MAAQ4I,GAAW5H,EAAOoD,gBAUrCI,EAAqBvF,UAAU6G,kBAAoB,WAC7CzB,EAAS8D,QAAQ9F,MAAQ,GAC3BgC,EAAS0B,KAAK1D,OASlBmC,EAAqBvF,UAAUqH,oBAAsB,WACnD,IAAIuC,EAAQxE,EAAS8D,QAAQ9F,OACf,GAAVwG,GAAaxE,EAAS2E,OAAOH,EAAO,IA4P1C9F,OAAOyB,qBAAuBA,EAC9BzB,OAAOc,0BAA4BA,EA38BnC,SAASM,EAAgBF,GACvB,IACE,OAAOA,EAAIgE,aAAehE,EAAIgE,YAAY+D,cAAgB,KAC1D,MAAOC,GAEP,OAAO,MA6CX,SAASpI,EAA0BmC,GACjC3D,KAAKyH,KAAO9D,EAAM8D,KAClBzH,KAAKrB,OAASgF,EAAMhF,OACpBqB,KAAKuH,WAAasC,EAAclG,EAAM4D,YACtCvH,KAAKwC,mBAAqBqH,EAAclG,EAAMnB,oBAC9CxC,KAAKyC,iBAAmBoH,EAAclG,EAAMlB,kBA8xBrC,CACLE,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,MAAO,EACPC,OAAQ,IAnyBVhD,KAAK6H,iBAAmBlE,EAAMlB,iBAG9B,IAAIwE,EAAajH,KAAKwC,mBAClBsH,EAAa7C,EAAWlE,MAAQkE,EAAWjE,OAC3CP,EAAmBzC,KAAKyC,iBACxBsH,EAAmBtH,EAAiBM,MAAQN,EAAiBO,OAM/DhD,KAAK0B,kBAHHoI,EAGuBE,QAAQD,EAAmBD,GAAYG,QAAQ,IAG/CjK,KAAK6H,eAAiB,EAAI,EAcvD,SAAS1F,EAAqBrD,EAAUoL,GAEtC,IA6oBgBC,EAAIC,EAChBC,EA9oBAC,EAAUJ,GAAe,GAE7B,GAAuB,mBAAZpL,EACT,MAAM,IAAI0E,MAAM,+BAGlB,GACE8G,EAAQ3M,MACiB,GAAzB2M,EAAQ3M,KAAK4F,UACY,GAAzB+G,EAAQ3M,KAAK4F,SAEb,MAAM,IAAIC,MAAM,sCAIlBxD,KAAKkD,wBA8nBWiH,EA7nBZnK,KAAKkD,uBAAuBqH,KAAKvK,MA6nBjBoK,EA7nBwBpK,KAAKoC,iBA8nB7CiI,EAAQ,KACL,WACAA,IACHA,EAAQ/I,YAAW,WACjB6I,IACAE,EAAQ,OACPD,MAjoBPpK,KAAK8H,UAAYhJ,EACjBkB,KAAKoD,oBAAsB,GAC3BpD,KAAKsE,eAAiB,GACtBtE,KAAKqJ,kBAAoBrJ,KAAKiF,iBAAiBqF,EAAQE,YAGvDxK,KAAKyJ,WAAazJ,KAAKuE,gBAAgB+F,EAAQ7F,WAC/CzE,KAAKrC,KAAO2M,EAAQ3M,MAAQ,KAC5BqC,KAAKwK,WAAaxK,KAAKqJ,kBAAkBhE,KAAI,SAASC,GACpD,OAAOA,EAAOpF,MAAQoF,EAAOI,QAC5B+E,KAAK,KAGRzK,KAAK6F,qBAAuB,GAE5B7F,KAAKoG,wBAA0B,GAgoBjC,SAASF,EAASwE,EAAMpM,EAAO6L,EAAIQ,GACG,mBAAzBD,EAAK3L,iBACd2L,EAAK3L,iBAAiBT,EAAO6L,EAAIQ,IAAkB,GAEjB,mBAApBD,EAAKE,aACnBF,EAAKE,YAAY,KAAOtM,EAAO6L,GAanC,SAAS7D,EAAYoE,EAAMpM,EAAO6L,EAAIQ,GACG,mBAA5BD,EAAKG,oBACdH,EAAKG,oBAAoBvM,EAAO6L,EAAIQ,IAAkB,GAEnB,mBAArBD,EAAKI,cACnBJ,EAAKI,aAAa,KAAOxM,EAAO6L,GAoCpC,SAASjD,EAAsB6D,GAC7B,IAAI3B,EAEJ,IACEA,EAAO2B,EAAG7D,wBACV,MAAO8D,IAKT,OAAK5B,GAGCA,EAAKrG,OAASqG,EAAKpG,SACvBoG,EAAO,CACLzG,IAAKyG,EAAKzG,IACVG,MAAOsG,EAAKtG,MACZF,OAAQwG,EAAKxG,OACbC,KAAMuG,EAAKvG,KACXE,MAAOqG,EAAKtG,MAAQsG,EAAKvG,KACzBG,OAAQoG,EAAKxG,OAASwG,EAAKzG,MAGxByG,GAUA,CACLzG,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,MAAO,EACPC,OAAQ,GAYZ,SAAS6G,EAAcT,GAErB,OAAKA,GAAQ,MAAOA,EACXA,EAMF,CACLzG,IAAKyG,EAAKzG,IACVsI,EAAG7B,EAAKzG,IACRC,OAAQwG,EAAKxG,OACbC,KAAMuG,EAAKvG,KACXqI,EAAG9B,EAAKvG,KACRC,MAAOsG,EAAKtG,MACZC,MAAOqG,EAAKrG,MACZC,OAAQoG,EAAKpG,QAYjB,SAASN,EAAsByI,EAAoBC,GACjD,IAAIzI,EAAMyI,EAAuBzI,IAAMwI,EAAmBxI,IACtDE,EAAOuI,EAAuBvI,KAAOsI,EAAmBtI,KAC5D,MAAO,CACLF,IAAKA,EACLE,KAAMA,EACNG,OAAQoI,EAAuBpI,OAC/BD,MAAOqI,EAAuBrI,MAC9BH,OAAQD,EAAMyI,EAAuBpI,OACrCF,MAAOD,EAAOuI,EAAuBrI,OAYzC,SAAS2G,EAAavB,EAAQkD,GAE5B,IADA,IAAIX,EAAOW,EACJX,GAAM,CACX,GAAIA,GAAQvC,EAAQ,OAAO,EAE3BuC,EAAOtC,EAAcsC,GAEvB,OAAO,EAUT,SAAStC,EAAcsC,GACrB,IAAIvC,EAASuC,EAAKzL,WAElB,OAAoC,GAAhCyL,EAAKnH,UAAgCmH,GAAQzN,EAExC6E,EAAgB4I,IAIrBvC,GAAUA,EAAOmD,eACnBnD,EAASA,EAAOmD,aAAarM,YAG3BkJ,GAA6B,IAAnBA,EAAO5E,UAAkB4E,EAAOoD,KAErCpD,EAAOoD,KAGTpD,GAQT,SAASY,EAAM2B,GACb,OAAOA,GAA0B,IAAlBA,EAAKnH,UAr+BtB,KCPIiI,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUC,QAG3C,IAAIC,EAASJ,EAAyBE,GAAY,CAGjDC,QAAS,IAOV,OAHAE,EAAoBH,GAAUE,EAAQA,EAAOD,QAASF,GAG/CG,EAAOD,QCnBfF,EAAoBK,EAAI,SAASF,GAChC,IAAIG,EAASH,GAAUA,EAAOI,WAC7B,WAAa,OAAOJ,EAAgB,SACpC,WAAa,OAAOA,GAErB,OADAH,EAAoBQ,EAAEF,EAAQ,CAAEhH,EAAGgH,IAC5BA,GCLRN,EAAoBQ,EAAI,SAASN,EAASO,GACzC,IAAI,IAAIC,KAAOD,EACXT,EAAoBW,EAAEF,EAAYC,KAASV,EAAoBW,EAAET,EAASQ,IAC5EvM,OAAO6B,eAAekK,EAASQ,EAAK,CAAEE,YAAY,EAAMtM,IAAKmM,EAAWC,MCJ3EV,EAAoBW,EAAI,SAASE,EAAKC,GAAQ,OAAO3M,OAAOhD,UAAU4P,eAAezO,KAAKuO,EAAKC,I","file":"polyfills.js","sourcesContent":["/*\nDetails Element Polyfill 2.4.0\nCopyright © 2019 Javan Makhmali\n */\n(function() {\n  \"use strict\";\n  var element = document.createElement(\"details\");\n  var elementIsNative = typeof HTMLDetailsElement != \"undefined\" && element instanceof HTMLDetailsElement;\n  var support = {\n    open: \"open\" in element || elementIsNative,\n    toggle: \"ontoggle\" in element\n  };\n  var styles = '\\ndetails, summary {\\n  display: block;\\n}\\ndetails:not([open]) > *:not(summary) {\\n  display: none;\\n}\\nsummary::before {\\n  content: \"►\";\\n  padding-right: 0.3rem;\\n  font-size: 0.6rem;\\n  cursor: default;\\n}\\n[open] > summary::before {\\n  content: \"▼\";\\n}\\n';\n  var _ref = [], forEach = _ref.forEach, slice = _ref.slice;\n  if (!support.open) {\n    polyfillStyles();\n    polyfillProperties();\n    polyfillToggle();\n    polyfillAccessibility();\n  }\n  if (support.open && !support.toggle) {\n    polyfillToggleEvent();\n  }\n  function polyfillStyles() {\n    document.head.insertAdjacentHTML(\"afterbegin\", \"<style>\" + styles + \"</style>\");\n  }\n  function polyfillProperties() {\n    var prototype = document.createElement(\"details\").constructor.prototype;\n    var setAttribute = prototype.setAttribute, removeAttribute = prototype.removeAttribute;\n    var open = Object.getOwnPropertyDescriptor(prototype, \"open\");\n    Object.defineProperties(prototype, {\n      open: {\n        get: function get() {\n          if (this.tagName == \"DETAILS\") {\n            return this.hasAttribute(\"open\");\n          } else {\n            if (open && open.get) {\n              return open.get.call(this);\n            }\n          }\n        },\n        set: function set(value) {\n          if (this.tagName == \"DETAILS\") {\n            return value ? this.setAttribute(\"open\", \"\") : this.removeAttribute(\"open\");\n          } else {\n            if (open && open.set) {\n              return open.set.call(this, value);\n            }\n          }\n        }\n      },\n      setAttribute: {\n        value: function value(name, _value) {\n          var _this = this;\n          var call = function call() {\n            return setAttribute.call(_this, name, _value);\n          };\n          if (name == \"open\" && this.tagName == \"DETAILS\") {\n            var wasOpen = this.hasAttribute(\"open\");\n            var result = call();\n            if (!wasOpen) {\n              var summary = this.querySelector(\"summary\");\n              if (summary) summary.setAttribute(\"aria-expanded\", true);\n              triggerToggle(this);\n            }\n            return result;\n          }\n          return call();\n        }\n      },\n      removeAttribute: {\n        value: function value(name) {\n          var _this2 = this;\n          var call = function call() {\n            return removeAttribute.call(_this2, name);\n          };\n          if (name == \"open\" && this.tagName == \"DETAILS\") {\n            var wasOpen = this.hasAttribute(\"open\");\n            var result = call();\n            if (wasOpen) {\n              var summary = this.querySelector(\"summary\");\n              if (summary) summary.setAttribute(\"aria-expanded\", false);\n              triggerToggle(this);\n            }\n            return result;\n          }\n          return call();\n        }\n      }\n    });\n  }\n  function polyfillToggle() {\n    onTogglingTrigger(function(element) {\n      element.hasAttribute(\"open\") ? element.removeAttribute(\"open\") : element.setAttribute(\"open\", \"\");\n    });\n  }\n  function polyfillToggleEvent() {\n    if (window.MutationObserver) {\n      new MutationObserver(function(mutations) {\n        forEach.call(mutations, function(mutation) {\n          var target = mutation.target, attributeName = mutation.attributeName;\n          if (target.tagName == \"DETAILS\" && attributeName == \"open\") {\n            triggerToggle(target);\n          }\n        });\n      }).observe(document.documentElement, {\n        attributes: true,\n        subtree: true\n      });\n    } else {\n      onTogglingTrigger(function(element) {\n        var wasOpen = element.getAttribute(\"open\");\n        setTimeout(function() {\n          var isOpen = element.getAttribute(\"open\");\n          if (wasOpen != isOpen) {\n            triggerToggle(element);\n          }\n        }, 1);\n      });\n    }\n  }\n  function polyfillAccessibility() {\n    setAccessibilityAttributes(document);\n    if (window.MutationObserver) {\n      new MutationObserver(function(mutations) {\n        forEach.call(mutations, function(mutation) {\n          forEach.call(mutation.addedNodes, setAccessibilityAttributes);\n        });\n      }).observe(document.documentElement, {\n        subtree: true,\n        childList: true\n      });\n    } else {\n      document.addEventListener(\"DOMNodeInserted\", function(event) {\n        setAccessibilityAttributes(event.target);\n      });\n    }\n  }\n  function setAccessibilityAttributes(root) {\n    findElementsWithTagName(root, \"SUMMARY\").forEach(function(summary) {\n      var details = findClosestElementWithTagName(summary, \"DETAILS\");\n      summary.setAttribute(\"aria-expanded\", details.hasAttribute(\"open\"));\n      if (!summary.hasAttribute(\"tabindex\")) summary.setAttribute(\"tabindex\", \"0\");\n      if (!summary.hasAttribute(\"role\")) summary.setAttribute(\"role\", \"button\");\n    });\n  }\n  function eventIsSignificant(event) {\n    return !(event.defaultPrevented || event.ctrlKey || event.metaKey || event.shiftKey || event.target.isContentEditable);\n  }\n  function onTogglingTrigger(callback) {\n    addEventListener(\"click\", function(event) {\n      if (eventIsSignificant(event)) {\n        if (event.which <= 1) {\n          var element = findClosestElementWithTagName(event.target, \"SUMMARY\");\n          if (element && element.parentNode && element.parentNode.tagName == \"DETAILS\") {\n            callback(element.parentNode);\n          }\n        }\n      }\n    }, false);\n    addEventListener(\"keydown\", function(event) {\n      if (eventIsSignificant(event)) {\n        if (event.keyCode == 13 || event.keyCode == 32) {\n          var element = findClosestElementWithTagName(event.target, \"SUMMARY\");\n          if (element && element.parentNode && element.parentNode.tagName == \"DETAILS\") {\n            callback(element.parentNode);\n            event.preventDefault();\n          }\n        }\n      }\n    }, false);\n  }\n  function triggerToggle(element) {\n    var event = document.createEvent(\"Event\");\n    event.initEvent(\"toggle\", false, false);\n    element.dispatchEvent(event);\n  }\n  function findElementsWithTagName(root, tagName) {\n    return (root.tagName == tagName ? [ root ] : []).concat(typeof root.getElementsByTagName == \"function\" ? slice.call(root.getElementsByTagName(tagName)) : []);\n  }\n  function findClosestElementWithTagName(element, tagName) {\n    if (typeof element.closest == \"function\") {\n      return element.closest(tagName);\n    } else {\n      while (element) {\n        if (element.tagName == tagName) {\n          return element;\n        } else {\n          element = element.parentNode;\n        }\n      }\n    }\n  }\n})();\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (\n    options.root &&\n    options.root.nodeType != 1 &&\n    options.root.nodeType != 9\n  ) {\n    throw new Error('root must be a Document or Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var rootBounds = null;\n    if (!this._rootContainsTarget(target)) {\n      rootBounds = getEmptyRect();\n    } else if (!crossOriginUpdater || this.root) {\n      rootBounds = rootRect;\n    }\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootBounds,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root && !isDoc(this.root)) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var doc = isDoc(this.root) ? this.root : document;\n    var html = doc.documentElement;\n    var body = doc.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  return (\n    containsDeep(rootDoc, target) &&\n    (!this.root || rootDoc == target.ownerDocument)\n  );\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  // If the parent has element that is assigned through shadow root slot\n  if (parent && parent.assignedSlot) {\n    parent = parent.assignedSlot.parentNode\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  return parent;\n}\n\n/**\n * Returns true if `node` is a Document.\n * @param {!Node} node\n * @returns {boolean}\n */\nfunction isDoc(node) {\n  return node && node.nodeType === 9;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"sourceRoot":""}