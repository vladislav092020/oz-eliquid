{% assign font_family_override = false %}
  {% if settings.font_family_override %}
   {% assign font_family_override = 'inherit' %}
  {% endif %}
{%- comment -%}type_body{%- endcomment -%}

{%- assign fonts_type_body_display = settings.font_display | default: 'auto' -%}

{%- if font_family_override and font_family_override != 'disable' -%}
  {%- comment -%}Font family override{%- endcomment -%}
  {%- assign fonts_type_body_family = font_family_override -%}
  {%- assign fonts_type_body_style = 'normal' -%}
  {%- assign fonts_type_body_weight = 400 -%}
  {%- assign fonts_type_body_style_italic = 'italic' -%}
  {%- assign fonts_type_body_weight_bolder = 700 -%}
  {%- assign fonts_type_body_weight_lighter = 300 -%}
{%- else -%}

  {%- comment -%}Normal{%- endcomment -%}

  {%- assign fonts_type_body_family = settings.type_body.family | append: ',' | append: settings.type_body.fallback_families -%}
  {%- assign fonts_type_body_style = settings.type_body.style -%}
  {%- assign fonts_type_body_weight = settings.type_body.weight | times: 1 -%}
  {{ settings.type_body | font_face: font_display: fonts_type_body_display }}

  {%- comment -%}Italic{%- endcomment -%}

  {%- assign fonts_type_body_style_italic = settings.type_body | font_modify: 'style', 'italic' | map: 'style' | default: 'italic' -%}
  {{ settings.type_body | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_body_display }}

  {%- comment -%}Bolder{%- endcomment -%}

  {%- assign fonts_weight_adjustment_default = 700 -%}
  {%- if fonts_type_body_weight > 700 -%}
    {%- assign fonts_weight_adjustment_default = fonts_type_body_weight -%}
  {%- endif -%}
  {%- assign fonts_type_body_bolder = settings.type_body | font_modify: 'weight', 'bolder' -%}
  {%- assign fonts_type_body_weight_bolder = fonts_type_body_bolder.weight | default: fonts_weight_adjustment_default -%}
  {{ fonts_type_body_bolder | font_face: font_display: fonts_type_body_display }}
  {{ fonts_type_body_bolder | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_body_display }}

  {%- comment -%}Lighter{%- endcomment -%}

  {%- assign fonts_weight_adjustment_default = 300 -%}
  {%- if fonts_type_body_weight < 300 -%}
    {%- assign fonts_weight_adjustment_default = fonts_type_body_weight -%}
  {%- endif -%}
  {%- assign fonts_type_body_lighter = settings.type_body | font_modify: 'weight', 'lighter' -%}
  {%- assign fonts_type_body_weight_lighter = fonts_type_body_lighter.weight | default: fonts_weight_adjustment_default -%}
  {{ fonts_type_body_lighter | font_face: font_display: fonts_type_body_display }}
  {{ fonts_type_body_lighter | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_body_display }}

{%- comment -%}Custom{%- endcomment -%}
{%- assign font_family = 'type_body_custom' -%}

{%- assign font_textarea = settings[font_family] -%}
{%- assign font_textarea_split = font_textarea | newline_to_br | split: '<br />' -%}
{%- assign font_additional_weights = 'initial,lighter,bolder' | split: ',' -%}

{%- for font in font_textarea_split -%}
  {%- assign font_split = font | split: ':' -%}
  {%- assign font_weight = 400 -%}
  {%- assign font_weight_name = 'initial' -%}
  {%- assign font_style = 'normal' -%}
  {%- assign font_style_name = 'initial' -%}

  {%- if font_split.size == 1 -%}
    {%- assign font_file = font_split[0] | strip -%}
  {%- else -%}
    {%- assign font_weight_style_space_to_hyphen = font_split[0] | replace: ' ', '-' -%}
    {%- assign font_weight_style = font_weight_style_space_to_hyphen | split: '-' -%}

    {%- if font_weight_style.size == 1 -%}
      {%- assign font_weight_style = font_weight_style[0] | strip | downcase -%}

      {%- if font_weight_style == 'italic' -%}
        {%- assign font_style_name = font_weight_style -%}
      {%- else -%}
        {%- assign font_weight_name = font_weight_style -%}
      {%- endif -%}
    {%- else -%}
      {%- assign font_weight_name = font_weight_style[0] | strip | downcase -%}
      {%- assign font_style_name = font_weight_style[1] | strip | downcase -%}
    {%- endif -%}

    {%- comment -%}
      At this point we should have valid a valid weight and style variables,
      we can continue onto the new iteration if it isnt valid.
    {%- endcomment -%}
    {%- if font_weight_name contains 'initial' != true and font_weight_name contains 'lighter' != true and font_weight_name contains 'bolder' != true -%}
      {%- continue -%}
    {%- endif -%}
    {%- if font_style_name != 'initial' and font_style_name != 'italic' -%}
      {%- continue -%}
    {%- endif -%}

    {%- if font_weight_name contains 'initial' -%}
      {%- if font_weight_name == 'initial' -%}
        {%- assign font_weight = 400 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'initial' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 400 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'lighter' -%}
      {%- if font_weight_name == 'lighter' -%}
        {%- assign font_weight = 300 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'lighter' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 300 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'bolder' -%}
      {%- if font_weight_name == 'bolder' -%}
        {%- assign font_weight = 700 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'bolder' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 700 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    {%- if font_style_name == 'italic' -%}
      {%- assign font_style = 'italic' -%}
    {%- endif -%}

    {%- assign font_file = font_split[1] | strip -%}
  {%- endif -%}

  {%- unless font_weight_name == 'initial' -%}
    {%- unless font_additional_weights contains font_weight_name -%}
      {%- continue -%}
    {%- endunless -%}
  {%- endunless -%}

  {%- assign font_file_split = font_file | split: '.' -%}

  {%- comment -%}
    If the assumed file component has a format associated with it,
    treat it as a file otherwise treat it as a family name and dont output a font face.
  {%- endcomment -%}
  {% if font_file_split.size > 1 %}
    {%- assign font_file_format_index = font_file_split | size | minus: 1 -%}
    {%- assign font_format = font_file_split[font_file_format_index] | strip -%}

    {%- comment -%}
      By checking if a font_file contains a forward slash we can
      determine whether we should treat the file as absolute URL
      or a file that must be sent through the file_url filter.

      This allows externally hosted files to be used as custom fonts.
    {%- endcomment -%}
    @font-face {
      font-family: "{{ font_family }}";
      font-weight: {{ font_weight }};
      font-style: {{ font_style }};
      font-display: {{ fonts_type_body_display }};
      src:
        url("{%- if font_file contains '/' -%}{{ font_file }}{%- else -%}{{ font_file | file_url }}{%- endif -%}")
        format("{{ font_format }}");
    }
  {% else %}
    {%- assign font_family = font_file -%}
  {% endif %}

  {%- if font_weight_name == 'initial' and font_style_name != 'italic' -%}
    {%- assign fonts_type_body_family = font_family -%}
    {%- assign fonts_type_body_style = font_style -%}
    {%- assign fonts_type_body_weight = font_weight -%}
    {%- assign fonts_type_body_style_italic = 'italic' -%}
  {%- elsif font_weight_name == 'lighter' -%}
    {%- assign fonts_type_body_weight_lighter = font_weight -%}
  {%- elsif font_weight_name == 'bolder' -%}
    {%- assign fonts_type_body_weight_bolder = font_weight -%}
  {%- endif -%}
{%- endfor -%}

{%- endif -%}


{%- comment -%}type_body_bold{%- endcomment -%}

{%- assign fonts_type_body_bold_display = settings.font_display | default: 'auto' -%}

{%- if font_family_override and font_family_override != 'disable' -%}
  {%- comment -%}Font family override{%- endcomment -%}
  {%- assign fonts_type_body_bold_family = font_family_override -%}
  {%- assign fonts_type_body_bold_style = 'normal' -%}
  {%- assign fonts_type_body_bold_weight = 400 -%}
  {%- assign fonts_type_body_bold_style_italic = 'italic' -%}
  {%- assign fonts_type_body_bold_weight_bolder = 700 -%}
  {%- assign fonts_type_body_bold_weight_lighter = 300 -%}
{%- else -%}

  {%- comment -%}Normal{%- endcomment -%}

  {%- assign fonts_type_body_bold_family = settings.type_body_bold.family | append: ',' | append: settings.type_body_bold.fallback_families -%}
  {%- assign fonts_type_body_bold_style = settings.type_body_bold.style -%}
  {%- assign fonts_type_body_bold_weight = settings.type_body_bold.weight | times: 1 -%}
  {{ settings.type_body_bold | font_face: font_display: fonts_type_body_bold_display }}

  {%- comment -%}Italic{%- endcomment -%}

  {%- assign fonts_type_body_bold_style_italic = settings.type_body_bold | font_modify: 'style', 'italic' | map: 'style' | default: 'italic' -%}
  {{ settings.type_body_bold | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_body_bold_display }}

  {%- comment -%}Bolder{%- endcomment -%}

  {%- assign fonts_weight_adjustment_default = 700 -%}
  {%- if fonts_type_body_bold_weight > 700 -%}
    {%- assign fonts_weight_adjustment_default = fonts_type_body_bold_weight -%}
  {%- endif -%}
  {%- assign fonts_type_body_bold_bolder = settings.type_body_bold | font_modify: 'weight', 'bolder' -%}
  {%- assign fonts_type_body_bold_weight_bolder = fonts_type_body_bold_bolder.weight | default: fonts_weight_adjustment_default -%}
  {{ fonts_type_body_bold_bolder | font_face: font_display: fonts_type_body_bold_display }}
  {{ fonts_type_body_bold_bolder | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_body_bold_display }}

  {%- comment -%}Lighter{%- endcomment -%}

  {%- assign fonts_weight_adjustment_default = 300 -%}
  {%- if fonts_type_body_bold_weight < 300 -%}
    {%- assign fonts_weight_adjustment_default = fonts_type_body_bold_weight -%}
  {%- endif -%}
  {%- assign fonts_type_body_bold_lighter = settings.type_body_bold | font_modify: 'weight', 'lighter' -%}
  {%- assign fonts_type_body_bold_weight_lighter = fonts_type_body_bold_lighter.weight | default: fonts_weight_adjustment_default -%}
  {{ fonts_type_body_bold_lighter | font_face: font_display: fonts_type_body_bold_display }}
  {{ fonts_type_body_bold_lighter | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_body_bold_display }}

{%- comment -%}Custom{%- endcomment -%}
{%- assign font_family = 'type_body_bold_custom' -%}

{%- assign font_textarea = settings[font_family] -%}
{%- assign font_textarea_split = font_textarea | newline_to_br | split: '<br />' -%}
{%- assign font_additional_weights = 'initial,lighter,bolder' | split: ',' -%}

{%- for font in font_textarea_split -%}
  {%- assign font_split = font | split: ':' -%}
  {%- assign font_weight = 400 -%}
  {%- assign font_weight_name = 'initial' -%}
  {%- assign font_style = 'normal' -%}
  {%- assign font_style_name = 'initial' -%}

  {%- if font_split.size == 1 -%}
    {%- assign font_file = font_split[0] | strip -%}
  {%- else -%}
    {%- assign font_weight_style_space_to_hyphen = font_split[0] | replace: ' ', '-' -%}
    {%- assign font_weight_style = font_weight_style_space_to_hyphen | split: '-' -%}

    {%- if font_weight_style.size == 1 -%}
      {%- assign font_weight_style = font_weight_style[0] | strip | downcase -%}

      {%- if font_weight_style == 'italic' -%}
        {%- assign font_style_name = font_weight_style -%}
      {%- else -%}
        {%- assign font_weight_name = font_weight_style -%}
      {%- endif -%}
    {%- else -%}
      {%- assign font_weight_name = font_weight_style[0] | strip | downcase -%}
      {%- assign font_style_name = font_weight_style[1] | strip | downcase -%}
    {%- endif -%}

    {%- comment -%}
      At this point we should have valid a valid weight and style variables,
      we can continue onto the new iteration if it isnt valid.
    {%- endcomment -%}
    {%- if font_weight_name contains 'initial' != true and font_weight_name contains 'lighter' != true and font_weight_name contains 'bolder' != true -%}
      {%- continue -%}
    {%- endif -%}
    {%- if font_style_name != 'initial' and font_style_name != 'italic' -%}
      {%- continue -%}
    {%- endif -%}

    {%- if font_weight_name contains 'initial' -%}
      {%- if font_weight_name == 'initial' -%}
        {%- assign font_weight = 400 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'initial' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 400 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'lighter' -%}
      {%- if font_weight_name == 'lighter' -%}
        {%- assign font_weight = 300 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'lighter' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 300 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'bolder' -%}
      {%- if font_weight_name == 'bolder' -%}
        {%- assign font_weight = 700 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'bolder' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 700 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    {%- if font_style_name == 'italic' -%}
      {%- assign font_style = 'italic' -%}
    {%- endif -%}

    {%- assign font_file = font_split[1] | strip -%}
  {%- endif -%}

  {%- unless font_weight_name == 'initial' -%}
    {%- unless font_additional_weights contains font_weight_name -%}
      {%- continue -%}
    {%- endunless -%}
  {%- endunless -%}

  {%- assign font_file_split = font_file | split: '.' -%}

  {%- comment -%}
    If the assumed file component has a format associated with it,
    treat it as a file otherwise treat it as a family name and dont output a font face.
  {%- endcomment -%}
  {% if font_file_split.size > 1 %}
    {%- assign font_file_format_index = font_file_split | size | minus: 1 -%}
    {%- assign font_format = font_file_split[font_file_format_index] | strip -%}

    {%- comment -%}
      By checking if a font_file contains a forward slash we can
      determine whether we should treat the file as absolute URL
      or a file that must be sent through the file_url filter.

      This allows externally hosted files to be used as custom fonts.
    {%- endcomment -%}
    @font-face {
      font-family: "{{ font_family }}";
      font-weight: {{ font_weight }};
      font-style: {{ font_style }};
      font-display: {{ fonts_type_body_bold_display }};
      src:
        url("{%- if font_file contains '/' -%}{{ font_file }}{%- else -%}{{ font_file | file_url }}{%- endif -%}")
        format("{{ font_format }}");
    }
  {% else %}
    {%- assign font_family = font_file -%}
  {% endif %}

  {%- if font_weight_name == 'initial' and font_style_name != 'italic' -%}
    {%- assign fonts_type_body_bold_family = font_family -%}
    {%- assign fonts_type_body_bold_style = font_style -%}
    {%- assign fonts_type_body_bold_weight = font_weight -%}
    {%- assign fonts_type_body_bold_style_italic = 'italic' -%}
  {%- elsif font_weight_name == 'lighter' -%}
    {%- assign fonts_type_body_bold_weight_lighter = font_weight -%}
  {%- elsif font_weight_name == 'bolder' -%}
    {%- assign fonts_type_body_bold_weight_bolder = font_weight -%}
  {%- endif -%}
{%- endfor -%}

{%- endif -%}


{%- comment -%}type_heading{%- endcomment -%}

{%- assign fonts_type_heading_display = settings.font_display | default: 'auto' -%}

{%- if font_family_override and font_family_override != 'disable' -%}
  {%- comment -%}Font family override{%- endcomment -%}
  {%- assign fonts_type_heading_family = font_family_override -%}
  {%- assign fonts_type_heading_style = 'normal' -%}
  {%- assign fonts_type_heading_weight = 400 -%}
  {%- assign fonts_type_heading_style_italic = 'italic' -%}
  {%- assign fonts_type_heading_weight_bolder = 700 -%}
  {%- assign fonts_type_heading_weight_lighter = 300 -%}
{%- else -%}

  {%- comment -%}Normal{%- endcomment -%}

  {%- assign fonts_type_heading_family = settings.type_heading.family | append: ',' | append: settings.type_heading.fallback_families -%}
  {%- assign fonts_type_heading_style = settings.type_heading.style -%}
  {%- assign fonts_type_heading_weight = settings.type_heading.weight | times: 1 -%}
  {{ settings.type_heading | font_face: font_display: fonts_type_heading_display }}

  {%- comment -%}Italic{%- endcomment -%}

  {%- assign fonts_type_heading_style_italic = settings.type_heading | font_modify: 'style', 'italic' | map: 'style' | default: 'italic' -%}
  {{ settings.type_heading | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_heading_display }}

  {%- comment -%}Bolder{%- endcomment -%}

  {%- assign fonts_weight_adjustment_default = 700 -%}
  {%- if fonts_type_heading_weight > 700 -%}
    {%- assign fonts_weight_adjustment_default = fonts_type_heading_weight -%}
  {%- endif -%}
  {%- assign fonts_type_heading_bolder = settings.type_heading | font_modify: 'weight', 'bolder' -%}
  {%- assign fonts_type_heading_weight_bolder = fonts_type_heading_bolder.weight | default: fonts_weight_adjustment_default -%}
  {{ fonts_type_heading_bolder | font_face: font_display: fonts_type_heading_display }}
  {{ fonts_type_heading_bolder | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_heading_display }}

{%- comment -%}Custom{%- endcomment -%}
{%- assign font_family = 'type_heading_custom' -%}

{%- assign font_textarea = settings[font_family] -%}
{%- assign font_textarea_split = font_textarea | newline_to_br | split: '<br />' -%}
{%- assign font_additional_weights = 'initial,bolder' | split: ',' -%}

{%- for font in font_textarea_split -%}
  {%- assign font_split = font | split: ':' -%}
  {%- assign font_weight = 400 -%}
  {%- assign font_weight_name = 'initial' -%}
  {%- assign font_style = 'normal' -%}
  {%- assign font_style_name = 'initial' -%}

  {%- if font_split.size == 1 -%}
    {%- assign font_file = font_split[0] | strip -%}
  {%- else -%}
    {%- assign font_weight_style_space_to_hyphen = font_split[0] | replace: ' ', '-' -%}
    {%- assign font_weight_style = font_weight_style_space_to_hyphen | split: '-' -%}

    {%- if font_weight_style.size == 1 -%}
      {%- assign font_weight_style = font_weight_style[0] | strip | downcase -%}

      {%- if font_weight_style == 'italic' -%}
        {%- assign font_style_name = font_weight_style -%}
      {%- else -%}
        {%- assign font_weight_name = font_weight_style -%}
      {%- endif -%}
    {%- else -%}
      {%- assign font_weight_name = font_weight_style[0] | strip | downcase -%}
      {%- assign font_style_name = font_weight_style[1] | strip | downcase -%}
    {%- endif -%}

    {%- comment -%}
      At this point we should have valid a valid weight and style variables,
      we can continue onto the new iteration if it isnt valid.
    {%- endcomment -%}
    {%- if font_weight_name contains 'initial' != true and font_weight_name contains 'lighter' != true and font_weight_name contains 'bolder' != true -%}
      {%- continue -%}
    {%- endif -%}
    {%- if font_style_name != 'initial' and font_style_name != 'italic' -%}
      {%- continue -%}
    {%- endif -%}

    {%- if font_weight_name contains 'initial' -%}
      {%- if font_weight_name == 'initial' -%}
        {%- assign font_weight = 400 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'initial' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 400 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'lighter' -%}
      {%- if font_weight_name == 'lighter' -%}
        {%- assign font_weight = 300 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'lighter' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 300 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'bolder' -%}
      {%- if font_weight_name == 'bolder' -%}
        {%- assign font_weight = 700 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'bolder' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 700 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    {%- if font_style_name == 'italic' -%}
      {%- assign font_style = 'italic' -%}
    {%- endif -%}

    {%- assign font_file = font_split[1] | strip -%}
  {%- endif -%}

  {%- unless font_weight_name == 'initial' -%}
    {%- unless font_additional_weights contains font_weight_name -%}
      {%- continue -%}
    {%- endunless -%}
  {%- endunless -%}

  {%- assign font_file_split = font_file | split: '.' -%}

  {%- comment -%}
    If the assumed file component has a format associated with it,
    treat it as a file otherwise treat it as a family name and dont output a font face.
  {%- endcomment -%}
  {% if font_file_split.size > 1 %}
    {%- assign font_file_format_index = font_file_split | size | minus: 1 -%}
    {%- assign font_format = font_file_split[font_file_format_index] | strip -%}

    {%- comment -%}
      By checking if a font_file contains a forward slash we can
      determine whether we should treat the file as absolute URL
      or a file that must be sent through the file_url filter.

      This allows externally hosted files to be used as custom fonts.
    {%- endcomment -%}
    @font-face {
      font-family: "{{ font_family }}";
      font-weight: {{ font_weight }};
      font-style: {{ font_style }};
      font-display: {{ fonts_type_heading_display }};
      src:
        url("{%- if font_file contains '/' -%}{{ font_file }}{%- else -%}{{ font_file | file_url }}{%- endif -%}")
        format("{{ font_format }}");
    }
  {% else %}
    {%- assign font_family = font_file -%}
  {% endif %}

  {%- if font_weight_name == 'initial' and font_style_name != 'italic' -%}
    {%- assign fonts_type_heading_family = font_family -%}
    {%- assign fonts_type_heading_style = font_style -%}
    {%- assign fonts_type_heading_weight = font_weight -%}
    {%- assign fonts_type_heading_style_italic = 'italic' -%}
  {%- elsif font_weight_name == 'lighter' -%}
    {%- assign fonts_type_heading_weight_lighter = font_weight -%}
  {%- elsif font_weight_name == 'bolder' -%}
    {%- assign fonts_type_heading_weight_bolder = font_weight -%}
  {%- endif -%}
{%- endfor -%}

{%- endif -%}


{%- comment -%}type_menu{%- endcomment -%}

{%- assign fonts_type_menu_display = settings.font_display | default: 'auto' -%}

{%- if font_family_override and font_family_override != 'disable' -%}
  {%- comment -%}Font family override{%- endcomment -%}
  {%- assign fonts_type_menu_family = font_family_override -%}
  {%- assign fonts_type_menu_style = 'normal' -%}
  {%- assign fonts_type_menu_weight = 400 -%}
  {%- assign fonts_type_menu_style_italic = 'italic' -%}
  {%- assign fonts_type_menu_weight_bolder = 700 -%}
  {%- assign fonts_type_menu_weight_lighter = 300 -%}
{%- else -%}

  {%- comment -%}Normal{%- endcomment -%}

  {%- assign fonts_type_menu_family = settings.type_menu.family | append: ',' | append: settings.type_menu.fallback_families -%}
  {%- assign fonts_type_menu_style = settings.type_menu.style -%}
  {%- assign fonts_type_menu_weight = settings.type_menu.weight | times: 1 -%}
  {{ settings.type_menu | font_face: font_display: fonts_type_menu_display }}

  {%- comment -%}Italic{%- endcomment -%}

  {%- assign fonts_type_menu_style_italic = settings.type_menu | font_modify: 'style', 'italic' | map: 'style' | default: 'italic' -%}
  {{ settings.type_menu | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_menu_display }}

  {%- comment -%}Bolder{%- endcomment -%}

  {%- assign fonts_weight_adjustment_default = 700 -%}
  {%- if fonts_type_menu_weight > 700 -%}
    {%- assign fonts_weight_adjustment_default = fonts_type_menu_weight -%}
  {%- endif -%}
  {%- assign fonts_type_menu_bolder = settings.type_menu | font_modify: 'weight', 'bolder' -%}
  {%- assign fonts_type_menu_weight_bolder = fonts_type_menu_bolder.weight | default: fonts_weight_adjustment_default -%}
  {{ fonts_type_menu_bolder | font_face: font_display: fonts_type_menu_display }}
  {{ fonts_type_menu_bolder | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_menu_display }}

  {%- comment -%}Lighter{%- endcomment -%}

  {%- assign fonts_weight_adjustment_default = 300 -%}
  {%- if fonts_type_menu_weight < 300 -%}
    {%- assign fonts_weight_adjustment_default = fonts_type_menu_weight -%}
  {%- endif -%}
  {%- assign fonts_type_menu_lighter = settings.type_menu | font_modify: 'weight', 'lighter' -%}
  {%- assign fonts_type_menu_weight_lighter = fonts_type_menu_lighter.weight | default: fonts_weight_adjustment_default -%}
  {{ fonts_type_menu_lighter | font_face: font_display: fonts_type_menu_display }}
  {{ fonts_type_menu_lighter | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_menu_display }}

{%- comment -%}Custom{%- endcomment -%}
{%- assign font_family = 'type_menu_custom' -%}

{%- assign font_textarea = settings[font_family] -%}
{%- assign font_textarea_split = font_textarea | newline_to_br | split: '<br />' -%}
{%- assign font_additional_weights = 'initial,lighter,bolder' | split: ',' -%}

{%- for font in font_textarea_split -%}
  {%- assign font_split = font | split: ':' -%}
  {%- assign font_weight = 400 -%}
  {%- assign font_weight_name = 'initial' -%}
  {%- assign font_style = 'normal' -%}
  {%- assign font_style_name = 'initial' -%}

  {%- if font_split.size == 1 -%}
    {%- assign font_file = font_split[0] | strip -%}
  {%- else -%}
    {%- assign font_weight_style_space_to_hyphen = font_split[0] | replace: ' ', '-' -%}
    {%- assign font_weight_style = font_weight_style_space_to_hyphen | split: '-' -%}

    {%- if font_weight_style.size == 1 -%}
      {%- assign font_weight_style = font_weight_style[0] | strip | downcase -%}

      {%- if font_weight_style == 'italic' -%}
        {%- assign font_style_name = font_weight_style -%}
      {%- else -%}
        {%- assign font_weight_name = font_weight_style -%}
      {%- endif -%}
    {%- else -%}
      {%- assign font_weight_name = font_weight_style[0] | strip | downcase -%}
      {%- assign font_style_name = font_weight_style[1] | strip | downcase -%}
    {%- endif -%}

    {%- comment -%}
      At this point we should have valid a valid weight and style variables,
      we can continue onto the new iteration if it isnt valid.
    {%- endcomment -%}
    {%- if font_weight_name contains 'initial' != true and font_weight_name contains 'lighter' != true and font_weight_name contains 'bolder' != true -%}
      {%- continue -%}
    {%- endif -%}
    {%- if font_style_name != 'initial' and font_style_name != 'italic' -%}
      {%- continue -%}
    {%- endif -%}

    {%- if font_weight_name contains 'initial' -%}
      {%- if font_weight_name == 'initial' -%}
        {%- assign font_weight = 400 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'initial' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 400 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'lighter' -%}
      {%- if font_weight_name == 'lighter' -%}
        {%- assign font_weight = 300 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'lighter' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 300 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'bolder' -%}
      {%- if font_weight_name == 'bolder' -%}
        {%- assign font_weight = 700 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'bolder' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 700 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    {%- if font_style_name == 'italic' -%}
      {%- assign font_style = 'italic' -%}
    {%- endif -%}

    {%- assign font_file = font_split[1] | strip -%}
  {%- endif -%}

  {%- unless font_weight_name == 'initial' -%}
    {%- unless font_additional_weights contains font_weight_name -%}
      {%- continue -%}
    {%- endunless -%}
  {%- endunless -%}

  {%- assign font_file_split = font_file | split: '.' -%}

  {%- comment -%}
    If the assumed file component has a format associated with it,
    treat it as a file otherwise treat it as a family name and dont output a font face.
  {%- endcomment -%}
  {% if font_file_split.size > 1 %}
    {%- assign font_file_format_index = font_file_split | size | minus: 1 -%}
    {%- assign font_format = font_file_split[font_file_format_index] | strip -%}

    {%- comment -%}
      By checking if a font_file contains a forward slash we can
      determine whether we should treat the file as absolute URL
      or a file that must be sent through the file_url filter.

      This allows externally hosted files to be used as custom fonts.
    {%- endcomment -%}
    @font-face {
      font-family: "{{ font_family }}";
      font-weight: {{ font_weight }};
      font-style: {{ font_style }};
      font-display: {{ fonts_type_menu_display }};
      src:
        url("{%- if font_file contains '/' -%}{{ font_file }}{%- else -%}{{ font_file | file_url }}{%- endif -%}")
        format("{{ font_format }}");
    }
  {% else %}
    {%- assign font_family = font_file -%}
  {% endif %}

  {%- if font_weight_name == 'initial' and font_style_name != 'italic' -%}
    {%- assign fonts_type_menu_family = font_family -%}
    {%- assign fonts_type_menu_style = font_style -%}
    {%- assign fonts_type_menu_weight = font_weight -%}
    {%- assign fonts_type_menu_style_italic = 'italic' -%}
  {%- elsif font_weight_name == 'lighter' -%}
    {%- assign fonts_type_menu_weight_lighter = font_weight -%}
  {%- elsif font_weight_name == 'bolder' -%}
    {%- assign fonts_type_menu_weight_bolder = font_weight -%}
  {%- endif -%}
{%- endfor -%}

{%- endif -%}


{%- comment -%}type_section{%- endcomment -%}

{%- assign fonts_type_section_display = settings.font_display | default: 'auto' -%}

{%- if font_family_override and font_family_override != 'disable' -%}
  {%- comment -%}Font family override{%- endcomment -%}
  {%- assign fonts_type_section_family = font_family_override -%}
  {%- assign fonts_type_section_style = 'normal' -%}
  {%- assign fonts_type_section_weight = 400 -%}
  {%- assign fonts_type_section_style_italic = 'italic' -%}
  {%- assign fonts_type_section_weight_bolder = 700 -%}
  {%- assign fonts_type_section_weight_lighter = 300 -%}
{%- else -%}

  {%- comment -%}Normal{%- endcomment -%}

  {%- assign fonts_type_section_family = settings.type_section.family | append: ',' | append: settings.type_section.fallback_families -%}
  {%- assign fonts_type_section_style = settings.type_section.style -%}
  {%- assign fonts_type_section_weight = settings.type_section.weight | times: 1 -%}
  {{ settings.type_section | font_face: font_display: fonts_type_section_display }}

  {%- comment -%}Italic{%- endcomment -%}

  {%- assign fonts_type_section_style_italic = settings.type_section | font_modify: 'style', 'italic' | map: 'style' | default: 'italic' -%}
  {{ settings.type_section | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_section_display }}

  {%- comment -%}Bolder{%- endcomment -%}

  {%- assign fonts_weight_adjustment_default = 700 -%}
  {%- if fonts_type_section_weight > 700 -%}
    {%- assign fonts_weight_adjustment_default = fonts_type_section_weight -%}
  {%- endif -%}
  {%- assign fonts_type_section_bolder = settings.type_section | font_modify: 'weight', 'bolder' -%}
  {%- assign fonts_type_section_weight_bolder = fonts_type_section_bolder.weight | default: fonts_weight_adjustment_default -%}
  {{ fonts_type_section_bolder | font_face: font_display: fonts_type_section_display }}
  {{ fonts_type_section_bolder | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_section_display }}

{%- comment -%}Custom{%- endcomment -%}
{%- assign font_family = 'type_section_custom' -%}

{%- assign font_textarea = settings[font_family] -%}
{%- assign font_textarea_split = font_textarea | newline_to_br | split: '<br />' -%}
{%- assign font_additional_weights = 'initial,bolder' | split: ',' -%}

{%- for font in font_textarea_split -%}
  {%- assign font_split = font | split: ':' -%}
  {%- assign font_weight = 400 -%}
  {%- assign font_weight_name = 'initial' -%}
  {%- assign font_style = 'normal' -%}
  {%- assign font_style_name = 'initial' -%}

  {%- if font_split.size == 1 -%}
    {%- assign font_file = font_split[0] | strip -%}
  {%- else -%}
    {%- assign font_weight_style_space_to_hyphen = font_split[0] | replace: ' ', '-' -%}
    {%- assign font_weight_style = font_weight_style_space_to_hyphen | split: '-' -%}

    {%- if font_weight_style.size == 1 -%}
      {%- assign font_weight_style = font_weight_style[0] | strip | downcase -%}

      {%- if font_weight_style == 'italic' -%}
        {%- assign font_style_name = font_weight_style -%}
      {%- else -%}
        {%- assign font_weight_name = font_weight_style -%}
      {%- endif -%}
    {%- else -%}
      {%- assign font_weight_name = font_weight_style[0] | strip | downcase -%}
      {%- assign font_style_name = font_weight_style[1] | strip | downcase -%}
    {%- endif -%}

    {%- comment -%}
      At this point we should have valid a valid weight and style variables,
      we can continue onto the new iteration if it isnt valid.
    {%- endcomment -%}
    {%- if font_weight_name contains 'initial' != true and font_weight_name contains 'lighter' != true and font_weight_name contains 'bolder' != true -%}
      {%- continue -%}
    {%- endif -%}
    {%- if font_style_name != 'initial' and font_style_name != 'italic' -%}
      {%- continue -%}
    {%- endif -%}

    {%- if font_weight_name contains 'initial' -%}
      {%- if font_weight_name == 'initial' -%}
        {%- assign font_weight = 400 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'initial' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 400 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'lighter' -%}
      {%- if font_weight_name == 'lighter' -%}
        {%- assign font_weight = 300 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'lighter' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 300 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'bolder' -%}
      {%- if font_weight_name == 'bolder' -%}
        {%- assign font_weight = 700 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'bolder' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 700 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    {%- if font_style_name == 'italic' -%}
      {%- assign font_style = 'italic' -%}
    {%- endif -%}

    {%- assign font_file = font_split[1] | strip -%}
  {%- endif -%}

  {%- unless font_weight_name == 'initial' -%}
    {%- unless font_additional_weights contains font_weight_name -%}
      {%- continue -%}
    {%- endunless -%}
  {%- endunless -%}

  {%- assign font_file_split = font_file | split: '.' -%}

  {%- comment -%}
    If the assumed file component has a format associated with it,
    treat it as a file otherwise treat it as a family name and dont output a font face.
  {%- endcomment -%}
  {% if font_file_split.size > 1 %}
    {%- assign font_file_format_index = font_file_split | size | minus: 1 -%}
    {%- assign font_format = font_file_split[font_file_format_index] | strip -%}

    {%- comment -%}
      By checking if a font_file contains a forward slash we can
      determine whether we should treat the file as absolute URL
      or a file that must be sent through the file_url filter.

      This allows externally hosted files to be used as custom fonts.
    {%- endcomment -%}
    @font-face {
      font-family: "{{ font_family }}";
      font-weight: {{ font_weight }};
      font-style: {{ font_style }};
      font-display: {{ fonts_type_section_display }};
      src:
        url("{%- if font_file contains '/' -%}{{ font_file }}{%- else -%}{{ font_file | file_url }}{%- endif -%}")
        format("{{ font_format }}");
    }
  {% else %}
    {%- assign font_family = font_file -%}
  {% endif %}

  {%- if font_weight_name == 'initial' and font_style_name != 'italic' -%}
    {%- assign fonts_type_section_family = font_family -%}
    {%- assign fonts_type_section_style = font_style -%}
    {%- assign fonts_type_section_weight = font_weight -%}
    {%- assign fonts_type_section_style_italic = 'italic' -%}
  {%- elsif font_weight_name == 'lighter' -%}
    {%- assign fonts_type_section_weight_lighter = font_weight -%}
  {%- elsif font_weight_name == 'bolder' -%}
    {%- assign fonts_type_section_weight_bolder = font_weight -%}
  {%- endif -%}
{%- endfor -%}

{%- endif -%}


{%- comment -%}type_button{%- endcomment -%}

{%- assign fonts_type_button_display = settings.font_display | default: 'auto' -%}

{%- if font_family_override and font_family_override != 'disable' -%}
  {%- comment -%}Font family override{%- endcomment -%}
  {%- assign fonts_type_button_family = font_family_override -%}
  {%- assign fonts_type_button_style = 'normal' -%}
  {%- assign fonts_type_button_weight = 400 -%}
  {%- assign fonts_type_button_style_italic = 'italic' -%}
  {%- assign fonts_type_button_weight_bolder = 700 -%}
  {%- assign fonts_type_button_weight_lighter = 300 -%}
{%- else -%}

  {%- comment -%}Normal{%- endcomment -%}

  {%- assign fonts_type_button_family = settings.type_button.family | append: ',' | append: settings.type_button.fallback_families -%}
  {%- assign fonts_type_button_style = settings.type_button.style -%}
  {%- assign fonts_type_button_weight = settings.type_button.weight | times: 1 -%}
  {{ settings.type_button | font_face: font_display: fonts_type_button_display }}

  {%- comment -%}Italic{%- endcomment -%}

  {%- assign fonts_type_button_style_italic = settings.type_button | font_modify: 'style', 'italic' | map: 'style' | default: 'italic' -%}
  {{ settings.type_button | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_button_display }}

{%- comment -%}Custom{%- endcomment -%}
{%- assign font_family = 'type_button_custom' -%}

{%- assign font_textarea = settings[font_family] -%}
{%- assign font_textarea_split = font_textarea | newline_to_br | split: '<br />' -%}
{%- assign font_additional_weights = 'initial' | split: ',' -%}

{%- for font in font_textarea_split -%}
  {%- assign font_split = font | split: ':' -%}
  {%- assign font_weight = 400 -%}
  {%- assign font_weight_name = 'initial' -%}
  {%- assign font_style = 'normal' -%}
  {%- assign font_style_name = 'initial' -%}

  {%- if font_split.size == 1 -%}
    {%- assign font_file = font_split[0] | strip -%}
  {%- else -%}
    {%- assign font_weight_style_space_to_hyphen = font_split[0] | replace: ' ', '-' -%}
    {%- assign font_weight_style = font_weight_style_space_to_hyphen | split: '-' -%}

    {%- if font_weight_style.size == 1 -%}
      {%- assign font_weight_style = font_weight_style[0] | strip | downcase -%}

      {%- if font_weight_style == 'italic' -%}
        {%- assign font_style_name = font_weight_style -%}
      {%- else -%}
        {%- assign font_weight_name = font_weight_style -%}
      {%- endif -%}
    {%- else -%}
      {%- assign font_weight_name = font_weight_style[0] | strip | downcase -%}
      {%- assign font_style_name = font_weight_style[1] | strip | downcase -%}
    {%- endif -%}

    {%- comment -%}
      At this point we should have valid a valid weight and style variables,
      we can continue onto the new iteration if it isnt valid.
    {%- endcomment -%}
    {%- if font_weight_name contains 'initial' != true and font_weight_name contains 'lighter' != true and font_weight_name contains 'bolder' != true -%}
      {%- continue -%}
    {%- endif -%}
    {%- if font_style_name != 'initial' and font_style_name != 'italic' -%}
      {%- continue -%}
    {%- endif -%}

    {%- if font_weight_name contains 'initial' -%}
      {%- if font_weight_name == 'initial' -%}
        {%- assign font_weight = 400 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'initial' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 400 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'lighter' -%}
      {%- if font_weight_name == 'lighter' -%}
        {%- assign font_weight = 300 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'lighter' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 300 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'bolder' -%}
      {%- if font_weight_name == 'bolder' -%}
        {%- assign font_weight = 700 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'bolder' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 700 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    {%- if font_style_name == 'italic' -%}
      {%- assign font_style = 'italic' -%}
    {%- endif -%}

    {%- assign font_file = font_split[1] | strip -%}
  {%- endif -%}

  {%- unless font_weight_name == 'initial' -%}
    {%- unless font_additional_weights contains font_weight_name -%}
      {%- continue -%}
    {%- endunless -%}
  {%- endunless -%}

  {%- assign font_file_split = font_file | split: '.' -%}

  {%- comment -%}
    If the assumed file component has a format associated with it,
    treat it as a file otherwise treat it as a family name and dont output a font face.
  {%- endcomment -%}
  {% if font_file_split.size > 1 %}
    {%- assign font_file_format_index = font_file_split | size | minus: 1 -%}
    {%- assign font_format = font_file_split[font_file_format_index] | strip -%}

    {%- comment -%}
      By checking if a font_file contains a forward slash we can
      determine whether we should treat the file as absolute URL
      or a file that must be sent through the file_url filter.

      This allows externally hosted files to be used as custom fonts.
    {%- endcomment -%}
    @font-face {
      font-family: "{{ font_family }}";
      font-weight: {{ font_weight }};
      font-style: {{ font_style }};
      font-display: {{ fonts_type_button_display }};
      src:
        url("{%- if font_file contains '/' -%}{{ font_file }}{%- else -%}{{ font_file | file_url }}{%- endif -%}")
        format("{{ font_format }}");
    }
  {% else %}
    {%- assign font_family = font_file -%}
  {% endif %}

  {%- if font_weight_name == 'initial' and font_style_name != 'italic' -%}
    {%- assign fonts_type_button_family = font_family -%}
    {%- assign fonts_type_button_style = font_style -%}
    {%- assign fonts_type_button_weight = font_weight -%}
    {%- assign fonts_type_button_style_italic = 'italic' -%}
  {%- elsif font_weight_name == 'lighter' -%}
    {%- assign fonts_type_button_weight_lighter = font_weight -%}
  {%- elsif font_weight_name == 'bolder' -%}
    {%- assign fonts_type_button_weight_bolder = font_weight -%}
  {%- endif -%}
{%- endfor -%}

{%- endif -%}


{%- comment -%}type_product_price{%- endcomment -%}

{%- assign fonts_type_product_price_display = settings.font_display | default: 'auto' -%}

{%- if font_family_override and font_family_override != 'disable' -%}
  {%- comment -%}Font family override{%- endcomment -%}
  {%- assign fonts_type_product_price_family = font_family_override -%}
  {%- assign fonts_type_product_price_style = 'normal' -%}
  {%- assign fonts_type_product_price_weight = 400 -%}
  {%- assign fonts_type_product_price_style_italic = 'italic' -%}
  {%- assign fonts_type_product_price_weight_bolder = 700 -%}
  {%- assign fonts_type_product_price_weight_lighter = 300 -%}
{%- else -%}

  {%- comment -%}Normal{%- endcomment -%}

  {%- assign fonts_type_product_price_family = settings.type_product_price.family | append: ',' | append: settings.type_product_price.fallback_families -%}
  {%- assign fonts_type_product_price_style = settings.type_product_price.style -%}
  {%- assign fonts_type_product_price_weight = settings.type_product_price.weight | times: 1 -%}
  {{ settings.type_product_price | font_face: font_display: fonts_type_product_price_display }}

  {%- comment -%}Italic{%- endcomment -%}

  {%- assign fonts_type_product_price_style_italic = settings.type_product_price | font_modify: 'style', 'italic' | map: 'style' | default: 'italic' -%}
  {{ settings.type_product_price | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_product_price_display }}

{%- comment -%}Custom{%- endcomment -%}
{%- assign font_family = 'type_product_price_custom' -%}

{%- assign font_textarea = settings[font_family] -%}
{%- assign font_textarea_split = font_textarea | newline_to_br | split: '<br />' -%}
{%- assign font_additional_weights = 'initial' | split: ',' -%}

{%- for font in font_textarea_split -%}
  {%- assign font_split = font | split: ':' -%}
  {%- assign font_weight = 400 -%}
  {%- assign font_weight_name = 'initial' -%}
  {%- assign font_style = 'normal' -%}
  {%- assign font_style_name = 'initial' -%}

  {%- if font_split.size == 1 -%}
    {%- assign font_file = font_split[0] | strip -%}
  {%- else -%}
    {%- assign font_weight_style_space_to_hyphen = font_split[0] | replace: ' ', '-' -%}
    {%- assign font_weight_style = font_weight_style_space_to_hyphen | split: '-' -%}

    {%- if font_weight_style.size == 1 -%}
      {%- assign font_weight_style = font_weight_style[0] | strip | downcase -%}

      {%- if font_weight_style == 'italic' -%}
        {%- assign font_style_name = font_weight_style -%}
      {%- else -%}
        {%- assign font_weight_name = font_weight_style -%}
      {%- endif -%}
    {%- else -%}
      {%- assign font_weight_name = font_weight_style[0] | strip | downcase -%}
      {%- assign font_style_name = font_weight_style[1] | strip | downcase -%}
    {%- endif -%}

    {%- comment -%}
      At this point we should have valid a valid weight and style variables,
      we can continue onto the new iteration if it isnt valid.
    {%- endcomment -%}
    {%- if font_weight_name contains 'initial' != true and font_weight_name contains 'lighter' != true and font_weight_name contains 'bolder' != true -%}
      {%- continue -%}
    {%- endif -%}
    {%- if font_style_name != 'initial' and font_style_name != 'italic' -%}
      {%- continue -%}
    {%- endif -%}

    {%- if font_weight_name contains 'initial' -%}
      {%- if font_weight_name == 'initial' -%}
        {%- assign font_weight = 400 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'initial' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 400 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'lighter' -%}
      {%- if font_weight_name == 'lighter' -%}
        {%- assign font_weight = 300 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'lighter' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 300 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'bolder' -%}
      {%- if font_weight_name == 'bolder' -%}
        {%- assign font_weight = 700 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'bolder' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 700 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    {%- if font_style_name == 'italic' -%}
      {%- assign font_style = 'italic' -%}
    {%- endif -%}

    {%- assign font_file = font_split[1] | strip -%}
  {%- endif -%}

  {%- unless font_weight_name == 'initial' -%}
    {%- unless font_additional_weights contains font_weight_name -%}
      {%- continue -%}
    {%- endunless -%}
  {%- endunless -%}

  {%- assign font_file_split = font_file | split: '.' -%}

  {%- comment -%}
    If the assumed file component has a format associated with it,
    treat it as a file otherwise treat it as a family name and dont output a font face.
  {%- endcomment -%}
  {% if font_file_split.size > 1 %}
    {%- assign font_file_format_index = font_file_split | size | minus: 1 -%}
    {%- assign font_format = font_file_split[font_file_format_index] | strip -%}

    {%- comment -%}
      By checking if a font_file contains a forward slash we can
      determine whether we should treat the file as absolute URL
      or a file that must be sent through the file_url filter.

      This allows externally hosted files to be used as custom fonts.
    {%- endcomment -%}
    @font-face {
      font-family: "{{ font_family }}";
      font-weight: {{ font_weight }};
      font-style: {{ font_style }};
      font-display: {{ fonts_type_product_price_display }};
      src:
        url("{%- if font_file contains '/' -%}{{ font_file }}{%- else -%}{{ font_file | file_url }}{%- endif -%}")
        format("{{ font_format }}");
    }
  {% else %}
    {%- assign font_family = font_file -%}
  {% endif %}

  {%- if font_weight_name == 'initial' and font_style_name != 'italic' -%}
    {%- assign fonts_type_product_price_family = font_family -%}
    {%- assign fonts_type_product_price_style = font_style -%}
    {%- assign fonts_type_product_price_weight = font_weight -%}
    {%- assign fonts_type_product_price_style_italic = 'italic' -%}
  {%- elsif font_weight_name == 'lighter' -%}
    {%- assign fonts_type_product_price_weight_lighter = font_weight -%}
  {%- elsif font_weight_name == 'bolder' -%}
    {%- assign fonts_type_product_price_weight_bolder = font_weight -%}
  {%- endif -%}
{%- endfor -%}

{%- endif -%}


{%- comment -%}type_product_card_title{%- endcomment -%}

{%- assign fonts_type_product_card_title_display = settings.font_display | default: 'auto' -%}

{%- if font_family_override and font_family_override != 'disable' -%}
  {%- comment -%}Font family override{%- endcomment -%}
  {%- assign fonts_type_product_card_title_family = font_family_override -%}
  {%- assign fonts_type_product_card_title_style = 'normal' -%}
  {%- assign fonts_type_product_card_title_weight = 400 -%}
  {%- assign fonts_type_product_card_title_style_italic = 'italic' -%}
  {%- assign fonts_type_product_card_title_weight_bolder = 700 -%}
  {%- assign fonts_type_product_card_title_weight_lighter = 300 -%}
{%- else -%}

  {%- comment -%}Normal{%- endcomment -%}

  {%- assign fonts_type_product_card_title_family = settings.type_product_card_title.family | append: ',' | append: settings.type_product_card_title.fallback_families -%}
  {%- assign fonts_type_product_card_title_style = settings.type_product_card_title.style -%}
  {%- assign fonts_type_product_card_title_weight = settings.type_product_card_title.weight | times: 1 -%}
  {{ settings.type_product_card_title | font_face: font_display: fonts_type_product_card_title_display }}

  {%- comment -%}Italic{%- endcomment -%}

  {%- assign fonts_type_product_card_title_style_italic = settings.type_product_card_title | font_modify: 'style', 'italic' | map: 'style' | default: 'italic' -%}
  {{ settings.type_product_card_title | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_product_card_title_display }}

{%- comment -%}Custom{%- endcomment -%}
{%- assign font_family = 'type_product_card_title_custom' -%}

{%- assign font_textarea = settings[font_family] -%}
{%- assign font_textarea_split = font_textarea | newline_to_br | split: '<br />' -%}
{%- assign font_additional_weights = 'initial' | split: ',' -%}

{%- for font in font_textarea_split -%}
  {%- assign font_split = font | split: ':' -%}
  {%- assign font_weight = 400 -%}
  {%- assign font_weight_name = 'initial' -%}
  {%- assign font_style = 'normal' -%}
  {%- assign font_style_name = 'initial' -%}

  {%- if font_split.size == 1 -%}
    {%- assign font_file = font_split[0] | strip -%}
  {%- else -%}
    {%- assign font_weight_style_space_to_hyphen = font_split[0] | replace: ' ', '-' -%}
    {%- assign font_weight_style = font_weight_style_space_to_hyphen | split: '-' -%}

    {%- if font_weight_style.size == 1 -%}
      {%- assign font_weight_style = font_weight_style[0] | strip | downcase -%}

      {%- if font_weight_style == 'italic' -%}
        {%- assign font_style_name = font_weight_style -%}
      {%- else -%}
        {%- assign font_weight_name = font_weight_style -%}
      {%- endif -%}
    {%- else -%}
      {%- assign font_weight_name = font_weight_style[0] | strip | downcase -%}
      {%- assign font_style_name = font_weight_style[1] | strip | downcase -%}
    {%- endif -%}

    {%- comment -%}
      At this point we should have valid a valid weight and style variables,
      we can continue onto the new iteration if it isnt valid.
    {%- endcomment -%}
    {%- if font_weight_name contains 'initial' != true and font_weight_name contains 'lighter' != true and font_weight_name contains 'bolder' != true -%}
      {%- continue -%}
    {%- endif -%}
    {%- if font_style_name != 'initial' and font_style_name != 'italic' -%}
      {%- continue -%}
    {%- endif -%}

    {%- if font_weight_name contains 'initial' -%}
      {%- if font_weight_name == 'initial' -%}
        {%- assign font_weight = 400 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'initial' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 400 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'lighter' -%}
      {%- if font_weight_name == 'lighter' -%}
        {%- assign font_weight = 300 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'lighter' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 300 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'bolder' -%}
      {%- if font_weight_name == 'bolder' -%}
        {%- assign font_weight = 700 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'bolder' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 700 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    {%- if font_style_name == 'italic' -%}
      {%- assign font_style = 'italic' -%}
    {%- endif -%}

    {%- assign font_file = font_split[1] | strip -%}
  {%- endif -%}

  {%- unless font_weight_name == 'initial' -%}
    {%- unless font_additional_weights contains font_weight_name -%}
      {%- continue -%}
    {%- endunless -%}
  {%- endunless -%}

  {%- assign font_file_split = font_file | split: '.' -%}

  {%- comment -%}
    If the assumed file component has a format associated with it,
    treat it as a file otherwise treat it as a family name and dont output a font face.
  {%- endcomment -%}
  {% if font_file_split.size > 1 %}
    {%- assign font_file_format_index = font_file_split | size | minus: 1 -%}
    {%- assign font_format = font_file_split[font_file_format_index] | strip -%}

    {%- comment -%}
      By checking if a font_file contains a forward slash we can
      determine whether we should treat the file as absolute URL
      or a file that must be sent through the file_url filter.

      This allows externally hosted files to be used as custom fonts.
    {%- endcomment -%}
    @font-face {
      font-family: "{{ font_family }}";
      font-weight: {{ font_weight }};
      font-style: {{ font_style }};
      font-display: {{ fonts_type_product_card_title_display }};
      src:
        url("{%- if font_file contains '/' -%}{{ font_file }}{%- else -%}{{ font_file | file_url }}{%- endif -%}")
        format("{{ font_format }}");
    }
  {% else %}
    {%- assign font_family = font_file -%}
  {% endif %}

  {%- if font_weight_name == 'initial' and font_style_name != 'italic' -%}
    {%- assign fonts_type_product_card_title_family = font_family -%}
    {%- assign fonts_type_product_card_title_style = font_style -%}
    {%- assign fonts_type_product_card_title_weight = font_weight -%}
    {%- assign fonts_type_product_card_title_style_italic = 'italic' -%}
  {%- elsif font_weight_name == 'lighter' -%}
    {%- assign fonts_type_product_card_title_weight_lighter = font_weight -%}
  {%- elsif font_weight_name == 'bolder' -%}
    {%- assign fonts_type_product_card_title_weight_bolder = font_weight -%}
  {%- endif -%}
{%- endfor -%}

{%- endif -%}


{%- comment -%}type_product_vendor{%- endcomment -%}

{%- assign fonts_type_product_vendor_display = settings.font_display | default: 'auto' -%}

{%- if font_family_override and font_family_override != 'disable' -%}
  {%- comment -%}Font family override{%- endcomment -%}
  {%- assign fonts_type_product_vendor_family = font_family_override -%}
  {%- assign fonts_type_product_vendor_style = 'normal' -%}
  {%- assign fonts_type_product_vendor_weight = 400 -%}
  {%- assign fonts_type_product_vendor_style_italic = 'italic' -%}
  {%- assign fonts_type_product_vendor_weight_bolder = 700 -%}
  {%- assign fonts_type_product_vendor_weight_lighter = 300 -%}
{%- else -%}

  {%- comment -%}Normal{%- endcomment -%}

  {%- assign fonts_type_product_vendor_family = settings.type_product_vendor.family | append: ',' | append: settings.type_product_vendor.fallback_families -%}
  {%- assign fonts_type_product_vendor_style = settings.type_product_vendor.style -%}
  {%- assign fonts_type_product_vendor_weight = settings.type_product_vendor.weight | times: 1 -%}
  {{ settings.type_product_vendor | font_face: font_display: fonts_type_product_vendor_display }}

  {%- comment -%}Italic{%- endcomment -%}

  {%- assign fonts_type_product_vendor_style_italic = settings.type_product_vendor | font_modify: 'style', 'italic' | map: 'style' | default: 'italic' -%}
  {{ settings.type_product_vendor | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_product_vendor_display }}

{%- comment -%}Custom{%- endcomment -%}
{%- assign font_family = 'type_product_vendor_custom' -%}

{%- assign font_textarea = settings[font_family] -%}
{%- assign font_textarea_split = font_textarea | newline_to_br | split: '<br />' -%}
{%- assign font_additional_weights = 'initial' | split: ',' -%}

{%- for font in font_textarea_split -%}
  {%- assign font_split = font | split: ':' -%}
  {%- assign font_weight = 400 -%}
  {%- assign font_weight_name = 'initial' -%}
  {%- assign font_style = 'normal' -%}
  {%- assign font_style_name = 'initial' -%}

  {%- if font_split.size == 1 -%}
    {%- assign font_file = font_split[0] | strip -%}
  {%- else -%}
    {%- assign font_weight_style_space_to_hyphen = font_split[0] | replace: ' ', '-' -%}
    {%- assign font_weight_style = font_weight_style_space_to_hyphen | split: '-' -%}

    {%- if font_weight_style.size == 1 -%}
      {%- assign font_weight_style = font_weight_style[0] | strip | downcase -%}

      {%- if font_weight_style == 'italic' -%}
        {%- assign font_style_name = font_weight_style -%}
      {%- else -%}
        {%- assign font_weight_name = font_weight_style -%}
      {%- endif -%}
    {%- else -%}
      {%- assign font_weight_name = font_weight_style[0] | strip | downcase -%}
      {%- assign font_style_name = font_weight_style[1] | strip | downcase -%}
    {%- endif -%}

    {%- comment -%}
      At this point we should have valid a valid weight and style variables,
      we can continue onto the new iteration if it isnt valid.
    {%- endcomment -%}
    {%- if font_weight_name contains 'initial' != true and font_weight_name contains 'lighter' != true and font_weight_name contains 'bolder' != true -%}
      {%- continue -%}
    {%- endif -%}
    {%- if font_style_name != 'initial' and font_style_name != 'italic' -%}
      {%- continue -%}
    {%- endif -%}

    {%- if font_weight_name contains 'initial' -%}
      {%- if font_weight_name == 'initial' -%}
        {%- assign font_weight = 400 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'initial' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 400 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'lighter' -%}
      {%- if font_weight_name == 'lighter' -%}
        {%- assign font_weight = 300 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'lighter' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 300 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'bolder' -%}
      {%- if font_weight_name == 'bolder' -%}
        {%- assign font_weight = 700 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'bolder' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 700 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    {%- if font_style_name == 'italic' -%}
      {%- assign font_style = 'italic' -%}
    {%- endif -%}

    {%- assign font_file = font_split[1] | strip -%}
  {%- endif -%}

  {%- unless font_weight_name == 'initial' -%}
    {%- unless font_additional_weights contains font_weight_name -%}
      {%- continue -%}
    {%- endunless -%}
  {%- endunless -%}

  {%- assign font_file_split = font_file | split: '.' -%}

  {%- comment -%}
    If the assumed file component has a format associated with it,
    treat it as a file otherwise treat it as a family name and dont output a font face.
  {%- endcomment -%}
  {% if font_file_split.size > 1 %}
    {%- assign font_file_format_index = font_file_split | size | minus: 1 -%}
    {%- assign font_format = font_file_split[font_file_format_index] | strip -%}

    {%- comment -%}
      By checking if a font_file contains a forward slash we can
      determine whether we should treat the file as absolute URL
      or a file that must be sent through the file_url filter.

      This allows externally hosted files to be used as custom fonts.
    {%- endcomment -%}
    @font-face {
      font-family: "{{ font_family }}";
      font-weight: {{ font_weight }};
      font-style: {{ font_style }};
      font-display: {{ fonts_type_product_vendor_display }};
      src:
        url("{%- if font_file contains '/' -%}{{ font_file }}{%- else -%}{{ font_file | file_url }}{%- endif -%}")
        format("{{ font_format }}");
    }
  {% else %}
    {%- assign font_family = font_file -%}
  {% endif %}

  {%- if font_weight_name == 'initial' and font_style_name != 'italic' -%}
    {%- assign fonts_type_product_vendor_family = font_family -%}
    {%- assign fonts_type_product_vendor_style = font_style -%}
    {%- assign fonts_type_product_vendor_weight = font_weight -%}
    {%- assign fonts_type_product_vendor_style_italic = 'italic' -%}
  {%- elsif font_weight_name == 'lighter' -%}
    {%- assign fonts_type_product_vendor_weight_lighter = font_weight -%}
  {%- elsif font_weight_name == 'bolder' -%}
    {%- assign fonts_type_product_vendor_weight_bolder = font_weight -%}
  {%- endif -%}
{%- endfor -%}

{%- endif -%}


{%- comment -%}type_footer_heading{%- endcomment -%}

{%- assign fonts_type_footer_heading_display = settings.font_display | default: 'auto' -%}

{%- if font_family_override and font_family_override != 'disable' -%}
  {%- comment -%}Font family override{%- endcomment -%}
  {%- assign fonts_type_footer_heading_family = font_family_override -%}
  {%- assign fonts_type_footer_heading_style = 'normal' -%}
  {%- assign fonts_type_footer_heading_weight = 400 -%}
  {%- assign fonts_type_footer_heading_style_italic = 'italic' -%}
  {%- assign fonts_type_footer_heading_weight_bolder = 700 -%}
  {%- assign fonts_type_footer_heading_weight_lighter = 300 -%}
{%- else -%}

  {%- comment -%}Normal{%- endcomment -%}

  {%- assign fonts_type_footer_heading_family = settings.type_footer_heading.family | append: ',' | append: settings.type_footer_heading.fallback_families -%}
  {%- assign fonts_type_footer_heading_style = settings.type_footer_heading.style -%}
  {%- assign fonts_type_footer_heading_weight = settings.type_footer_heading.weight | times: 1 -%}
  {{ settings.type_footer_heading | font_face: font_display: fonts_type_footer_heading_display }}

  {%- comment -%}Italic{%- endcomment -%}

  {%- assign fonts_type_footer_heading_style_italic = settings.type_footer_heading | font_modify: 'style', 'italic' | map: 'style' | default: 'italic' -%}
  {{ settings.type_footer_heading | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_footer_heading_display }}

{%- comment -%}Custom{%- endcomment -%}
{%- assign font_family = 'type_footer_heading_custom' -%}

{%- assign font_textarea = settings[font_family] -%}
{%- assign font_textarea_split = font_textarea | newline_to_br | split: '<br />' -%}
{%- assign font_additional_weights = 'initial' | split: ',' -%}

{%- for font in font_textarea_split -%}
  {%- assign font_split = font | split: ':' -%}
  {%- assign font_weight = 400 -%}
  {%- assign font_weight_name = 'initial' -%}
  {%- assign font_style = 'normal' -%}
  {%- assign font_style_name = 'initial' -%}

  {%- if font_split.size == 1 -%}
    {%- assign font_file = font_split[0] | strip -%}
  {%- else -%}
    {%- assign font_weight_style_space_to_hyphen = font_split[0] | replace: ' ', '-' -%}
    {%- assign font_weight_style = font_weight_style_space_to_hyphen | split: '-' -%}

    {%- if font_weight_style.size == 1 -%}
      {%- assign font_weight_style = font_weight_style[0] | strip | downcase -%}

      {%- if font_weight_style == 'italic' -%}
        {%- assign font_style_name = font_weight_style -%}
      {%- else -%}
        {%- assign font_weight_name = font_weight_style -%}
      {%- endif -%}
    {%- else -%}
      {%- assign font_weight_name = font_weight_style[0] | strip | downcase -%}
      {%- assign font_style_name = font_weight_style[1] | strip | downcase -%}
    {%- endif -%}

    {%- comment -%}
      At this point we should have valid a valid weight and style variables,
      we can continue onto the new iteration if it isnt valid.
    {%- endcomment -%}
    {%- if font_weight_name contains 'initial' != true and font_weight_name contains 'lighter' != true and font_weight_name contains 'bolder' != true -%}
      {%- continue -%}
    {%- endif -%}
    {%- if font_style_name != 'initial' and font_style_name != 'italic' -%}
      {%- continue -%}
    {%- endif -%}

    {%- if font_weight_name contains 'initial' -%}
      {%- if font_weight_name == 'initial' -%}
        {%- assign font_weight = 400 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'initial' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 400 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'lighter' -%}
      {%- if font_weight_name == 'lighter' -%}
        {%- assign font_weight = 300 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'lighter' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 300 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'bolder' -%}
      {%- if font_weight_name == 'bolder' -%}
        {%- assign font_weight = 700 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'bolder' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 700 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    {%- if font_style_name == 'italic' -%}
      {%- assign font_style = 'italic' -%}
    {%- endif -%}

    {%- assign font_file = font_split[1] | strip -%}
  {%- endif -%}

  {%- unless font_weight_name == 'initial' -%}
    {%- unless font_additional_weights contains font_weight_name -%}
      {%- continue -%}
    {%- endunless -%}
  {%- endunless -%}

  {%- assign font_file_split = font_file | split: '.' -%}

  {%- comment -%}
    If the assumed file component has a format associated with it,
    treat it as a file otherwise treat it as a family name and dont output a font face.
  {%- endcomment -%}
  {% if font_file_split.size > 1 %}
    {%- assign font_file_format_index = font_file_split | size | minus: 1 -%}
    {%- assign font_format = font_file_split[font_file_format_index] | strip -%}

    {%- comment -%}
      By checking if a font_file contains a forward slash we can
      determine whether we should treat the file as absolute URL
      or a file that must be sent through the file_url filter.

      This allows externally hosted files to be used as custom fonts.
    {%- endcomment -%}
    @font-face {
      font-family: "{{ font_family }}";
      font-weight: {{ font_weight }};
      font-style: {{ font_style }};
      font-display: {{ fonts_type_footer_heading_display }};
      src:
        url("{%- if font_file contains '/' -%}{{ font_file }}{%- else -%}{{ font_file | file_url }}{%- endif -%}")
        format("{{ font_format }}");
    }
  {% else %}
    {%- assign font_family = font_file -%}
  {% endif %}

  {%- if font_weight_name == 'initial' and font_style_name != 'italic' -%}
    {%- assign fonts_type_footer_heading_family = font_family -%}
    {%- assign fonts_type_footer_heading_style = font_style -%}
    {%- assign fonts_type_footer_heading_weight = font_weight -%}
    {%- assign fonts_type_footer_heading_style_italic = 'italic' -%}
  {%- elsif font_weight_name == 'lighter' -%}
    {%- assign fonts_type_footer_heading_weight_lighter = font_weight -%}
  {%- elsif font_weight_name == 'bolder' -%}
    {%- assign fonts_type_footer_heading_weight_bolder = font_weight -%}
  {%- endif -%}
{%- endfor -%}

{%- endif -%}


{%- comment -%}type_highlights_bar{%- endcomment -%}

{%- assign fonts_type_highlights_bar_display = settings.font_display | default: 'auto' -%}

{%- if font_family_override and font_family_override != 'disable' -%}
  {%- comment -%}Font family override{%- endcomment -%}
  {%- assign fonts_type_highlights_bar_family = font_family_override -%}
  {%- assign fonts_type_highlights_bar_style = 'normal' -%}
  {%- assign fonts_type_highlights_bar_weight = 400 -%}
  {%- assign fonts_type_highlights_bar_style_italic = 'italic' -%}
  {%- assign fonts_type_highlights_bar_weight_bolder = 700 -%}
  {%- assign fonts_type_highlights_bar_weight_lighter = 300 -%}
{%- else -%}

  {%- comment -%}Normal{%- endcomment -%}

  {%- assign fonts_type_highlights_bar_family = settings.type_highlights_bar.family | append: ',' | append: settings.type_highlights_bar.fallback_families -%}
  {%- assign fonts_type_highlights_bar_style = settings.type_highlights_bar.style -%}
  {%- assign fonts_type_highlights_bar_weight = settings.type_highlights_bar.weight | times: 1 -%}
  {{ settings.type_highlights_bar | font_face: font_display: fonts_type_highlights_bar_display }}

  {%- comment -%}Italic{%- endcomment -%}

  {%- assign fonts_type_highlights_bar_style_italic = settings.type_highlights_bar | font_modify: 'style', 'italic' | map: 'style' | default: 'italic' -%}
  {{ settings.type_highlights_bar | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_highlights_bar_display }}

{%- comment -%}Custom{%- endcomment -%}
{%- assign font_family = 'type_highlights_bar_custom' -%}

{%- assign font_textarea = settings[font_family] -%}
{%- assign font_textarea_split = font_textarea | newline_to_br | split: '<br />' -%}
{%- assign font_additional_weights = 'initial' | split: ',' -%}

{%- for font in font_textarea_split -%}
  {%- assign font_split = font | split: ':' -%}
  {%- assign font_weight = 400 -%}
  {%- assign font_weight_name = 'initial' -%}
  {%- assign font_style = 'normal' -%}
  {%- assign font_style_name = 'initial' -%}

  {%- if font_split.size == 1 -%}
    {%- assign font_file = font_split[0] | strip -%}
  {%- else -%}
    {%- assign font_weight_style_space_to_hyphen = font_split[0] | replace: ' ', '-' -%}
    {%- assign font_weight_style = font_weight_style_space_to_hyphen | split: '-' -%}

    {%- if font_weight_style.size == 1 -%}
      {%- assign font_weight_style = font_weight_style[0] | strip | downcase -%}

      {%- if font_weight_style == 'italic' -%}
        {%- assign font_style_name = font_weight_style -%}
      {%- else -%}
        {%- assign font_weight_name = font_weight_style -%}
      {%- endif -%}
    {%- else -%}
      {%- assign font_weight_name = font_weight_style[0] | strip | downcase -%}
      {%- assign font_style_name = font_weight_style[1] | strip | downcase -%}
    {%- endif -%}

    {%- comment -%}
      At this point we should have valid a valid weight and style variables,
      we can continue onto the new iteration if it isnt valid.
    {%- endcomment -%}
    {%- if font_weight_name contains 'initial' != true and font_weight_name contains 'lighter' != true and font_weight_name contains 'bolder' != true -%}
      {%- continue -%}
    {%- endif -%}
    {%- if font_style_name != 'initial' and font_style_name != 'italic' -%}
      {%- continue -%}
    {%- endif -%}

    {%- if font_weight_name contains 'initial' -%}
      {%- if font_weight_name == 'initial' -%}
        {%- assign font_weight = 400 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'initial' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 400 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'lighter' -%}
      {%- if font_weight_name == 'lighter' -%}
        {%- assign font_weight = 300 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'lighter' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 300 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'bolder' -%}
      {%- if font_weight_name == 'bolder' -%}
        {%- assign font_weight = 700 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'bolder' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 700 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    {%- if font_style_name == 'italic' -%}
      {%- assign font_style = 'italic' -%}
    {%- endif -%}

    {%- assign font_file = font_split[1] | strip -%}
  {%- endif -%}

  {%- unless font_weight_name == 'initial' -%}
    {%- unless font_additional_weights contains font_weight_name -%}
      {%- continue -%}
    {%- endunless -%}
  {%- endunless -%}

  {%- assign font_file_split = font_file | split: '.' -%}

  {%- comment -%}
    If the assumed file component has a format associated with it,
    treat it as a file otherwise treat it as a family name and dont output a font face.
  {%- endcomment -%}
  {% if font_file_split.size > 1 %}
    {%- assign font_file_format_index = font_file_split | size | minus: 1 -%}
    {%- assign font_format = font_file_split[font_file_format_index] | strip -%}

    {%- comment -%}
      By checking if a font_file contains a forward slash we can
      determine whether we should treat the file as absolute URL
      or a file that must be sent through the file_url filter.

      This allows externally hosted files to be used as custom fonts.
    {%- endcomment -%}
    @font-face {
      font-family: "{{ font_family }}";
      font-weight: {{ font_weight }};
      font-style: {{ font_style }};
      font-display: {{ fonts_type_highlights_bar_display }};
      src:
        url("{%- if font_file contains '/' -%}{{ font_file }}{%- else -%}{{ font_file | file_url }}{%- endif -%}")
        format("{{ font_format }}");
    }
  {% else %}
    {%- assign font_family = font_file -%}
  {% endif %}

  {%- if font_weight_name == 'initial' and font_style_name != 'italic' -%}
    {%- assign fonts_type_highlights_bar_family = font_family -%}
    {%- assign fonts_type_highlights_bar_style = font_style -%}
    {%- assign fonts_type_highlights_bar_weight = font_weight -%}
    {%- assign fonts_type_highlights_bar_style_italic = 'italic' -%}
  {%- elsif font_weight_name == 'lighter' -%}
    {%- assign fonts_type_highlights_bar_weight_lighter = font_weight -%}
  {%- elsif font_weight_name == 'bolder' -%}
    {%- assign fonts_type_highlights_bar_weight_bolder = font_weight -%}
  {%- endif -%}
{%- endfor -%}

{%- endif -%}


{%- comment -%}type_signpost{%- endcomment -%}

{%- assign fonts_type_signpost_display = settings.font_display | default: 'auto' -%}

{%- if font_family_override and font_family_override != 'disable' -%}
  {%- comment -%}Font family override{%- endcomment -%}
  {%- assign fonts_type_signpost_family = font_family_override -%}
  {%- assign fonts_type_signpost_style = 'normal' -%}
  {%- assign fonts_type_signpost_weight = 400 -%}
  {%- assign fonts_type_signpost_style_italic = 'italic' -%}
  {%- assign fonts_type_signpost_weight_bolder = 700 -%}
  {%- assign fonts_type_signpost_weight_lighter = 300 -%}
{%- else -%}

  {%- comment -%}Normal{%- endcomment -%}

  {%- assign fonts_type_signpost_family = settings.type_signpost.family | append: ',' | append: settings.type_signpost.fallback_families -%}
  {%- assign fonts_type_signpost_style = settings.type_signpost.style -%}
  {%- assign fonts_type_signpost_weight = settings.type_signpost.weight | times: 1 -%}
  {{ settings.type_signpost | font_face: font_display: fonts_type_signpost_display }}

  {%- comment -%}Italic{%- endcomment -%}

  {%- assign fonts_type_signpost_style_italic = settings.type_signpost | font_modify: 'style', 'italic' | map: 'style' | default: 'italic' -%}
  {{ settings.type_signpost | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_signpost_display }}

{%- comment -%}Custom{%- endcomment -%}
{%- assign font_family = 'type_signpost_custom' -%}

{%- assign font_textarea = settings[font_family] -%}
{%- assign font_textarea_split = font_textarea | newline_to_br | split: '<br />' -%}
{%- assign font_additional_weights = 'initial' | split: ',' -%}

{%- for font in font_textarea_split -%}
  {%- assign font_split = font | split: ':' -%}
  {%- assign font_weight = 400 -%}
  {%- assign font_weight_name = 'initial' -%}
  {%- assign font_style = 'normal' -%}
  {%- assign font_style_name = 'initial' -%}

  {%- if font_split.size == 1 -%}
    {%- assign font_file = font_split[0] | strip -%}
  {%- else -%}
    {%- assign font_weight_style_space_to_hyphen = font_split[0] | replace: ' ', '-' -%}
    {%- assign font_weight_style = font_weight_style_space_to_hyphen | split: '-' -%}

    {%- if font_weight_style.size == 1 -%}
      {%- assign font_weight_style = font_weight_style[0] | strip | downcase -%}

      {%- if font_weight_style == 'italic' -%}
        {%- assign font_style_name = font_weight_style -%}
      {%- else -%}
        {%- assign font_weight_name = font_weight_style -%}
      {%- endif -%}
    {%- else -%}
      {%- assign font_weight_name = font_weight_style[0] | strip | downcase -%}
      {%- assign font_style_name = font_weight_style[1] | strip | downcase -%}
    {%- endif -%}

    {%- comment -%}
      At this point we should have valid a valid weight and style variables,
      we can continue onto the new iteration if it isnt valid.
    {%- endcomment -%}
    {%- if font_weight_name contains 'initial' != true and font_weight_name contains 'lighter' != true and font_weight_name contains 'bolder' != true -%}
      {%- continue -%}
    {%- endif -%}
    {%- if font_style_name != 'initial' and font_style_name != 'italic' -%}
      {%- continue -%}
    {%- endif -%}

    {%- if font_weight_name contains 'initial' -%}
      {%- if font_weight_name == 'initial' -%}
        {%- assign font_weight = 400 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'initial' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 400 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'lighter' -%}
      {%- if font_weight_name == 'lighter' -%}
        {%- assign font_weight = 300 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'lighter' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 300 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'bolder' -%}
      {%- if font_weight_name == 'bolder' -%}
        {%- assign font_weight = 700 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'bolder' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 700 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    {%- if font_style_name == 'italic' -%}
      {%- assign font_style = 'italic' -%}
    {%- endif -%}

    {%- assign font_file = font_split[1] | strip -%}
  {%- endif -%}

  {%- unless font_weight_name == 'initial' -%}
    {%- unless font_additional_weights contains font_weight_name -%}
      {%- continue -%}
    {%- endunless -%}
  {%- endunless -%}

  {%- assign font_file_split = font_file | split: '.' -%}

  {%- comment -%}
    If the assumed file component has a format associated with it,
    treat it as a file otherwise treat it as a family name and dont output a font face.
  {%- endcomment -%}
  {% if font_file_split.size > 1 %}
    {%- assign font_file_format_index = font_file_split | size | minus: 1 -%}
    {%- assign font_format = font_file_split[font_file_format_index] | strip -%}

    {%- comment -%}
      By checking if a font_file contains a forward slash we can
      determine whether we should treat the file as absolute URL
      or a file that must be sent through the file_url filter.

      This allows externally hosted files to be used as custom fonts.
    {%- endcomment -%}
    @font-face {
      font-family: "{{ font_family }}";
      font-weight: {{ font_weight }};
      font-style: {{ font_style }};
      font-display: {{ fonts_type_signpost_display }};
      src:
        url("{%- if font_file contains '/' -%}{{ font_file }}{%- else -%}{{ font_file | file_url }}{%- endif -%}")
        format("{{ font_format }}");
    }
  {% else %}
    {%- assign font_family = font_file -%}
  {% endif %}

  {%- if font_weight_name == 'initial' and font_style_name != 'italic' -%}
    {%- assign fonts_type_signpost_family = font_family -%}
    {%- assign fonts_type_signpost_style = font_style -%}
    {%- assign fonts_type_signpost_weight = font_weight -%}
    {%- assign fonts_type_signpost_style_italic = 'italic' -%}
  {%- elsif font_weight_name == 'lighter' -%}
    {%- assign fonts_type_signpost_weight_lighter = font_weight -%}
  {%- elsif font_weight_name == 'bolder' -%}
    {%- assign fonts_type_signpost_weight_bolder = font_weight -%}
  {%- endif -%}
{%- endfor -%}

{%- endif -%}


{%- comment -%}type_body_bold{%- endcomment -%}

{%- assign fonts_type_body_bold_display = settings.font_display | default: 'auto' -%}

{%- if font_family_override and font_family_override != 'disable' -%}
  {%- comment -%}Font family override{%- endcomment -%}
  {%- assign fonts_type_body_bold_family = font_family_override -%}
  {%- assign fonts_type_body_bold_style = 'normal' -%}
  {%- assign fonts_type_body_bold_weight = 400 -%}
  {%- assign fonts_type_body_bold_style_italic = 'italic' -%}
  {%- assign fonts_type_body_bold_weight_bolder = 700 -%}
  {%- assign fonts_type_body_bold_weight_lighter = 300 -%}
{%- else -%}

  {%- comment -%}Normal{%- endcomment -%}

  {%- assign fonts_type_body_bold_family = settings.type_body_bold.family | append: ',' | append: settings.type_body_bold.fallback_families -%}
  {%- assign fonts_type_body_bold_style = settings.type_body_bold.style -%}
  {%- assign fonts_type_body_bold_weight = settings.type_body_bold.weight | times: 1 -%}
  {{ settings.type_body_bold | font_face: font_display: fonts_type_body_bold_display }}

  {%- comment -%}Italic{%- endcomment -%}

  {%- assign fonts_type_body_bold_style_italic = settings.type_body_bold | font_modify: 'style', 'italic' | map: 'style' | default: 'italic' -%}
  {{ settings.type_body_bold | font_modify: 'style', 'italic' | font_face: font_display: fonts_type_body_bold_display }}

{%- comment -%}Custom{%- endcomment -%}
{%- assign font_family = 'type_body_bold_custom' -%}

{%- assign font_textarea = settings[font_family] -%}
{%- assign font_textarea_split = font_textarea | newline_to_br | split: '<br />' -%}
{%- assign font_additional_weights = 'initial' | split: ',' -%}

{%- for font in font_textarea_split -%}
  {%- assign font_split = font | split: ':' -%}
  {%- assign font_weight = 400 -%}
  {%- assign font_weight_name = 'initial' -%}
  {%- assign font_style = 'normal' -%}
  {%- assign font_style_name = 'initial' -%}

  {%- if font_split.size == 1 -%}
    {%- assign font_file = font_split[0] | strip -%}
  {%- else -%}
    {%- assign font_weight_style_space_to_hyphen = font_split[0] | replace: ' ', '-' -%}
    {%- assign font_weight_style = font_weight_style_space_to_hyphen | split: '-' -%}

    {%- if font_weight_style.size == 1 -%}
      {%- assign font_weight_style = font_weight_style[0] | strip | downcase -%}

      {%- if font_weight_style == 'italic' -%}
        {%- assign font_style_name = font_weight_style -%}
      {%- else -%}
        {%- assign font_weight_name = font_weight_style -%}
      {%- endif -%}
    {%- else -%}
      {%- assign font_weight_name = font_weight_style[0] | strip | downcase -%}
      {%- assign font_style_name = font_weight_style[1] | strip | downcase -%}
    {%- endif -%}

    {%- comment -%}
      At this point we should have valid a valid weight and style variables,
      we can continue onto the new iteration if it isnt valid.
    {%- endcomment -%}
    {%- if font_weight_name contains 'initial' != true and font_weight_name contains 'lighter' != true and font_weight_name contains 'bolder' != true -%}
      {%- continue -%}
    {%- endif -%}
    {%- if font_style_name != 'initial' and font_style_name != 'italic' -%}
      {%- continue -%}
    {%- endif -%}

    {%- if font_weight_name contains 'initial' -%}
      {%- if font_weight_name == 'initial' -%}
        {%- assign font_weight = 400 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'initial' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 400 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'lighter' -%}
      {%- if font_weight_name == 'lighter' -%}
        {%- assign font_weight = 300 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'lighter' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 300 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- elsif font_weight_name contains 'bolder' -%}
      {%- if font_weight_name == 'bolder' -%}
        {%- assign font_weight = 700 -%}
      {%- else -%}
        {%- assign font_weight_json = font_weight_name | split: 'bolder' | last | plus: 0 | json -%}
        {%- assign font_weight_name = font_weight_name | split: font_weight_json | first -%}
        {%- if font_weight_json contains '"' -%}
          {%- assign font_weight = 700 -%}
        {%- else -%}
          {%- assign font_weight = font_weight_json -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    {%- if font_style_name == 'italic' -%}
      {%- assign font_style = 'italic' -%}
    {%- endif -%}

    {%- assign font_file = font_split[1] | strip -%}
  {%- endif -%}

  {%- unless font_weight_name == 'initial' -%}
    {%- unless font_additional_weights contains font_weight_name -%}
      {%- continue -%}
    {%- endunless -%}
  {%- endunless -%}

  {%- assign font_file_split = font_file | split: '.' -%}

  {%- comment -%}
    If the assumed file component has a format associated with it,
    treat it as a file otherwise treat it as a family name and dont output a font face.
  {%- endcomment -%}
  {% if font_file_split.size > 1 %}
    {%- assign font_file_format_index = font_file_split | size | minus: 1 -%}
    {%- assign font_format = font_file_split[font_file_format_index] | strip -%}

    {%- comment -%}
      By checking if a font_file contains a forward slash we can
      determine whether we should treat the file as absolute URL
      or a file that must be sent through the file_url filter.

      This allows externally hosted files to be used as custom fonts.
    {%- endcomment -%}
    @font-face {
      font-family: "{{ font_family }}";
      font-weight: {{ font_weight }};
      font-style: {{ font_style }};
      font-display: {{ fonts_type_body_bold_display }};
      src:
        url("{%- if font_file contains '/' -%}{{ font_file }}{%- else -%}{{ font_file | file_url }}{%- endif -%}")
        format("{{ font_format }}");
    }
  {% else %}
    {%- assign font_family = font_file -%}
  {% endif %}

  {%- if font_weight_name == 'initial' and font_style_name != 'italic' -%}
    {%- assign fonts_type_body_bold_family = font_family -%}
    {%- assign fonts_type_body_bold_style = font_style -%}
    {%- assign fonts_type_body_bold_weight = font_weight -%}
    {%- assign fonts_type_body_bold_style_italic = 'italic' -%}
  {%- elsif font_weight_name == 'lighter' -%}
    {%- assign fonts_type_body_bold_weight_lighter = font_weight -%}
  {%- elsif font_weight_name == 'bolder' -%}
    {%- assign fonts_type_body_bold_weight_bolder = font_weight -%}
  {%- endif -%}
{%- endfor -%}

{%- endif -%}
{% comment %}Inject font-sizes begin{% endcomment %}
{%- assign font_size_types = 'heading-large|heading-medium|heading-1|heading-2|heading-3|heading-4|heading-5|heading-6|section-heading|highlight-banner-heading|body-larger|body-large|body-medium|body|form|body-small|body-smaller|body-smallest|body-tiny|product-card|button-small|button-medium|button-large|button-x-large|button-signpost|menu-large|menu|footer-heading|input' | split: '|' -%}
{%- assign font_size_types_forloop_iterations = font_size_types | size | times: 2 | minus: 1 -%}
{%- assign font_size_half_iterations_minus_one = font_size_types.size | minus: 1 -%}
{%- assign font_size_half_iterations_plus_one = font_size_types.size | plus: 1 -%}
{%- for i in (0..font_size_types_forloop_iterations) -%}
  {%- assign font_size_types_index = i | modulo: font_size_types.size -%}
  {%- assign font_size_type = font_size_types[font_size_types_index] -%}
  {%- case font_size_type -%}
  {%- when 'heading-large' -%}
    {%- assign font_size_constant_scale = 2.125 -%}
    {%- assign font_size_scale = settings.type_heading_size | divided_by: 100.00 -%}
    {%- assign font_size_capitalize = settings.type_heading_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -3.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -3.0 -%}
    {%- assign font_size_mobile_scale = 0.4 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'heading-medium' -%}
    {%- assign font_size_constant_scale = 1.875 -%}
    {%- assign font_size_scale = settings.type_heading_size | divided_by: 100.00 -%}
    {%- assign font_size_capitalize = settings.type_heading_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -3.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -3.0 -%}
    {%- assign font_size_mobile_scale = 0.4 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'heading-1' -%}
    {%- assign font_size_constant_scale = 1.75 -%}
    {%- assign font_size_scale = settings.type_heading_size | divided_by: 100.00 -%}
    {%- assign font_size_capitalize = settings.type_heading_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -3.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -3.0 -%}
    {%- assign font_size_mobile_scale = 0.4 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'heading-2' -%}
    {%- assign font_size_constant_scale = 1.625 -%}
    {%- assign font_size_scale = settings.type_heading_size | divided_by: 100.00 -%}
    {%- assign font_size_capitalize = settings.type_heading_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_scale = 0.4 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'heading-3' -%}
    {%- assign font_size_constant_scale = 1.5 -%}
    {%- assign font_size_scale = settings.type_heading_size | divided_by: 100.00 -%}
    {%- assign font_size_capitalize = settings.type_heading_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_scale = 0.4 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'heading-4' -%}
    {%- assign font_size_constant_scale = 1.25 -%}
    {%- assign font_size_scale = settings.type_heading_size | divided_by: 100.00 -%}
    {%- assign font_size_capitalize = settings.type_heading_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_scale = 0.4 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'heading-5' -%}
    {%- assign font_size_constant_scale = 1.125 -%}
    {%- assign font_size_scale = 1.0 -%}
    {%- assign font_size_capitalize = settings.type_heading_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'heading-6' -%}
    {%- assign font_size_constant_scale = 1.125 -%}
    {%- assign font_size_scale = 1.0 -%}
    {%- assign font_size_capitalize = settings.type_heading_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'section-heading' -%}
    {%- assign font_size_constant_scale = 1.5 -%}
    {%- assign font_size_scale = settings.type_section_heading_size | divided_by: 100.00 -%}
    {%- assign font_size_capitalize = settings.type_section_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_scale = 0.4 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'highlight-banner-heading' -%}
    {%- assign font_size_constant_scale = 1.125 -%}
    {%- assign font_size_scale = settings.type_highlights_size | divided_by: 100.0 -%}
    {%- assign font_size_capitalize = settings.type_highlights_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_scale = 0.6 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'body-larger' -%}
    {%- assign font_size_constant_scale = 1.375 -%}
    {%- assign font_size_scale = 1.0 -%}
    {%- assign font_size_capitalize = false -%}
    {%- assign font_size_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'body-large' -%}
    {%- assign font_size_constant_scale = 1.25 -%}
    {%- assign font_size_scale = 1.0 -%}
    {%- assign font_size_capitalize = false -%}
    {%- assign font_size_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'body-medium' -%}
    {%- assign font_size_constant_scale = 1.125 -%}
    {%- assign font_size_scale = 1.0 -%}
    {%- assign font_size_capitalize = false -%}
    {%- assign font_size_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'body' -%}
    {%- assign font_size_constant_scale = 1.0 -%}
    {%- assign font_size_scale = 1.0 -%}
    {%- assign font_size_capitalize = false -%}
    {%- assign font_size_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'form' -%}
    {%- assign font_size_constant_scale = 1.0 -%}
    {%- assign font_size_scale = 1.0 -%}
    {%- assign font_size_capitalize = false -%}
    {%- assign font_size_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_body = 16.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'body-small' -%}
    {%- assign font_size_constant_scale = 0.9375 -%}
    {%- assign font_size_scale = 1.0 -%}
    {%- assign font_size_capitalize = false -%}
    {%- assign font_size_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'body-smaller' -%}
    {%- assign font_size_constant_scale = 0.875 -%}
    {%- assign font_size_scale = 1.0 -%}
    {%- assign font_size_capitalize = false -%}
    {%- assign font_size_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'body-smallest' -%}
    {%- assign font_size_constant_scale = 0.8125 -%}
    {%- assign font_size_scale = 1.0 -%}
    {%- assign font_size_capitalize = false -%}
    {%- assign font_size_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'body-tiny' -%}
    {%- assign font_size_constant_scale = 0.75 -%}
    {%- assign font_size_scale = 1.0 -%}
    {%- assign font_size_capitalize = false -%}
    {%- assign font_size_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'product-card' -%}
    {%- assign font_size_constant_scale = 1.0 -%}
    {%- assign font_size_scale = settings.type_product_card_size | divided_by: 100.0 -%}
    {%- assign font_size_capitalize = false -%}
    {%- assign font_size_capitalize_adjustment = 0.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = 0.0 -%}
    {%- assign font_size_mobile_scale = 0.6 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'button-small' -%}
    {%- assign font_size_constant_scale = 0.875 -%}
    {%- assign font_size_scale = settings.type_button_sizing | divided_by: 100.0 -%}
    {%- assign font_size_capitalize = settings.type_button_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = 0.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'button-medium' -%}
    {%- assign font_size_constant_scale = 1.0 -%}
    {%- assign font_size_scale = settings.type_button_sizing | divided_by: 100.0 -%}
    {%- assign font_size_capitalize = settings.type_button_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = 0.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = -1.0 -%}
  {%- when 'button-large' -%}
    {%- assign font_size_constant_scale = 1.125 -%}
    {%- assign font_size_scale = settings.type_button_sizing | divided_by: 100.0 -%}
    {%- assign font_size_capitalize = settings.type_button_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = 0.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = -1.0 -%}
  {%- when 'button-x-large' -%}
    {%- assign font_size_constant_scale = 1.3125 -%}
    {%- assign font_size_scale = settings.type_button_sizing | divided_by: 100.0 -%}
    {%- assign font_size_capitalize = settings.type_button_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = 0.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = -1.0 -%}
  {%- when 'button-signpost' -%}
    {%- assign font_size_constant_scale = 1.0 -%}
    {%- assign font_size_scale = settings.type_signpost_sizing | divided_by: 100.0 -%}
    {%- assign font_size_capitalize = false -%}
    {%- assign font_size_capitalize_adjustment = 0.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = 0.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'menu-large' -%}
    {%- assign font_size_constant_scale = 1.0625 -%}
    {%- assign font_size_scale = settings.type_menu_size | divided_by: 100.0 -%}
    {%- assign font_size_capitalize = false -%}
    {%- assign font_size_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = 0.0 -%}
    {%- assign font_size_mobile_scale = 0.5 -%}
    {%- assign font_size_mobile_adjustment = -1.0 -%}
  {%- when 'menu' -%}
    {%- assign font_size_constant_scale = 1.0 -%}
    {%- assign font_size_scale = settings.type_menu_size | divided_by: 100.0 -%}
    {%- assign font_size_capitalize = settings.type_menu_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -1.0 -%}
    {%- assign font_size_mobile_scale = 0.5 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'footer-heading' -%}
    {%- assign font_size_constant_scale = 1.125 -%}
    {%- assign font_size_scale = settings.type_footer_heading_size | divided_by: 100.0 -%}
    {%- assign font_size_capitalize = settings.type_footer_heading_capitalize -%}
    {%- assign font_size_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = -2.0 -%}
    {%- assign font_size_mobile_scale = 0.4 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- when 'input' -%}
    {%- assign font_size_constant_scale = 1.0 -%}
    {%- assign font_size_scale = 1.0 -%}
    {%- assign font_size_capitalize = false -%}
    {%- assign font_size_capitalize_adjustment = 0.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = 0.0 -%}
    {%- assign font_size_mobile_scale = 1.0 -%}
    {%- assign font_size_mobile_adjustment = 0.0 -%}
  {%- endcase -%}

  {%- unless font_size_body -%}
    {%- assign font_size_body = settings.type_size_base -%}
  {%- endunless -%}
  {%- unless font_size_mobile_body -%}
    {%- assign font_size_mobile_body = 15.0 %}
  {%- endunless -%}
  {%- unless font_size_capitalize -%}
    {%- assign font_size_capitalize_adjustment = 0.0 -%}
    {%- assign font_size_mobile_capitalize_adjustment = 0.0 -%}
  {%- endunless -%}

  {%- assign font_size_rem = font_size_body | times: font_size_constant_scale | times: font_size_scale | plus: font_size_capitalize_adjustment | divided_by: 16.0 -%}
  {%- assign font_size_mobile_scale_1 = font_size_scale | minus: 1.0 | times: font_size_mobile_scale | plus: 1.0 -%}
  {%- assign font_size_mobile_rem = font_size_mobile_body | times: font_size_constant_scale | times: font_size_mobile_scale_1 | plus: font_size_mobile_capitalize_adjustment | plus: font_size_mobile_adjustment | divided_by: 16.0 -%}
  {%- if forloop.first %}
    :root {
  {%- endif -%}
  {%- if forloop.index0 == font_size_types.size -%}
    @media screen and (max-width: 719px) {
      :root {
  {%- endif -%}
  {%- if forloop.index0 == font_size_half_iterations_plus_one -%}
    @media screen and (max-width: 859px) {
      :root {
  {%- endif -%}

  --font-size-{{ font_size_type }}: {% if forloop.index < font_size_types.size %}{{ font_size_rem }}{% else %}{{ font_size_mobile_rem }}{% endif %}rem;
  --font-size-{{ font_size_type }}-base: {{ font_size_body }};
  --font-size-{{ font_size_type }}-fcscale: {{ font_size_constant_scale }};
  --font-size-{{ font_size_type }}-fscale: {{ font_size_scale }};
  --font-size-{{ font_size_type }}-fadjust: {{ font_size_capitalize_adjustment }};
  --font-size-{{ font_size_type }}-mbase: {{ font_size_mobile_body }};
  --font-size-{{ font_size_type }}-mfcscale: {{ font_size_constant_scale }};
  --font-size-{{ font_size_type }}-mfscale: {{ font_size_mobile_scale_1 }};
  --font-size-{{ font_size_type }}-mfadjust: {{ font_size_mobile_adjustment }};

  {%- if forloop.index0 == font_size_half_iterations_minus_one -%}
    }
  {%- endif -%}
  {%- if forloop.index0 == font_size_types.size -%}
    }}
  {%- endif -%}
  {%- if forloop.last -%}
    }}
  {%- endif -%}

  {%- assign font_size_body = false -%}
  {%- assign font_size_capitalize = false -%}
  {%- assign font_size_capitalize_adjustment = false -%}
  {%- assign font_size_constant_scale = false -%}
  {%- assign font_size_mobile_adjustment = false -%}
  {%- assign font_size_mobile_body = false %}
  {%- assign font_size_mobile_capitalize_adjustment = false -%}
  {%- assign font_size_mobile_rem = false -%}
  {%- assign font_size_mobile_scale = false -%}
  {%- assign font_size_mobile_scale_1 = false -%}
  {%- assign font_size_rem = false -%}
  {%- assign font_size_scale = false -%}
{%- endfor -%}
{% comment %}Inject font-sizes end{% endcomment %}

/* Key portions of normalize.css */
/* Key portions of normalize.css */
html {
  font-family: sans-serif;
  line-height: 1.15;
}

body {
  margin: 0;
}

/* Setting abstracted libraries */
/* Internal libraries */
{% comment %}
  Calculate color based on lightness of color layout background color and black and white colors
{% endcomment %}
{% assign background_lightness = settings.color_layout_site_background | color_extract: 'lightness' %}
{% if background_lightness >= 50 %}
  {% assign color_layout_site_background_border_mix = '#000000' %}
{% else %}
  {% assign color_layout_site_background_border_mix = '#FFFFFF' %}
{% endif %}

{% assign color_border = settings.color_layout_site_background | color_mix: color_layout_site_background_border_mix, 50 %}

{% assign morph_color = settings.color_products_vendor_name %}
{% capture color_morph_products_vendor_name %}{% comment %}Inject morph begin{% endcomment %}
{% comment %}
  This adjusts the color to give it an appropriate difference from the original color.
  It is usually used for link hover color, and things where we need to distinguish a change.

  @param morph_color {Color}
    The origin color to morph

  @param morph_adjustment {Number}
    The number to multiply the lightness and saturation by. Default 2.
{% endcomment %}

{% if morph_adjustment == blank %}
  {% assign morph_adjustment = 2 %}
{% endif %}

{% assign color_lightness = morph_color | color_extract: 'lightness' %}

{% if color_lightness > 20 %}
  {% if color_lightness > 50 %}
    {% assign light_adjustment = color_lightness | divided_by: 25.0 | times: morph_adjustment %}
  {% else %}
    {% assign light_adjustment = color_lightness | divided_by: 15.0 | times: morph_adjustment %}
  {% endif %}
  {% assign new_color = morph_color | color_darken: light_adjustment %}
{% else %}
  {% if color_lightness < 7 %}
    {% assign light_adjustment = 3 | times: morph_adjustment %}
    {% assign new_color = morph_color | color_desaturate: 45 %}
  {% elsif color_lightness < 12 %}
    {% assign light_adjustment = 2.25 | times: morph_adjustment %}
    {% assign new_color = morph_color | color_desaturate: 15 %}
  {% else %}
    {% assign light_adjustment = 1.75 | times: morph_adjustment %}
    {% assign new_color = morph_color %}
  {% endif %}
  {% assign new_color = new_color | color_lighten: light_adjustment %}
{% endif %}

{{ new_color }}

{% assign morph_adjustment = blank %}
{% comment %}Inject morph end{% endcomment %}
{% endcapture %}
{% assign morph_color = settings.color_forms_input_border %}
{% capture color_morph_forms_input_border %}{% comment %}Inject morph begin{% endcomment %}
{% comment %}
  This adjusts the color to give it an appropriate difference from the original color.
  It is usually used for link hover color, and things where we need to distinguish a change.

  @param morph_color {Color}
    The origin color to morph

  @param morph_adjustment {Number}
    The number to multiply the lightness and saturation by. Default 2.
{% endcomment %}

{% if morph_adjustment == blank %}
  {% assign morph_adjustment = 2 %}
{% endif %}

{% assign color_lightness = morph_color | color_extract: 'lightness' %}

{% if color_lightness > 20 %}
  {% if color_lightness > 50 %}
    {% assign light_adjustment = color_lightness | divided_by: 25.0 | times: morph_adjustment %}
  {% else %}
    {% assign light_adjustment = color_lightness | divided_by: 15.0 | times: morph_adjustment %}
  {% endif %}
  {% assign new_color = morph_color | color_darken: light_adjustment %}
{% else %}
  {% if color_lightness < 7 %}
    {% assign light_adjustment = 3 | times: morph_adjustment %}
    {% assign new_color = morph_color | color_desaturate: 45 %}
  {% elsif color_lightness < 12 %}
    {% assign light_adjustment = 2.25 | times: morph_adjustment %}
    {% assign new_color = morph_color | color_desaturate: 15 %}
  {% else %}
    {% assign light_adjustment = 1.75 | times: morph_adjustment %}
    {% assign new_color = morph_color %}
  {% endif %}
  {% assign new_color = new_color | color_lighten: light_adjustment %}
{% endif %}

{{ new_color }}

{% assign morph_adjustment = blank %}
{% comment %}Inject morph end{% endcomment %}
{% endcapture %}

{% assign color_site_overlays_opacity = settings.color_site_overlays_opacity | divided_by: '100.00' %}

{% assign color_header_search_bar_border_extract_alpha = settings.color_header_search_bar_border | color_extract: 'alpha' %}
{% assign color_forms_input_border_extract_alpha = settings.color_forms_input_border | color_extract: 'alpha' %}
* {% assign color_header_background = settings.color_header_background %}
 * {% assign chb_extract_alpha = color_header_background | color_extract: 'alpha' %}
 * {% assign chb_extract_red = color_header_background | color_extract: 'red' %}
 * {% assign chb_extract_green = color_header_background | color_extract: 'green' %}
 * {% assign chb_extract_blue = color_header_background | color_extract: 'blue' %}
 * {% assign chb_extract_total = chb_extract_alpha | plus: chb_extract_red | plus: chb_extract_green | plus: chb_extract_blue %}
 * {% if chb_extract_total == 0 %}
 *   {% assign color_header_background = "rgba(255,255,255,1)" %}
 * {% endif %}
 * {% assign color_text_regular_text_encoded = settings.color_text_headings | color_to_hex | replace: '#', '' %}
h6, .small-promo-heading, h5, h4, h3, h2, h1 {
  font-family: {{ fonts_type_heading_family }};
  font-style: {{ fonts_type_heading_style }};
  font-weight: {{ fonts_type_heading_weight }};
  letter-spacing: {{ settings.type_heading_spacing | divided_by: 100.0 | append: 'em' }};
}
{%- if settings.type_heading_capitalize -%}
h6, .small-promo-heading, h5, h4, h3, h2, h1 {
    text-transform: uppercase;
  }
{%- else -%}
h6, .small-promo-heading, h5, h4, h3, h2, h1 {
    text-transform: none;
  }
{%- endif -%}
h6 b, .small-promo-heading b, h5 b, h4 b, h3 b, h2 b, h1 b,
h6 strong,
.small-promo-heading strong,
h5 strong,
h4 strong,
h3 strong,
h2 strong,
h1 strong {
  font-weight: {{ fonts_type_heading_weight_bolder }};
}
h6 em, .small-promo-heading em, h5 em, h4 em, h3 em, h2 em, h1 em {
  font-style: {{ fonts_type_heading_style_italic }};
}
h6 b em, .small-promo-heading b em, h5 b em, h4 b em, h3 b em, h2 b em, h1 b em,
h6 strong em,
.small-promo-heading strong em,
h5 strong em,
h4 strong em,
h3 strong em,
h2 strong em,
h1 strong em,
h6 em b,
.small-promo-heading em b,
h5 em b,
h4 em b,
h3 em b,
h2 em b,
h1 em b,
h6 em strong,
.small-promo-heading em strong,
h5 em strong,
h4 em strong,
h3 em strong,
h2 em strong,
h1 em strong {
  font-style: {{ fonts_type_heading_style_italic }};
}

h1 {
  font-size: var(--font-size-heading-1);
}

h2 {
  font-size: var(--font-size-heading-2);
}

h3 {
  font-size: var(--font-size-heading-3);
}

h4 {
  font-size: var(--font-size-heading-4);
}

.small-promo-heading, h5 {
  font-size: var(--font-size-heading-5);
}

h6 {
  font-size: var(--font-size-heading-6);
}

.site-header-actions, .site-navigation .navmenu-depth-1 > li > a, .site-navigation a {
  font-family: {{ fonts_type_menu_family }};
  font-style: {{ fonts_type_menu_style }};
  font-weight: {{ fonts_type_menu_weight }};
  font-size: var(--font-size-menu);
  letter-spacing: {{ settings.type_menu_spacing | divided_by: 100.0 | append: 'em' }};
}
{%- if settings.type_menu_capitalize -%}
.site-header-actions, .site-navigation .navmenu-depth-1 > li > a, .site-navigation a {
    text-transform: uppercase;
  }
{%- else -%}
.site-header-actions, .site-navigation .navmenu-depth-1 > li > a, .site-navigation a {
    text-transform: none;
  }
{%- endif -%}

.live-search-button, .utils-sortby--modal-button, .button-secondary, .product-form--atc-button, .button-primary, .productgrid--no-results-button {
  font-size: var(--font-size-button-small);
  padding: 0.6875rem 1.375rem;
  letter-spacing: {{ settings.type_button_spacing | divided_by: 100.0 | append: 'em' }};
  font-family: {{ fonts_type_button_family }};
  font-style: {{ fonts_type_button_style }};
  font-weight: {{ fonts_type_button_weight }};
  display: inline-block;
  text-decoration: none;
  cursor: pointer;
  border-radius: {{ settings.button_border_radius | append: 'px' }};
  transition: border-color 0.2s ease, background-color 0.2s ease, width 0.2s ease, height 0.2s ease;
}
{%- if settings.type_button_capitalize -%}
.live-search-button, .utils-sortby--modal-button, .button-secondary, .product-form--atc-button, .button-primary, .productgrid--no-results-button {
    text-transform: uppercase;
  }
{%- else -%}
.live-search-button, .utils-sortby--modal-button, .button-secondary, .product-form--atc-button, .button-primary, .productgrid--no-results-button {
    text-transform: none;
  }
{%- endif -%}

.disabled.utils-sortby--modal-button, .disabled.button-secondary, .disabled.product-form--atc-button, .disabled.button-primary, .disabled.productgrid--no-results-button {
  color: #696969;
  cursor: default;
  background-color: #ebebeb;
  border: 1px solid #ebebeb;
}

.product-form--atc-button, .button-primary, .productgrid--no-results-button {
  color: {{ settings.color_buttons_primary_button_text }};
  background-color: {{ settings.color_buttons_primary_button_background }};
  border: 1px solid {{ settings.color_buttons_primary_button_background }};
}
.product-form--atc-button:not(.disabled):hover, .button-primary:not(.disabled):hover, .productgrid--no-results-button:not(.disabled):hover {
  background: {{ settings.color_buttons_primary_button_background_hover }};
  border: 1px solid {{ settings.color_buttons_primary_button_background_hover }};
}
.product-form--atc-button:active, .button-primary:active, .productgrid--no-results-button:active, .product-form--atc-button:focus, .button-primary:focus, .productgrid--no-results-button:focus {
  background: {{ settings.color_buttons_primary_button_background_hover }};
  border: 1px solid {{ settings.color_buttons_primary_button_background_hover }};
}
.utils-sortby--modal-button, .button-secondary {
  color: {{ settings.color_buttons_secondary_button_text }};
  background-color: {{ settings.color_buttons_secondary_button_background }};
  border: 1px solid {{ settings.color_buttons_secondary_button_border }};
}
.utils-sortby--modal-button:not(.disabled):hover, .button-secondary:not(.disabled):hover {
  color: {{ settings.color_buttons_secondary_button_text_hover }};
  background: {{ settings.color_buttons_secondary_button_background_hover }};
  border: 1px solid {{ settings.color_buttons_secondary_button_border_hover }};
}
.utils-sortby--modal-button:active, .button-secondary:active, .utils-sortby--modal-button:focus, .button-secondary:focus {
  background: {{ settings.color_buttons_secondary_button_background_hover }};
  border: 1px solid {{ settings.color_buttons_secondary_button_border_hover }};
}
.product-section--container, .productgrid--outer, .product--container, .announcement-bar-text-mobile, .announcement-bar-text, .site-navigation, .site-header-main {
  max-width: {{ settings.layout_max_width | append: 'px' }};
  padding-right: 10px;
  padding-left: 10px;
  margin-right: auto;
  margin-left: auto;
}
@media screen and (max-width: 1079px) and (min-width: 720px) {
  .product-section--container, .productgrid--outer, .product--container, .announcement-bar-text-mobile, .announcement-bar-text, .site-navigation, .site-header-main {
    padding-right: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
    padding-left: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
  }
}
@media screen and (min-width: 1080px) {
  .product-section--container, .productgrid--outer, .product--container, .announcement-bar-text-mobile, .announcement-bar-text, .site-navigation, .site-header-main {
    padding-right: 40px;
    padding-left: 40px;
  }
}

.productgrid--outer .pagination__wrapper,
.productgrid--outer .breadcrumbs-container {
  max-width: 100%;
  padding-right: 0;
  padding-left: 0;
}
@media screen and (min-width: 1024px) {
  .productgrid--outer .pagination__wrapper,
.productgrid--outer .breadcrumbs-container {
    padding-right: 0;
    padding-left: 0;
  }
}

.productgrid--footer::before, .productgrid--outer::before, .site-header-main::before, .site-navigation-wrapper::before, .form-fields-columns::before, .productgrid--footer::after, .productgrid--outer::after, .site-header-main::after, .site-navigation-wrapper::after, .form-fields-columns::after {
  display: table;
  content: "";
}
.productgrid--footer::after, .productgrid--outer::after, .site-header-main::after, .site-navigation-wrapper::after, .form-fields-columns::after {
  clear: both;
}

.productitem--title a, .filter-item, .utils-showby-item {
  color: {{ settings.color_text_regular_text }};
  text-decoration: none;
  transition: color 0.1s ease;
}
.productitem--title a:hover, .filter-item:hover, .utils-showby-item:hover {
  color: {{ settings.color_text_links }};
}

.product-vendor a, .filter-item--grid-simple a, .filter-item--active, .filter-item a.filter-text--link, .utils-showby-item.utils-showby-item--active, .utils-sortby-button,
.utils-filter-button, .productgrid-listview .productitem--link, .productgrid--footer-results-list a, .product-link {
  color: {{ settings.color_text_links }};
  text-decoration: none;
  transition: color 0.1s ease;
}
.product-vendor a:hover, .filter-item--grid-simple a:hover, .filter-item--active:hover, .filter-item a.filter-text--link:hover, .utils-showby-item.utils-showby-item--active:hover, .utils-sortby-button:hover,
.utils-filter-button:hover, .productgrid-listview .productitem--link:hover, .productgrid--footer-results-list a:hover, .product-link:hover {
  color: {{ settings.color_text_links_hover }};
}

.button-signpost .signpost-icon, .button-icon {
  display: inline-block;
  margin-left: 0.3125rem;
  vertical-align: middle;
}
.button-signpost .signpost-icon svg, .button-icon svg {
  display: block;
  margin-top: -0.125rem;
  transform: rotate(-90deg);
}

.filter-item .filter-icon--checkbox, .form-field-checkbox .form-icon--checkbox {
  display: inline-block;
  width: 13px;
  height: 13px;
  color: {{ settings.color_forms_input_background }};
  vertical-align: middle;
}
.filter-item .filter-icon--checkbox svg, .form-field-checkbox .form-icon--checkbox svg {
  display: block;
  width: 100%;
  height: 100%;
  background-color: {{ settings.color_forms_input_background }};
  border: 1px solid {{ settings.color_forms_input_border }};
  border-radius: {{ settings.form_border_radius | divided_by: 2.0 | append: 'px' }};
  fill: currentColor;
}

.filter-item--active a .filter-icon--checkbox, .form-field-checkbox input:checked ~ .form-icon--checkbox {
  color: {{ settings.color_text_links }};
}
.filter-item--active a .filter-icon--checkbox svg, .form-field-checkbox input:checked ~ .form-icon--checkbox svg {
  background-color: transparent;
  border: 0;
  border-radius: {{ settings.form_border_radius | divided_by: 2.0 | append: 'px' }};
  fill: currentColor;
}

.product-gallery--media-thumbnail, .utils-sortby-button,
.utils-filter-button {
  font-family: {{ fonts_type_body_family }};
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight_bolder }};
  padding: 0;
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
  cursor: pointer;
  background: transparent;
  border: 0;
  -webkit-appearance: normal;
     -moz-appearance: normal;
          appearance: normal;
}

.product-form--atc-button, .productitem--action-trigger.productitem--action-atc {
  position: relative;
}
.product-form--atc-button .atc-button--text, .productitem--action-trigger.productitem--action-atc .atc-button--text {
  opacity: 1;
}
.product-form--atc-button .atc-button--icon, .productitem--action-trigger.productitem--action-atc .atc-button--icon {
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -13px;
  margin-left: -13px;
  opacity: 0;
  visibility: hidden;
  animation: rotate 0.6s linear infinite;
  transition: opacity 0.1s ease 0.1s;
}
.product-form--atc-button .atc-button--icon svg, .productitem--action-trigger.productitem--action-atc .atc-button--icon svg {
  display: block;
  width: 26px;
  height: 26px;
}
.processing.product-form--atc-button .atc-button--text, .processing.productitem--action-trigger.productitem--action-atc .atc-button--text {
  opacity: 0;
}
.processing.product-form--atc-button .atc-button--icon, .processing.productitem--action-trigger.productitem--action-atc .atc-button--icon {
  opacity: 1;
  visibility: visible;
}

.live-search-button {
  position: relative;
  padding-left: 15px;
  padding-right: 15px;
}
.live-search-button .search-icon--inactive,
.live-search-button .search-icon--active {
  display: inline-block;
}
.live-search-button svg {
  display: block;
  width: 100%;
  height: 100%;
}
.live-search-button .search-icon--inactive {
  height: 23px;
  opacity: 1;
  transition: opacity 0.1s ease;
}
.live-search-button .search-icon--active {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 26px;
  height: 26px;
  margin-top: -13px;
  margin-left: -13px;
  opacity: 0;
  visibility: hidden;
  animation: rotate 0.7s cubic-bezier(0.69, 0.31, 0.56, 0.83) infinite;
}
.search-icon--processing.live-search-button .search-icon--inactive {
  opacity: 0;
  transition-delay: 0s;
}
.search-icon--processing.live-search-button .search-icon--active {
  opacity: 1;
  visibility: visible;
}

.form-message.message--success, .product-message--error,
.form-message.message--error {
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight_bolder }};
  font-size: var(--font-size-body);
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
}
.form-message.message--success a, .product-message--error a,
.form-message.message--error a {
  color: currentColor;
}

.product-message--error,
.form-message.message--error {
  color: #f05d5d;
  background-color: {{ '#f05d5d' | color_mix: settings.color_layout_site_background, 18 }};
}

.form-message.message--success {
  color: #51a551;
  background-color: {{ '#51a551' | color_mix: settings.color_layout_site_background, 18 }};
}

.productgrid--no-results {
  width: 100%;
  margin-top: {{ settings.type_size_base | times: 3.125 | divided_by: 16.0 | append: 'rem' }};
  text-align: center;
}
@media screen and (min-width: 720px) {
  .productgrid--no-results {
    margin-top: calc({{ settings.type_size_base | times: 3.125 | divided_by: 16.0 | append: 'rem' }} - {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }});
  }
}

.productgrid--no-results-title {
  font-family: {{ fonts_type_body_family }};
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight }};
  font-size: var(--font-size-heading-4);
  margin-top: 0;
  margin-bottom: 0;
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
  color: {{ settings.color_text_headings }};
}

.productgrid--no-results-button {
  font-size: var(--font-size-button-medium);
  padding: 0.875rem 1.375rem;
  letter-spacing: {{ settings.type_button_spacing | divided_by: 100.0 | append: 'em' }};
  margin-top: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
}
{%- if settings.type_button_capitalize -%}
.productgrid--no-results-button {
    text-transform: uppercase;
  }
{%- else -%}
.productgrid--no-results-button {
    text-transform: none;
  }
{%- endif -%}

.button-icon {
  margin-left: 3px;
}
.button-icon svg {
  width: calc(14px * {{ settings.type_button_sizing | divided_by: 100.0 }});
  height: calc(14px * {{ settings.type_button_sizing | divided_by: 100.0 }});
  margin-top: -0.1875rem;
}

.button-signpost {
  font-family: {{ fonts_type_signpost_family }};
  font-style: {{ fonts_type_signpost_style }};
  font-weight: {{ fonts_type_signpost_weight }};
  font-size: var(--font-size-button-signpost);
  display: block;
  padding: 0;
  margin-top: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
  letter-spacing: 0;
  text-decoration: none;
  text-transform: none;
}
@media screen and (min-width: 860px) {
  .button-signpost {
    margin-top: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
  }
}
.button-signpost .signpost-icon {
  margin-left: 2px;
}
.button-signpost .signpost-icon svg {
  width: 0.75rem;
  height: 0.75rem;
  margin-top: 0;
}

#messageus_button {
  z-index: 9999;
}

.option-value-input + .option-value-name, .productgrid--sidebar-item-grid .filter-item:not(.filter-item--toggle-more), .form-field-input,
.form-field-select {
  font-family: {{ fonts_type_body_family }};
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight }};
  font-size: var(--font-size-form);
  z-index: 1;
  width: 100%;
  padding: 0.9375rem 0.875rem 0.9375rem;
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
  color: {{ settings.color_forms_input_text }};
  background-color: {{ settings.color_forms_input_background }};
  border: 1px solid {{ settings.color_forms_input_border }};
  border-radius: {{ settings.form_border_radius | append: 'px' }};
}
.option-value-input + .option-value-name:focus, .productgrid--sidebar-item-grid .filter-item:focus:not(.filter-item--toggle-more), .form-field-input:focus,
.form-field-select:focus {
  border-color: {{ settings.color_forms_selected_input }};
  outline: 0;
}
.option-value-input + .form-field-error.option-value-name, .productgrid--sidebar-item-grid .form-field-error.filter-item:not(.filter-item--toggle-more), .form-field-error.form-field-input,
.form-field-error.form-field-select {
  border-color: #f05d5d;
}
.form-field-title--inline, .form-field-title {
  font-size: var(--font-size-body);
  line-height: 1;
  color: {{ settings.color_forms_input_placeholder_text }};
}

.no-label .option-value-input + .option-value-name, .no-label .productgrid--sidebar-item-grid .filter-item:not(.filter-item--toggle-more), .productgrid--sidebar-item-grid .no-label .filter-item:not(.filter-item--toggle-more), .no-label .form-field-input,
.no-label .form-field-select {
  padding-top: 0.9375rem;
  padding-bottom: 0.9375rem;
}

.form-field-input {
  width: 100%;
}
.form-field-input:-ms-input-placeholder {
  color: currentColor;
  opacity: 0;
  -ms-transition: opacity 0.12s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  transition: opacity 0.12s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}
.form-field-input::placeholder {
  color: currentColor;
  opacity: 0;
  transition: opacity 0.12s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}
.form-field-input + .form-field-title::before {
  position: absolute;
  top: 50%;
  left: -4px;
  z-index: -1;
  width: calc(100% + 8px);
  height: 1px;
  background-color: {{ settings.color_forms_input_background }};
  content: "";
  transform: scaleY(1.1);
  transition-delay: 0.12s;
}
.no-js .form-field-input:-ms-input-placeholder, .form-field-input:focus:-ms-input-placeholder, .form-field-filled.form-field-input:-ms-input-placeholder, .form-field-select.form-field-input:-ms-input-placeholder {
  z-index: 3;
  opacity: 0.6;
  transition-delay: 0.12s;
}
.no-js .form-field-input::placeholder, .form-field-input:focus::placeholder, .form-field-filled.form-field-input::placeholder, .form-field-select.form-field-input::placeholder {
  z-index: 3;
  opacity: 0.6;
  transition-delay: 0.12s;
}
.no-js .form-field-input + .form-field-title, .form-field-input:focus + .form-field-title, .form-field-filled.form-field-input + .form-field-title, .form-field-select.form-field-input + .form-field-title {
  top: -0.5em;
  z-index: 3;
  font-size: 0.8125rem;
  transition-delay: 0.12s;
  transition-property: top, font-size;
}
.no-js .form-field-input + .form-field-title::before, .form-field-input:focus + .form-field-title::before, .form-field-filled.form-field-input + .form-field-title::before, .form-field-select.form-field-input + .form-field-title::before {
  position: absolute;
  top: 0.5em;
  left: -4px;
  z-index: -1;
  width: calc(100% + 8px);
  height: 1px;
  background-color: {{ settings.color_forms_input_background }};
  content: "";
  transition-delay: 0s;
}
.form-field-input:focus + .form-field-title {
  color: {{ settings.color_forms_selected_input }};
}
.no-label .form-field-input:-ms-input-placeholder {
  opacity: 0.4;
}
.no-label .form-field-input::placeholder {
  opacity: 0.4;
}

.form-field-textarea {
  line-height: 1.5;
  max-width: 100%;
  max-height: 500px;
  min-width: 100%;
  min-height: 150px;
}

@media screen and (min-width: 720px) {
  .form-fields-columns {
    margin-right: -10px;
    margin-left: -10px;
  }
  .form-fields-columns .form-field {
    float: left;
    margin-right: 10px;
    margin-left: 10px;
  }
  .form-fields-columns .form-field--half {
    width: calc(50% - 20px);
  }
}
.form-fields-columns + .form-field {
  clear: left;
}

.form-action-row {
  margin-top: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
}
.form-action-row .button-primary + .button-primary,
.form-action-row .button-primary + .button-secondary,
.form-action-row .button-secondary + .button-primary,
.form-action-row .button-secondary + .button-secondary {
  margin-left: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
}

.form-field {
  position: relative;
}

input[name="address[default]"]:focus ~ .form-icon--checkbox {
  outline: 1px dotted #212121;
  outline: 5px auto -webkit-focus-ring-color;
}

.form-field-title {
  position: absolute;
  top: 1.0625rem;
  left: 0.875rem;
  z-index: 2;
  pointer-events: none;
  transition: 0.12s;
  transition-delay: 0.12s;
  transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
}
.form-field-textarea + .form-field-title {
  top: 0.9375rem;
}

.form-field-title--inline {
  display: inline-block;
  margin-left: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
  vertical-align: middle;
}
.form-field-checkbox .form-field-title--inline {
  color: {{ settings.color_forms_input_text }};
}

.form-field-select-wrapper {
  position: relative;
}
.form-field-select-wrapper .form-field-select {
  z-index: 2;
  width: 100%;
  height: 100%;
  padding-right: calc(0.875rem * 2 + 0.5rem);
  color: {{ settings.color_forms_input_text }};
  cursor: pointer;
  background-color: {{ settings.color_forms_input_background }};
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}
.form-field-select-wrapper .form-field-select::-ms-expand {
  display: none;
}
.form-field-select-wrapper svg {
  position: absolute;
  top: 50%;
  right: 0.875rem;
  margin-top: -3px;
  pointer-events: none;
  color: {{ settings.color_forms_input_text }};
}

.form-fields--qty {
  position: relative;
}
.form-fields--qty .form-field {
  opacity: 0;
  transition: opacity 0.15s ease;
}
.no-js .form-fields--qty .form-field.form-field--qty-input {
  z-index: 1;
  opacity: 1;
  visibility: visible;
}
.js .form-fields--qty .form-field.form-field--qty-select {
  z-index: 1;
  opacity: 1;
  visibility: visible;
}
.form-fields--qty .hidden {
  z-index: 0;
  opacity: 0;
  visibility: hidden;
}
.form-fields--qty .visible {
  z-index: 1;
  opacity: 1;
  visibility: visible;
}
.form-fields--qty .form-field--qty-select .form-field-select-wrapper {
  position: absolute;
  width: 100%;
}

.form-field-checkbox {
  position: relative;
  display: block;
  margin-top: 0.9375rem;
  cursor: pointer;
}
.form-field-checkbox input {
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 1;
  width: 100%;
  cursor: pointer;
  opacity: 0;
}
.form-field-checkbox .form-icon--checkbox {
  margin-top: -2px;
}

.form-message.message--success {
  padding: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }} {{ settings.type_size_base | times: 0.75 | divided_by: 16.0 | append: 'rem' }};
}
.form-message.message--error {
  padding: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }} {{ settings.type_size_base | times: 0.75 | divided_by: 16.0 | append: 'rem' }};
}
.form-message ul,
.form-message p {
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight }};
  margin-top: 0;
  margin-bottom: 0;
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
}
.form-message li:not(:first-child) {
  margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
}
.form-message ul {
  padding-left: 0;
  list-style-type: none;
}

.placeholder--image {
  display: block;
  background-color: {{ settings.color_text_regular_text | color_mix: settings.color_layout_site_background, 8 }};
  fill: {{ settings.color_text_regular_text | color_mix: settings.color_layout_site_background, 35 }};
}

.placeholder--content-image {
  fill: {{ settings.color_text_regular_text | color_mix: settings.color_layout_site_background, 8 }};
}

.placeholder--content-text {
  background-color: {{ settings.color_text_regular_text | color_mix: settings.color_layout_site_background, 8 }};
}

.option-value-input:disabled + .option-value-swatch-wrapper, .productitem--swatches-input:disabled + .productitem--swatches-swatch-wrapper {
  cursor: not-allowed;
}

.option-value-input:checked + .option-value-swatch-wrapper, .productitem--swatches-input:checked + .productitem--swatches-swatch-wrapper, .productgrid--sidebar-item-swatches-grid .filter-item--active .filter-item--swatch-wrapper {
  box-shadow: 0 0 0 0.0625rem {{ settings.color_forms_selected_input }};
}

.option-value-input:disabled:checked + .option-value-swatch-wrapper, .productitem--swatches-input:disabled:checked + .productitem--swatches-swatch-wrapper {
  box-shadow: 0 0 0 0.0625rem {{ settings.color_forms_selected_input | color_modify: 'alpha', 0.50 }};
}

.option-value-input:disabled + .option-value-swatch-wrapper .swatch, .productitem--swatches-input:disabled + .productitem--swatches-swatch-wrapper .productitem--swatches-swatch {
  position: relative;
}
.option-value-input:disabled + .option-value-swatch-wrapper .swatch::before, .productitem--swatches-input:disabled + .productitem--swatches-swatch-wrapper .productitem--swatches-swatch::before {
  position: absolute;
  top: 50%;
  left: 50%;
  display: block;
  width: 150%;
  height: 2.5px;
  background: rgba(0, 0, 0, 0.5);
  content: "";
  transform: translate(-50%, -50%) rotate(-45deg);
}

.option-value-input + .option-value-swatch-wrapper .swatch-inner, .productitem--swatches-swatch-inner, .filter-item--swatch-inner {
  height: 100%;
  pointer-events: none;
  background-position: center;
  background-size: cover;
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: inherit;
  background-origin: border-box;
}

.option-value-input:disabled + .option-value-swatch-wrapper .swatch-inner, .productitem--swatches-input:disabled + .productitem--swatches-swatch-wrapper .productitem--swatches-swatch-inner {
  opacity: 0.6;
}

.option-value-input + .option-value-swatch-wrapper:hover::after, .productitem--swatches-swatch-wrapper:hover::after, .productgrid--sidebar-item-swatches-grid .filter-item--swatch-wrapper:hover::after {
  position: absolute;
  bottom: 0;
  left: 50%;
  left: calc(50% + var(--swatch-tooltip-offset, 0px));
  z-index: 1;
  padding: 6px 9px;
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
  color: {{ settings.color_text_regular_text }};
  white-space: nowrap;
  pointer-events: none;
  background: {{ settings.color_content_containers_background }};
  content: attr(data-swatch-tooltip);
  transform: translateX(-50%) translateY(100%) translateY(7px);
  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);
  animation: slide-swatch-tooltip 0.2s;
}
{%- if settings.type_body_custom == blank and settings.type_body_enable_bold -%}
.option-value-input + .option-value-swatch-wrapper:hover::after, .productitem--swatches-swatch-wrapper:hover::after, .productgrid--sidebar-item-swatches-grid .filter-item--swatch-wrapper:hover::after {
    font-family: {{ fonts_type_body_bold_family }};
    font-style: {{ fonts_type_body_bold_style }};
    font-weight: {{ fonts_type_body_bold_weight }};
  }
{%- else -%}
.option-value-input + .option-value-swatch-wrapper:hover::after, .productitem--swatches-swatch-wrapper:hover::after, .productgrid--sidebar-item-swatches-grid .filter-item--swatch-wrapper:hover::after {
    font-family: {{ fonts_type_body_family }};
    font-style: {{ fonts_type_body_style }};
    font-weight: {{ fonts_type_body_weight }};
  }
{%- endif -%}
@media screen and (min-width: 720px) {
  .option-value-input + .option-value-swatch-wrapper:hover::after, .productitem--swatches-swatch-wrapper:hover::after, .productgrid--sidebar-item-swatches-grid .filter-item--swatch-wrapper:hover::after {
    font-size: var(--font-size-body-smaller);
  }
}

/* Global styles */
html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

* {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

html,
body {
  background-color: {{ settings.color_layout_site_background }};
}

html {
  height: 100%;
}
html::before {
  display: none;
  content: "XS,S,M,L,L+,XL,XXL";
}
html::after {
  display: none;
  content: "XS";
}
@media screen and (min-width: 720px) {
  html::after {
    content: "S";
  }
}
@media screen and (min-width: 860px) {
  html::after {
    content: "M";
  }
}
@media screen and (min-width: 1024px) {
  html::after {
    content: "L";
  }
}
@media screen and (min-width: 1080px) {
  html::after {
    content: "L+";
  }
}
@media screen and (min-width: 1280px) {
  html::after {
    content: "XL";
  }
}
{%- if settings.layout_max_width == 1200 -%}
@media screen and (min-width: 1250px) {
    html::after {
      content: "XXL";
    }
  }
{%- elsif settings.layout_max_width == 1300 -%}
@media screen and (min-width: 1350px) {
    html::after {
      content: "XXL";
    }
  }
{%- elsif settings.layout_max_width == 1400 -%}
@media screen and (min-width: 1450px) {
    html::after {
      content: "XXL";
    }
  }
{%- elsif settings.layout_max_width == 1500 -%}
@media screen and (min-width: 1550px) {
    html::after {
      content: "XXL";
    }
  }
{%- elsif settings.layout_max_width == 1600 -%}
@media screen and (min-width: 1660px) {
    html::after {
      content: "XXL";
    }
  }
{%- endif -%}

body {
  font-family: {{ fonts_type_body_family }};
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight }};
  font-size: var(--font-size-body);
  width: 100%;
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
  color: {{ settings.color_text_regular_text }};
}
{%- if settings.font_family_override -%}
body {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-sans, Ubuntu, Cantarell, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  }
{%- endif -%}
@media screen and (max-width: 719px) {
  body {
    font-size: var(--font-size-body-small);
  }
}
body.scroll-lock {
  height: 100vh;
  overflow: hidden;
  touch-action: manipulation;
}

th,
b,
strong {
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
}
{%- if settings.type_body_custom == blank and settings.type_body_enable_bold -%}
th,
b,
strong {
    font-family: {{ fonts_type_body_bold_family }};
    font-style: {{ fonts_type_body_bold_style }};
    font-weight: {{ fonts_type_body_bold_weight }};
  }
{%- else -%}
th,
b,
strong {
    font-family: {{ fonts_type_body_family }};
    font-style: {{ fonts_type_body_style }};
    font-weight: {{ fonts_type_body_weight }};
  }
{%- endif -%}

em {
  font-style: {{ fonts_type_body_style_italic }};
}

th em,
b em,
strong em,
em b,
em strong {
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
}
{%- if settings.type_body_custom == blank and settings.type_body_enable_bold -%}
th em,
b em,
strong em,
em b,
em strong {
    font-family: {{ fonts_type_body_bold_family }};
    font-style: {{ fonts_type_body_bold_style_italic }};
    font-weight: {{ fonts_type_body_bold_weight }};
  }
{%- else -%}
th em,
b em,
strong em,
em b,
em strong {
    font-family: {{ fonts_type_body_family }};
    font-style: {{ fonts_type_body_style_italic }};
    font-weight: {{ fonts_type_body_weight }};
  }
{%- endif -%}

[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=short] .product-gallery--media img[data-rimg=lazy], [data-product-gallery-image-crop][data-product-gallery-aspect-ratio=short] .product-gallery--media img[data-rimg=loading], [data-product-gallery-image-crop][data-product-gallery-aspect-ratio=short] .product-gallery--media img[data-rimg=loaded],
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=square] .product-gallery--media img[data-rimg=lazy],
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=square] .product-gallery--media img[data-rimg=loading],
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=square] .product-gallery--media img[data-rimg=loaded],
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=tall] .product-gallery--media img[data-rimg=lazy],
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=tall] .product-gallery--media img[data-rimg=loading],
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=tall] .product-gallery--media img[data-rimg=loaded],
.visually-hidden {
  position: absolute !important;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  border: 0;
}

.skip-to-main {
  font-size: var(--font-size-body);
  position: absolute;
  top: 0;
  left: -9999px;
  color: {{ settings.color_text_links }};
  background: {{ settings.color_layout_site_background }};
  text-decoration: none;
  padding: 1em;
}
.skip-to-main:focus, .skip-to-main:active {
  left: 0;
  z-index: 702;
}

/* Header */
.site-header-wrapper {
  {% assign header_shadow_alpha = settings.color_header_shadow | color_extract: 'alpha' %}
  width: 100%;
  background-color: {{ color_header_background }};
  transition: top 0.15s cubic-bezier(0.3, 0, 0, 1);
  z-index: 700;
}
{%- if header_shadow_alpha != 0 -%}
.site-header-wrapper {
    box-shadow: 0 1px 4px {{ settings.color_header_shadow | color_modify: 'alpha', 0.25 }};
  }
{%- endif -%}
.site-header-wrapper.site-header--sticky {
  position: sticky;
  top: 0;
}
.search-takeover-active .site-header-wrapper {
  display: none;
}

.site-header-main {
  z-index: 701;
}
.site-header-main.site-header--full-width {
  width: 100%;
  max-width: 100%;
}

.site-header-logo {
  display: table;
  height: auto;
}

.site-logo {
  display: table-cell;
  height: 100%;
  vertical-align: middle;
  color: currentColor;
  text-decoration: none;
}

.desktop-logo-text,
.mobile-logo-text {
  font-family: {{ fonts_type_body_family }};
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight_bolder }};
  font-size: var(--font-size-heading-5);
  display: block;
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
  color: {{ settings.color_header_logo_text }};
  text-decoration: none;
  text-transform: none;
}
.desktop-logo-text:not(.visually-hidden),
.mobile-logo-text:not(.visually-hidden) {
  width: 100%;
}

@media screen and (max-width: 1023px) {
  .desktop-logo-image,
.desktop-logo-text {
    display: none;
  }
}
@media screen and (min-width: 1024px) {
  .mobile-logo-image,
.mobile-logo-text {
    display: none;
  }
}
.site-header-button {
  z-index: 125;
  display: inline-block;
  height: 46px;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.site-header-icon {
  display: inline-block;
  position: relative;
  padding: 10px;
  color: {{ settings.color_header_text }};
  outline: none;
}
.site-header-icon:hover {
  color: {{ settings.color_header_text | color_modify: 'alpha', 0.7 }};
}
.site-header-icon:hover .toggle-icon--bar {
  background-color: {{ settings.color_header_text | color_modify: 'alpha', 0.7 }};
}
.site-header-icon svg {
  display: block;
}

.site-header-menu-button {
  left: 0rem;
}
@media screen and (min-width: 720px) {
  .site-header-menu-button {
    left: calc({{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }} - 0.625rem);
  }
}
@media screen and (min-width: 1080px) {
  .site-header-menu-button {
    left: 1.875rem;
  }
}

.site-header-menu-icon {
  padding-top: 15px;
  padding-bottom: 15px;
  background-color: transparent;
  color: {{ settings.color_header_text }};
}
.site-header-menu-icon:focus {
  outline: none;
}
.site-header-menu-icon path {
  transition: transform 0.2s, opacity 0.2s;
  transition-timing-function: cubic-bezier(0.3, 0, 0, 1);
}
.site-header-menu-icon path:nth-of-type(1) {
  transform-origin: 2.5px 3.5px;
}
.site-header-menu-icon path:nth-of-type(3) {
  transform-origin: 1px 14px;
}
.site-header-menu-icon .nav-toggle-ie-11 {
  display: none;
}
.site-header-menu-button.active .site-header-menu-icon path:nth-of-type(1) {
  transform: rotate(45deg);
}
.site-header-menu-button.active .site-header-menu-icon path:nth-of-type(2) {
  opacity: 0;
}
.site-header-menu-button.active .site-header-menu-icon path:nth-of-type(3) {
  transform: rotate(-45deg);
}
@media all and (-ms-high-contrast: none) {
  .site-header-menu-button.active .site-header-menu-icon .icon-menu {
    display: none;
  }
  .site-header-menu-button.active .site-header-menu-icon .nav-toggle-ie-11 {
    display: inline-block;
  }
  .site-header-menu-button.active .site-header-menu-icon .nav-toggle-ie-11 .icon-search-close {
    display: inline-block;
  }
  .site-header-menu-button.active .site-header-menu-icon .nav-toggle-ie-11 .icon-search-close path {
    opacity: 1;
    transform: none;
    transform-origin: 0;
  }
}

.site-header-cart-button {
  right: 0px;
  transition: right 0.15s cubic-bezier(0.3, 0, 0, 1), top 0.15s cubic-bezier(0.3, 0, 0, 1);
}
@media screen and (min-width: 720px) {
  .site-header-cart-button {
    right: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
  }
}
@media screen and (min-width: 1080px) {
  .site-header-cart-button {
    right: calc(40px);
  }
}
.site-header-cart-button.count-hidden {
  right: calc(10px - 10px);
}
@media screen and (min-width: 720px) {
  .site-header-cart-button.count-hidden {
    right: calc({{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }} - 10px);
  }
}
@media screen and (min-width: 1080px) {
  .site-header-cart-button.count-hidden {
    right: calc(40px - 10px);
  }
}
.site-header-cart-button svg {
  transition: margin 0.15s;
}

.site-header-cart--count {
  position: absolute;
  top: 2px;
  right: 2px;
  display: block;
  opacity: 0;
  transition: opacity 0.15s linear;
}
.site-header-cart--count.visible {
  opacity: 1;
}
.site-header-cart--count.visible + svg {
  margin-right: 5px;
}
.site-header-cart--count:after {
  display: block;
  height: 20px;
  min-width: 20px;
  padding: 3px;
  font-size: 0.6875rem;
  line-height: 12px;
  color: {{ settings.color_header_cart_count_text }};
  text-align: center;
  text-decoration: none;
  background-color: {{ settings.color_header_cart_count_background }};
  border: 1px solid {{ color_header_background }};
  border-radius: 50%;
  content: attr(data-header-cart-count);
}

.announcement-bar--link,
.small-promo--link {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.announcement-bar-text a,
.announcement-bar-text-mobile a {
  position: relative;
  z-index: 1;
}

.site-navigation-wrapper {
  display: none;
  position: relative;
  z-index: 700;
  width: 100%;
  background-color: {{ settings.color_header_navigation_background }};
  transition: margin-top 0.2s cubic-bezier(0.3, 0, 0, 1);
}
@media screen and (min-width: 1024px) {
  .site-header-nav--open .site-navigation-wrapper {
    display: block;
  }
}

.site-navigation {
  padding-top: 0;
  padding-bottom: 0;
  display: flex;
}
.site-navigation ul {
  padding: 0;
  margin: 0;
  list-style: none;
}
.site-navigation a {
  position: relative;
  display: inline-block;
  padding: 12px 15px;
  line-height: calc({{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }} + 2px);
  color: {{ settings.color_header_navigation_main_menu_text }};
  text-decoration: none;
}
.site-navigation a:hover {
  color: {{ settings.color_header_navigation_main_menu_text_hover }};
}
.site-navigation a:focus {
  outline: solid {{ settings.color_header_navigation_main_menu_text | color_modify: 'alpha', 0.50 }};
  outline-offset: -5px;
}
.site-navigation a.navmenu-item-active:focus {
  outline: 0;
}
.site-navigation .navmenu-item-highlighted > a {
  color: {{ settings.color_header_navigation_sale_link }};
}
.site-navigation .navmenu-item-highlighted > a:hover {
  color: {{ settings.color_header_navigation_sale_link | color_modify: 'alpha', 0.7 }};
}
.site-navigation .navmenu-icon {
  position: absolute;
  top: 50%;
  right: 20px;
  display: inline-block;
  height: 6px;
  margin-top: -3px;
}
.site-navigation .navmenu-icon.navmenu-icon-depth-1 {
  position: relative;
  top: -1px;
  right: -3px;
  transform: rotate(90deg);
}
.site-navigation .navmenu-icon svg {
  display: block;
  width: 8px;
  height: 6px;
  transform: rotate(-90deg);
  fill: currentColor;
}
.site-navigation .navmenu-icon .icon-chevron-down-left,
.site-navigation .navmenu-icon .icon-chevron-down-right {
  transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94), fill 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  transform-origin: 50% 50%;
}
.site-navigation .navmenu {
  display: flex;
  flex-wrap: wrap;
  padding: 0;
}
.site-navigation .navmenu-depth-1 {
  display: inline-block;
  height: 100%;
  max-width: 100%;
  flex: 1 1 auto;
  margin-left: -15px;
}
.site-navigation .navmenu-depth-1 > li {
  display: inline-block;
  padding-top: 8px;
  padding-bottom: 8px;
  vertical-align: top;
}
.site-navigation .navmenu-submenu {
  position: absolute;
  top: 100%;
  z-index: 100;
  display: none;
  width: 240px;
  padding-top: 15px;
  padding-bottom: 15px;
  background-color: {{ settings.color_header_navigation_dropdown_menu_background }};
  box-shadow: 0 3px 4px {{ color_border | color_modify: 'alpha', 0.25 }};
}
.site-navigation .navmenu-submenu.navmenu-submenu-inline-children {
  overflow-x: hidden;
  overflow-y: auto;
}
.site-navigation .navmenu-submenu.navmenu-submenu-inline-children .navmenu-icon svg {
  transform: rotate(0deg);
}
.site-navigation .navmenu-submenu.navmenu-submenu-inline-children .navmenu-depth-3 {
  position: relative;
  top: 0;
  left: 0;
  padding-top: 0;
  margin-left: 0;
  box-shadow: none;
}
.site-navigation .navmenu-depth-2 {
  margin-left: -0.625rem;
}
.site-navigation .navmenu-depth-2 .navmenu-link {
  font-family: {{ fonts_type_body_family }};
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight }};
  font-size: var(--font-size-body);
  z-index: 2;
  display: block;
  padding: 0.4375rem 2rem 0.4375rem 1.5625rem;
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
  color: {{ settings.color_header_navigation_dropdown_menu_links }};
  text-decoration: none;
  text-transform: none;
  transition: color 0.1s ease;
}
.site-navigation .navmenu-depth-2 .navmenu-link:hover, .site-navigation .navmenu-depth-2 .navmenu-link.navmenu-active {
  color: {{ settings.color_header_navigation_dropdown_menu_links_hover }};
}
.site-navigation .navmenu-depth-2 .navmenu-link:focus {
  outline: solid {{ settings.color_header_navigation_dropdown_menu_links | color_modify: 'alpha', 0.50 }};
  outline-offset: -3px;
}
.site-navigation .navmenu-depth-2 .navmenu-submenu, .site-navigation .navmenu-depth-2 .navmenu-submenu > li {
  animation-name: none;
  transition: none;
}
.site-navigation .navmenu-depth-3 {
  top: -15px;
  left: 100%;
  min-height: 100%;
  margin-left: -1px;
}
.site-navigation .navmenu-depth-3 > li a {
  font-size: var(--font-size-body);
  letter-spacing: 0;
  text-transform: none;
}
.site-navigation .navmenu-link-parent,
.site-navigation .navmenu-item-parent:not(.navmenu-meganav-item-parent) {
  position: relative;
}
.site-navigation .navmenu-meganav-item-parent > a {
  position: inherit;
}
.site-navigation .navmenu-meganav-item > a:focus,
.site-navigation .navmenu-meganav--image-text > a:focus {
  outline: solid {{ settings.color_text_links | color_modify: 'alpha', 0.50 }};
  outline-offset: -2px;
}
.site-header--full-width .site-navigation {
  width: 100%;
  max-width: 100%;
}

@keyframes menu-animation {
  0% {
    z-index: 90000;
    opacity: 0;
  }
  20% {
    opacity: 0;
  }
  100% {
    z-index: 90000;
    opacity: 1;
  }
}
.open .navmenu-submenu {
  opacity: 1;
}
.open .navmenu-submenu .navmenu-meganav-items {
  display: flex;
}
.open .navmenu-submenu.animating-in {
  animation: menu-animation 0.15s ease;
  animation-fill-mode: forwards;
}
.open .navmenu-submenu.animating-out {
  animation: menu-animation 0.15s ease;
  animation-direction: reverse;
  animation-fill-mode: forwards;
}

.navmenu-item-parent .meganav-editing-block, .navmenu-item-parent.open > .navmenu-submenu {
  z-index: 1;
  display: block;
}
.navmenu-item-parent .navmenu-submenu.meganav-editing-block {
  animation: none;
}
.navmenu-item-parent.alternate-drop .navmenu {
  left: calc(-100% + 1px);
}

.site-header-actions {
  flex: 1 0 auto;
  padding-left: 0;
  margin-top: 0;
  margin-bottom: 0;
  list-style: none;
}
.site-header-actions li {
  display: inline-block;
}
.site-header-actions li a {
  padding-right: 12px;
  padding-left: 12px;
}
.site-navigation-wrapper .site-header-actions {
  display: inline-block;
  max-width: 305px;
  margin-top: 8px;
  text-align: right;
}
.site-navigation-wrapper .site-header-actions a {
  color: {{ settings.color_header_navigation_secondary_menu_text }};
  opacity: 0.8;
}
.site-navigation-wrapper .site-header-actions a:hover {
  color: {{ settings.color_header_navigation_secondary_menu_text_hover }};
}
.site-mobile-nav .site-header-actions {
  font-family: {{ fonts_type_body_family }};
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight_lighter }};
  display: flex;
  align-items: center;
  align-self: start;
  flex-direction: row;
  height: 32px;
  margin-top: 12px;
  margin-bottom: 12px;
  margin-left: 24px;
  border-right: 1px solid {{ settings.color_header_text | color_modify: 'alpha', 0.20 }};
}
.site-mobile-nav .site-header-actions li {
  line-height: 46px;
  opacity: 0.8;
}
.site-mobile-nav .site-header-actions li svg {
  width: 22px;
  height: 22px;
  color: {{ settings.color_header_text }};
  vertical-align: middle;
}
.site-mobile-nav .site-header-actions a {
  padding-right: 8px;
  padding-left: 8px;
  color: {{ settings.color_header_navigation_dropdown_menu_links }};
}
.site-mobile-nav .site-header-actions .site-header-account-link {
  margin-left: -6px;
  color: {{ settings.color_header_navigation_main_menu_text }};
}
.site-mobile-nav .site-header-actions .site-header-account-link a {
  vertical-align: middle;
}
.site-mobile-nav .site-header-actions .site-header-account-link svg {
  margin-right: 4px;
}
.site-header--traditional .site-header-actions .site-header-account-link svg {
  width: 17px;
  height: 17px;
  vertical-align: middle;
  transform: translateY(-2px);
}
.site-header--traditional .site-header-actions .site-header-account-link a {
  padding-left: 3px;
}
.site-header-actions .site-header-account-link:last-child {
  margin-left: 0;
}

{%- if settings.header_layout == 'minimal' -%}

@keyframes show-search {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

.site-header-main {
    position: relative;
    min-height: 56px;
    padding-top: 5px;
    padding-bottom: 5px;
    background-color: {{ color_header_background }};
  }

@media screen and (min-width: 1024px) {
    .site-header-main {
      min-height: 66px;
      padding-top: 10px;
      padding-bottom: 10px;
    }
  }

.site-header-main::before {
    position: absolute;
    top: 0;
    left: 50%;
    z-index: -1;
    display: block;
    width: 100vw;
    max-width: 100%;
    height: 100%;
    pointer-events: none;
    background-color: {{ color_header_background }};
    content: "";
    transform: translate(-50%);
  }

.site-header-main-content {
    display: flex;
    align-items: center;
    margin-right: 0;
    min-height: 46px;
  }

.site-header-logo {
    display: table;
    height: 100%;
    margin-right: auto;
    margin-left: auto;
    padding-right: 24px;
    padding-left: 24px;
  }

@media screen and (min-width: 720px) {
    .site-header-logo {
      padding-right: 0;
      padding-left: 0;
    }
  }

@media screen and (max-width: 859px) {
    .desktop-logo-image,
.desktop-logo-text {
      display: none;
    }
  }

@media screen and (min-width: 860px) {
    .mobile-logo-image,
.mobile-logo-text {
      display: none;
    }

    .desktop-logo-image,
.desktop-logo-text {
      display: block;
    }
  }

.site-header-menu-button,
.site-header-search-button {
    position: absolute;
    top: 50%;
    margin-top: -23px;
  }

.site-header-search-button {
    left: 44px;
    margin-top: -21px;
    padding: 0;
  }

@media screen and (min-width: 720px) {
    .site-header-search-button {
      left: calc({{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }} + 2.125rem);
    }
  }

@media screen and (min-width: 1080px) {
    .site-header-search-button {
      left: 4.625rem;
    }
  }

.site-header-search-icon .close-icon {
    display: none;
  }

.site-header-search-icon .close-icon svg {
    height: 18px;
    width: 18px;
  }

.live-search {
    display: none;
  }

.live-search.animating-in, .live-search.animating-out {
    animation-duration: 200ms;
    animation-name: show-search;
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
  }

.live-search.animating-out {
    animation-direction: reverse;
  }

@media screen and (min-width: 860px) {
    .site-header--minimal .live-search {
      width: 100%;
      margin-top: 0;
      margin-right: 11.25rem;
      margin-left: 11.25rem;
    }
  }

@media screen and (min-width: 1024px) {
    .site-header--minimal .live-search {
      max-width: 37.5rem;
      margin-right: auto;
      margin-left: auto;
    }
  }

.site-header-main--logo-center .live-search {
    display: none;
  }

.site-header-main--logo-left .site-header-logo {
    margin-right: 44px;
    margin-left: 39px;
    padding-left: 0;
    text-align: left;
  }

@media screen and (min-width: 720px) {
    .site-header-main--logo-left .site-header-logo {
      flex: 0 0 auto;
      margin-left: 49px;
      margin-right: 25px;
    }
  }

.site-header-main--logo-left .live-search {
    display: none;
  }

@media screen and (min-width: 720px) {
    .site-header-main--logo-left .live-search {
      display: flex;
      flex: 1 1 0;
      width: 100%;
      max-width: 100%;
      margin-top: 0;
      margin-left: 0;
      margin-right: 11.25rem;
    }
  }

.site-header-main--logo-left .site-header-main-actions .site-header-button {
    position: relative;
  }

.site-header-main--logo-left .site-header-search-button {
    left: auto;
    right: 44px;
    margin-top: -23px;
  }

@media screen and (min-width: 720px) {
    .site-header-main--logo-left .site-header-search-button {
      display: none;
    }
  }

.site-header-search--open .live-search {
    display: flex;
  }

.site-header-search--open .site-header-logo {
    display: none;
  }

.site-header-search--open .site-header-search-icon .search-icon {
    display: none;
  }

.site-header-search--open .site-header-search-icon .close-icon {
    display: inline-block;
  }

@media screen and (max-width: 859px) {
    .site-header-search--open .live-search-disabled .live-search {
      width: 100%;
      margin-top: 0;
      margin-right: 11.25rem;
      margin-left: 11.25rem;
    }
  }

@media screen and (max-width: 719px) {
    .site-header-search--open .live-search-disabled .site-header-menu-button {
      display: none;
    }
    .site-header-search--open .live-search-disabled .site-header-search-button {
      left: 0;
      margin-top: -22px;
      padding-left: 2px;
    }
    .site-header-search--open .live-search-disabled .live-search {
      margin-right: 0;
      margin-left: 34px;
    }
    .site-header-search--open .live-search-disabled .site-header-main-actions {
      display: none;
    }
  }

.site-header-search--open .live-search-disabled.site-header-main--logo-left .site-header-search-button {
    right: auto;
    left: 0;
    margin-top: -22px;
    padding-left: 2px;
  }

.site-header-search--open .live-search-disabled.site-header-main--logo-left .live-search {
    margin-left: 34px;
  }

.site-header-main-actions {
    display: table;
    position: absolute;
    top: 50%;
    right: 0;
    height: 100%;
    transform: translateY(-50%);
  }

.site-header-main-actions .site-header-account-button {
    display: none;
  }

.site-header-main-actions .site-header-button {
    top: 0;
    margin-top: 0;
  }

.site-header-main-actions .site-header-cart-button {
    position: relative;
    display: table-cell;
    vertical-align: middle;
  }

@media screen and (min-width: 720px) {
    .site-header-main-actions {
      right: 25px;
    }
    .site-header-main-actions .site-header-button {
      display: table-cell;
      position: relative;
      vertical-align: middle;
    }
    .site-header-main-actions .site-header-cart-button {
      right: 0;
    }
  }

.site-header-account-button {
    display: none;
  }

@media screen and (min-width: 720px) {
    .site-header-account-button {
      display: inline-block;
    }
  }

{%- endif -%}
{%- if settings.header_layout == 'traditional' -%}
.site-header-main {
    position: relative;
    padding-top: 10px;
    padding-bottom: 10px;
    background-color: {{ color_header_background }};
    transition: padding 0.15s cubic-bezier(0.3, 0, 0, 1);
  }
@media screen and (min-width: 1024px) {
    .site-header-main {
      padding-top: 20px;
      padding-bottom: 10px;
    }
  }
.site-header-main::before {
    position: absolute;
    top: 0;
    left: 50%;
    z-index: -1;
    display: block;
    width: 100vw;
    max-width: 100%;
    height: 100%;
    pointer-events: none;
    background-color: {{ color_header_background }};
    content: "";
    transform: translate(-50%);
  }
.site-header-main-content {
    margin-right: auto;
    margin-left: auto;
    font-size: 0;
    letter-spacing: 0;
    transition: margin 0.15s cubic-bezier(0.3, 0, 0, 1);
  }
@media screen and (min-width: 1024px) {
    .site-header-main-content {
      display: flex;
      align-items: center;
      margin-right: 125px;
      margin-left: 0;
    }
  }
.site-header-button {
    position: absolute;
    top: 10px;
    bottom: auto;
  }
@media screen and (min-width: 1024px) {
    .site-header-button {
      top: 50%;
      bottom: 66px;
      margin-top: -18px;
    }
  }
@media screen and (min-width: 1024px) {
    .site-header-menu-button {
      left: -50px;
      width: auto;
      opacity: 0;
      visibility: hidden;
      transition: opacity 0.15s cubic-bezier(0.3, 0, 0, 1), left 0.15s cubic-bezier(0.3, 0, 0, 1);
    }
  }
.site-header-logo {
    margin-right: auto;
    margin-left: auto;
    text-align: center;
    vertical-align: middle;
  }
@media screen and (max-width: 1023px) and (min-width: 375px) {
    .site-header-logo {
      max-width: calc(100% - 88px);
    }
  }
@media screen and (max-width: 1023px) {
    .site-header-logo {
      display: table;
      min-height: 46px;
    }
  }
@media screen and (min-width: 1024px) {
    .site-header-logo {
      display: inline-block;
      height: auto;
      margin-right: 25px;
      margin-left: 0;
      text-align: left;
    }
  }
.desktop-logo-image,
.mobile-logo-image {
    margin-right: auto;
    margin-left: auto;
  }
@media screen and (min-width: 1024px) {
    .desktop-logo-image,
.mobile-logo-image {
      margin-left: 0;
    }
  }
@media screen and (min-width: 1024px) {
    .traditional-header--scrolled .site-header-main {
      padding-top: 10px;
      padding-bottom: 10px;
    }
    .traditional-header--scrolled .site-header-main-content {
      margin-left: 50px;
    }
    .traditional-header--scrolled .site-header-button {
      margin-top: -23px;
    }
    .traditional-header--scrolled .site-header-menu-button {
      visibility: visible;
      left: calc({{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }} - 0.625rem);
      opacity: 1;
    }
  }
@media screen and (min-width: 1080px) {
    .traditional-header--scrolled .site-header-menu-button {
      left: 1.875rem;
    }
  }
.intersection-target {
    position: absolute;
    top: 30vh;
    pointer-events: none;
  }
@media screen and (min-width: 1024px) {
    .small-promo-enabled {
      margin-right: {{ settings.type_size_base | times: 4.25 | divided_by: 16.0 | append: 'rem' }};
    }
  }
.small-promo {
    font-size: var(--font-size-body-smaller);
    position: relative;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    order: 1;
    text-decoration: none;
    transform: translate3d(0, 0, 0) scale(1);
    color: {{ settings.color_header_logo_text }};
  }
@media screen and (max-width: 1023px) {
    .small-promo {
      padding-top: {{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }};
      padding-right: 10px;
      padding-bottom: {{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }}-0.625rem;
      padding-left: 10px;
    }
  }
@media screen and (min-width: 1024px) {
    .small-promo {
      align-items: center;
      justify-content: flex-start;
      margin-left: 2.1875rem;
    }
  }
.small-promo-icon {
    flex-shrink: 0;
    height: 1rem;
    margin-right: 10px;
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    color: {{ settings.color_header_logo_text }};
  }
.small-promo-icon svg {
    width: 100%;
    height: 100%;
    max-width: 3.75rem;
    max-height: 3.75rem;
  }
.small-promo-icon img {
    height: 100%;
  }
@media screen and (min-width: 1024px) {
    .small-promo-icon {
      width: auto;
      height: 1.75rem;
    }
  }
@media screen and (max-width: 1023px) {
    .small-promo-icon--svg {
      width: 1rem;
    }
  }
@media screen and (max-width: 1023px) {
    .small-promo-icon--custom {
      width: auto;
    }
  }
@media screen and (max-width: 1023px) {
    .small-promo-text-desktop,
.small-promo-text-mobile {
      font-size: var(--font-size-body-smaller);
      display: inline;
    }
    .small-promo-text-desktop p,
.small-promo-text-mobile p {
      display: inline;
    }
  }
.small-promo-heading {
    font-family: {{ fonts_type_heading_family }};
    font-style: {{ fonts_type_heading_style }};
    font-weight: {{ fonts_type_heading_weight }};
    display: inline;
    margin: 0;
  }
@media screen and (max-width: 1023px) {
    .small-promo-heading {
      font-size: var(--font-size-body-smaller);
    }
  }
@media screen and (min-width: 1024px) {
    .small-promo-heading {
      font-size: var(--font-size-body-small);
      display: block;
    }
  }
.small-promo-content {
    line-height: 1.3;
    text-align: center;
  }
@media screen and (min-width: 1024px) {
    .small-promo-content {
      max-width: 200px;
      text-align: left;
    }
  }
.small-promo-content p {
    margin: 0;
  }
.small-promo-content a {
    position: relative;
    z-index: 1;
    font-size: inherit;
    color: inherit;
  }
.small-promo-text-desktop {
    display: inline;
  }
@media screen and (min-width: 1024px) {
    .small-promo-text-desktop {
      display: block;
    }
  }
@media screen and (max-width: 1023px) {
    .small-promo-text-mobile + .small-promo-text-desktop {
      display: none;
    }
  }
@media screen and (min-width: 1024px) {
    .small-promo-text-mobile {
      display: none;
    }
  }
{%- endif -%}
/* Sections */
.announcement-bar {
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight_bolder }};
  font-size: var(--font-size-body-smaller);
  display: block;
  padding: 15px 0;
  line-height: 1.3;
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
  text-align: center;
  text-decoration: none;
  transform: translate3d(0, 0, 0) scale(1);
}
@media screen and (min-width: 720px) {
  .announcement-bar.only-mobile {
    display: none;
  }
}
.announcement-bar p {
  margin: 0;
}
.announcement-bar a {
  color: currentColor;
}
@media screen and (min-width: 720px) {
  .announcement-bar {
    font-size: var(--font-size-body-small);
  }
}

.announcement-bar-text {
  display: none;
}
@media screen and (min-width: 720px) {
  .announcement-bar-text {
    display: block;
  }
}

@media screen and (min-width: 720px) {
  .announcement-bar-text-mobile {
    display: none;
  }
}

.announcement-bar-link {
  position: absolute;
  top: 2px;
  right: 2px;
  bottom: 2px;
  left: 2px;
}

.announcement-bar-text a,
.announcement-bar-text-mobile a {
  position: relative;
  z-index: 1;
}

.collection--section {
  margin-top: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
}
@media screen and (min-width: 720px) {
  .collection--section {
    margin-top: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
  }
}
.collection--section .productgrid--masthead.no-breadcrumbs {
  margin-top: 0;
}
@media screen and (min-width: 720px) {
  .collection--section .productgrid--masthead.no-breadcrumbs {
    margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
  }
}

.collection--image {
  position: relative;
  margin: 0;
}
.collection--image img {
  display: block;
  width: 100%;
  height: auto;
  border-radius: {{ settings.container_border_radius | append: 'px' }};
}

.collection--information {
  margin-top: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
}
.collection--information:first-child {
  margin-top: 0;
}

.collection--title {
  font-size: var(--font-size-heading-large);
  margin-top: 0;
  margin-bottom: 0;
  line-height: 1.3;
  color: {{ settings.color_text_headings }};
}

.collection--description {
  margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
}
.collection--description > *:first-child {
  margin-top: 0;
}

.results--container {
  position: relative;
}
.results--container .processing-overlay {
  opacity: 0;
  height: 100%;
  width: 100%;
  z-index: 0;
  transition: opacity 0.2s;
}
.results--container .icon-loading {
  position: absolute;
  display: block;
  height: 77px;
  width: 77px;
  top: 7.5rem;
  left: calc(50% - 77px / 2);
  opacity: 0;
  color: {{ settings.color_text_links }};
}
@media screen and (min-width: 860px) {
  .results--container .icon-loading {
    top: 11.875rem;
  }
}
.results--container.processing--filter .processing-overlay {
  position: absolute;
  opacity: 0.7;
  background-color: {{ settings.color_layout_site_background }};
  z-index: 10;
}
.results--container.processing--filter .icon-loading {
  opacity: 1;
  transition: opacity 200ms ease-in-out;
  z-index: 11;
  animation: 0.6s rotate linear infinite both;
}

.click-to-load ~ .pagination__wrapper {
  display: none;
}
.click-to-load .button-primary {
  font-size: var(--font-size-button-medium);
  padding: 0.875rem 1.375rem;
  letter-spacing: {{ settings.type_button_spacing | divided_by: 100.0 | append: 'em' }};
  margin: 3.125rem auto;
  display: block;
}
{%- if settings.type_button_capitalize -%}
.click-to-load .button-primary {
    text-transform: uppercase;
  }
{%- else -%}
.click-to-load .button-primary {
    text-transform: none;
  }
{%- endif -%}

.product--container {
  margin-top: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
}
@media screen and (min-width: 720px) {
  .product--container {
    margin-top: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
  }
  .product--container.no-breadcrumbs {
    margin-top: {{ settings.type_size_base | times: 2 | divided_by: 16.0 | append: 'rem' }};
  }
}
@media screen and (max-width: 719px) {
  .product--container {
    padding-right: 0;
    padding-left: 0;
  }
  .product--container.no-breadcrumbs {
    margin-top: 10px;
  }
}

.product--outer {
  display: flex;
  flex-wrap: wrap;
}

@media screen and (max-width: 719px) {
  .product-gallery,
.product-main {
    padding-right: 10px;
    padding-left: 10px;
  }
}

.product-gallery,
.product-form--alt,
.product-main {
  font-size: var(--font-size-body);
  width: 100%;
}

.product-form--alt,
.product-main,
.product-readmore,
.product--section ~ .shopify-section {
  transition: opacity 0.2s ease;
}
.product-gallery--fade .product-form--alt,
.product-gallery--fade .product-main,
.product-gallery--fade .product-readmore,
.product-gallery--fade .product--section ~ .shopify-section {
  opacity: 0.3;
}

@media screen and (min-width: 720px) {
  .product-gallery {
    width: 50%;
  }
  .layout--two-col-medium .product-gallery, .layout--two-col-large .product-gallery {
    width: 56%;
  }
}
@media screen and (min-width: 860px) {
  .layout--two-col-large .product-gallery {
    width: 62%;
  }
}
@media screen and (min-width: 1024px) {
  .layout--three-col .product-gallery {
    width: 35%;
  }
}

@media screen and (min-width: 720px) {
  .product-main {
    width: 47.5%;
    margin-left: 2.5%;
  }
  .layout--two-col-medium .product-main, .layout--two-col-large .product-main {
    width: 41.5%;
  }
}
@media screen and (min-width: 860px) {
  .layout--two-col-large .product-main {
    width: 35.5%;
  }
}
@media screen and (min-width: 1024px) {
  .layout--three-col .product-main {
    width: 36.5%;
  }
}

.product-description {
  margin-top: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
}

.product-form--alt {
  font-size: var(--font-size-body);
  display: none;
}
@media screen and (min-width: 1024px) {
  .product-form--alt {
    display: block;
    width: 23.5%;
    margin-left: 2.5%;
  }
}
@media screen and (min-width: 1280px) {
  .product-form--alt {
    width: 22%;
    margin-left: 4%;
  }
}

.product-link {
  display: inline-block;
  margin-top: 25px;
}
{%- if settings.type_body_underline_links -%}
.product-link {
    text-decoration: underline;
  }
{%- endif -%}

/* Components */
.site-main {
  position: relative;
  z-index: 500;
  outline: none;
}
body:not(.template-index) .site-main {
  padding-bottom: {{ settings.type_size_base | times: 2 | divided_by: 16.0 | append: 'rem' }};
}
@media screen and (min-width: 1024px) {
  body:not(.template-index) .site-main {
    padding-bottom: {{ settings.type_size_base | times: 3.125 | divided_by: 16.0 | append: 'rem' }};
  }
}

.live-search {
  position: relative;
  z-index: 150;
  display: block;
  height: 46px;
  margin-top: 10px;
}
@media screen and (min-width: 1024px) {
  .live-search {
    display: flex;
    flex-basis: auto;
    flex-grow: 1;
    flex-shrink: 1;
    margin-top: 0;
    vertical-align: middle;
  }
}
.live-search.live-search--takeover {
  position: fixed;
  display: block;
  top: 0;
  right: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  margin-top: 0;
  background-color: {{ settings.color_popups_background }};
}

.live-search-form {
  position: absolute;
  right: -1px;
  left: -1px;
  border-radius: 0;
  transition: border 0.1s ease, box-shadow 0.1s ease;
}
.live-search-form:hover, .live-search--focused .live-search-form {
  border-color: {{ color_border | color_modify: 'alpha', 0.25 }};
}
.live-search--takeover .live-search-form {
  border-color: transparent;
  border-radius: 0;
  box-shadow: none;
}
.live-search-form .form-field {
  position: relative;
  z-index: 100;
  display: flex;
  height: 46px;
}
.live-search--takeover .live-search-form .form-field {
  height: 52px;
  border: 0;
  border-radius: 0;
}

.form-field .live-search-form-field {
  font-size: var(--font-size-input);
  flex-basis: auto;
  flex-grow: 0;
  flex-shrink: 0;
  width: calc(100% - 53px);
  padding-top: 0.875rem;
  padding-bottom: 0.875rem;
  color: {{ settings.color_header_search_bar_text }};
  vertical-align: top;
  background-color: {{ settings.color_header_search_bar_background }};
  border-color: {{ settings.color_header_search_bar_border }};
  border-style: solid;
  border-top-width: 1px;
  border-right-width: 0;
  border-bottom-width: 1px;
  border-left-width: 1px;
  border-radius: {{ settings.form_border_radius | append: 'px' }} 0 0 {{ settings.form_border_radius | append: 'px' }};
  transition: border 0.1s ease, box-shadow 0.1s ease;
}
{%- if color_header_search_bar_border_extract_alpha == 0 -%}
.form-field .live-search-form-field {
    border-width: 0;
  }
{%- endif -%}
.form-field .live-search-form-field:-ms-input-placeholder {
  color: {{ settings.color_header_search_bar_text | color_modify: 'alpha', 0.60 }};
  transform: translateY(0);
  opacity: 1;
}
.form-field .live-search-form-field::placeholder {
  color: {{ settings.color_header_search_bar_text | color_modify: 'alpha', 0.60 }};
  transform: translateY(0);
  opacity: 1;
}
.form-field .live-search-form-field:focus {
  border-color: {{ settings.color_header_search_bar_border }};
}
.live-search--active .form-field .live-search-form-field {
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}
.live-search--takeover .form-field .live-search-form-field {
  z-index: 200;
  width: 100%;
  padding-right: 100px;
  border: none;
  color: {{ settings.color_forms_input_text }};
  background-color: {{ settings.color_forms_input_background }};
}
.live-search--takeover .form-field .live-search-form-field:-ms-input-placeholder {
  color: {{ settings.color_forms_input_placeholder_text }};
}
.live-search--takeover .form-field .live-search-form-field::placeholder {
  color: {{ settings.color_forms_input_placeholder_text }};
}
@media screen and (max-width: 719px) {
  .live-search--takeover .form-field .live-search-form-field {
    border-bottom: 0;
  }
}

.live-search-button {
  flex-basis: auto;
  flex-grow: 0;
  flex-shrink: 0;
  width: 53px;
  color: {{ settings.color_header_search_bar_button_icon }};
  vertical-align: top;
  background-color: {{ settings.color_header_search_bar_button_background }};
  border-color: {{ settings.color_header_search_bar_border }};
  border-style: solid;
  border-top-width: 1px;
  border-right-width: 1px;
  border-bottom-width: 1px;
  border-left-width: 0;
  border-radius: 0 {{ settings.form_border_radius | append: 'px' }} {{ settings.form_border_radius | append: 'px' }} 0;
}
{%- if color_header_search_bar_border_extract_alpha == 0 -%}
.live-search-button {
    border-width: 0;
  }
{%- endif -%}
.live-search-button:hover {
  background-color: {{ settings.color_header_search_bar_button_background }};
}
.live-search--active .live-search-button {
  border-bottom-right-radius: 0;
}
.live-search--takeover .live-search-button {
  display: none;
  visibility: hidden;
}

@media screen and (max-width: 859px) {
  .productgrid--sidebar {
    display: none;
  }
}
@media screen and (min-width: 860px) {
  .productgrid--sidebar {
    float: left;
    width: 185px;
  }
}
.productgrid--sidebar.processing--filter .filter-item a {
  cursor: default;
}

.productgrid--sidebar-section,
.productgrid--sidebar-title {
  margin-top: {{ settings.type_size_base | times: 3.125 | divided_by: 16.0 | append: 'rem' }};
}
.productgrid--sidebar-section:first-child,
.productgrid--sidebar-title:first-child {
  margin-top: 0;
}

.productgrid--sidebar-title {
  font-size: var(--font-size-heading-5);
  margin-bottom: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
  color: {{ settings.color_text_headings }};
}

.productgrid--sidebar-title--small {
  font-size: var(--font-size-body-small);
  margin-top: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
  margin-bottom: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
  color: {{ settings.color_text_regular_text }};
  text-transform: none;
}
{%- if settings.type_body_custom == blank and settings.type_body_enable_bold -%}
.productgrid--sidebar-title--small {
    font-family: {{ fonts_type_body_bold_family }};
    font-style: {{ fonts_type_body_bold_style }};
    font-weight: {{ fonts_type_body_bold_weight }};
  }
{%- else -%}
.productgrid--sidebar-title--small {
    font-family: {{ fonts_type_body_family }};
    font-style: {{ fonts_type_body_style }};
    font-weight: {{ fonts_type_body_weight }};
  }
{%- endif -%}

.productgrid--sidebar-item {
  padding-left: 0;
  margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
  margin-left: 0;
  list-style: none;
}
.productgrid--sidebar-item:first-child {
  margin-top: 0;
}

.productgrid--sidebar-filters--current {
  margin-bottom: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
}
@media screen and (min-width: 860px) {
  .productgrid--sidebar-filters--current {
    display: none;
  }
}

@media screen and (min-width: 860px) {
  .layout--has-sidebar .productgrid--wrapper {
    float: left;
    width: calc(100% - 185px - 25px);
    margin-left: 25px;
  }
}

@media screen and (max-width: 859px) {
  .productgrid--filters {
    display: none;
  }
}
@media screen and (min-width: 860px) {
  .productgrid--filters {
    margin-top: calc({{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }} - {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }});
    margin-bottom: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
  }
}

.productgrid--utils {
  display: none;
  width: 100%;
  padding-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
  padding-bottom: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
  margin-top: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
  margin-bottom: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
  background-color: {{ settings.color_layout_secondary_backgrounds }};
  table-layout: fixed;
  border-radius: {{ settings.container_border_radius | divided_by: 2.0 | append: 'px' }};
}
.processing--filter .productgrid--utils * {
  cursor: default;
}
@media screen and (max-width: 859px) {
  .productgrid--utils.productgrid--utils--visible-mobile {
    display: table;
  }
}
@media screen and (min-width: 860px) {
  .productgrid--utils {
    display: table;
  }
  .productgrid--utils.productgrid--utils--hidden-desktop {
    display: none;
  }
}

.productgrid--items {
  display: flex;
  align-items: stretch;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  margin-top: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
  padding: 0;
}
@media screen and (max-width: 719px) {
  .search--section .productgrid--items {
    margin-top: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
  }
}
@supports (display: grid) {
  .productgrid--items {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: {{ settings.product_grid_row_space_mobile | append: 'px' }} {{ settings.product_grid_column_space_mobile | append: 'px' }};
  }
  @media screen and (max-width: 859px) and (min-width: 680px) {
    .productgrid--items {
      grid-template-columns: repeat(3, 1fr);
    }
  }
  @media screen and (min-width: 860px) {
    .productgrid--items {
      grid-template-columns: repeat(4, 1fr);
    }
  }
  @media screen and (max-width: 1079px) and (min-width: 720px) {
    .productgrid--items {
      grid-gap: calc({{ settings.product_grid_row_space_desktop | append: 'px' }} * 2 / 3) calc({{ settings.product_grid_column_space_desktop | append: 'px' }} * 2 / 3);
    }
  }
  @media screen and (min-width: 1080px) {
    .productgrid--items {
      grid-gap: {{ settings.product_grid_row_space_desktop | append: 'px' }} {{ settings.product_grid_column_space_desktop | append: 'px' }};
    }
  }
  @media screen and (max-width: 1023px) and (min-width: 860px) {
    .layout--has-sidebar .productgrid--items {
      grid-template-columns: repeat(3, 1fr);
    }
  }
}

.productgrid--item {
  position: relative;
  z-index: 1;
  display: flex;
  flex-direction: column;
  flex-grow: 0;
  flex-shrink: 0;
  justify-content: flex-start;
  border-radius: {{ settings.product_card_border_radius | append: 'px' }};
  transition: text-shadow 0.25s linear;
}
.productgrid--no-spacing .productgrid--item {
  border-radius: 0;
}
.productgrid--no-spacing .productgrid--item .productitem--image {
  border-radius: {{ settings.product_card_border_radius | append: 'px' }};
}
@media screen and (min-width: 1024px) {
  .productgrid--item.animating, .productgrid--item.visible {
    z-index: 200;
  }
  .productgrid--item:hover {
    z-index: 300;
  }
}
@media screen and (max-width: 679px) {
  .productgrid--items .productgrid--item {
    width: calc(50% - 5px);
    margin-top: 10px;
    margin-left: 10px;
  }
  .productgrid--items .productgrid--item:nth-child(2n+1) {
    margin-left: 0;
  }
  .productgrid--items .productgrid--item:nth-child(-n+2) {
    margin-top: 0;
  }
}
@media screen and (max-width: 859px) and (min-width: 680px) {
  .productgrid--items .productgrid--item {
    width: calc(33.3333333333% - 6.6666666667px);
    margin-top: 10px;
    margin-left: 10px;
  }
  .productgrid--items .productgrid--item:nth-child(3n+1) {
    margin-left: 0;
  }
  .productgrid--items .productgrid--item:nth-child(-n+3) {
    margin-top: 0;
  }
}
@media screen and (max-width: 1023px) and (min-width: 860px) {
  .layout--has-sidebar .productgrid--items .productgrid--item {
    width: calc(33.3333333333% - 13.3333333333px);
    margin-top: 20px;
    margin-left: 20px;
  }
  .layout--has-sidebar .productgrid--items .productgrid--item:nth-child(3n+1) {
    margin-left: 0;
  }
  .layout--has-sidebar .productgrid--items .productgrid--item:nth-child(-n+3) {
    margin-top: 0;
  }
}
@media screen and (min-width: 1024px) {
  .layout--has-sidebar .productgrid--items .productgrid--item {
    width: calc(25% - 15px);
    margin-top: 20px;
    margin-left: 20px;
  }
  .layout--has-sidebar .productgrid--items .productgrid--item:nth-child(4n+1) {
    margin-left: 0;
  }
  .layout--has-sidebar .productgrid--items .productgrid--item:nth-child(-n+4) {
    margin-top: 0;
  }
}
@media screen and (min-width: 860px) {
  .layout--no-sidebar .productgrid--items .productgrid--item {
    width: calc(25% - 15px);
    margin-top: 20px;
    margin-left: 20px;
  }
  .layout--no-sidebar .productgrid--items .productgrid--item:nth-child(4n+1) {
    margin-left: 0;
  }
  .layout--no-sidebar .productgrid--items .productgrid--item:nth-child(-n+4) {
    margin-top: 0;
  }
}
@supports (display: grid) {
  .productgrid--items .productgrid--item {
    width: auto;
    margin: 0;
  }
  .layout--has-sidebar .productgrid--items .productgrid--item, .layout--no-sidebar .productgrid--items .productgrid--item {
    width: auto;
    margin: 0;
  }
}

.productgrid--footer {
  padding-top: {{ settings.type_size_base | times: 3.125 | divided_by: 16.0 | append: 'rem' }};
  margin-top: {{ settings.type_size_base | times: 3.125 | divided_by: 16.0 | append: 'rem' }};
  border-top: 1px solid {{ color_layout_site_background_border_mix | color_modify: 'alpha', 0.15 }};
}

@media screen and (max-width: 719px) {
  .productgrid--footer-item:not(:first-child) {
    margin-top: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
  }
}
@media screen and (min-width: 720px) {
  .productgrid--footer-item {
    float: left;
    width: calc(50% - 20px);
  }
  .productgrid--footer-item:not(:first-child) {
    margin-left: 40px;
  }
}

.productgrid--footer-title {
  font-size: var(--font-size-heading-5);
  margin-top: 0;
  margin-bottom: 0;
  color: {{ settings.color_text_headings }};
  text-transform: uppercase;
}

.productgrid--footer-results-list {
  padding-left: 0;
  margin-top: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
  margin-bottom: 0;
  list-style: none;
}
.productgrid--footer-results-list li {
  font-size: var(--font-size-body);
  line-height: 1.56;
  color: {{ settings.color_text_regular_text }};
}
.productgrid--footer-results-list li:not(:first-child) {
  margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
}

.productitem--description {
  display: none;
  margin-bottom: 20px;
  line-height: 1.5;
}

.productgrid-listview .productgrid--items .productgrid--item {
  width: 100%;
}
.productgrid-listview .productgrid--items .productgrid--item:nth-of-type(n + 1) {
  margin: 20px 0 0;
}
.productgrid-listview .productgrid--items {
  display: block;
}
@supports (display: grid) {
  .productgrid-listview .productgrid--items {
    display: grid;
    grid-template-columns: 1fr;
  }
  .productgrid-listview .productgrid--items .productgrid--item {
    margin-top: 0;
  }
  .productgrid-listview .productgrid--items .productgrid--item:nth-of-type(n + 1) {
    margin-top: 0;
  }
}
.productgrid-listview .productgrid--item {
  width: 100%;
  margin: 20px 0 0;
}
.productgrid-listview .productgrid--item .productitem--gridview-stock-level {
  display: none;
}
.productgrid-listview .productgrid--item .productitem--action-qs {
  border-color: {{ settings.color_buttons_secondary_button_border }};
}
.productgrid-listview .productgrid--item .productitem--action-qs:not(.disabled):hover {
  border-color: {{ settings.color_buttons_secondary_button_border_hover }};
}
@media screen and (min-width: 860px) {
  .productgrid-listview .productgrid--item .productitem--action-qs {
    margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
  }
}
.productgrid-listview .productitem--image-link {
  grid-row-end: span 2;
}
@media screen and (min-width: 860px) {
  .productgrid-listview .productitem--image-link {
    width: 25%;
  }
}
.productgrid-listview .productitem--image-link .productitem--badge {
  display: none;
}
.no-touch .productgrid-listview .productitem--actions,
.productgrid-listview .productitem--actions {
  position: static;
  display: flex;
  flex-wrap: wrap;
  max-width: 300px;
  margin-right: 0;
  margin-top: 0;
  padding-top: 0;
  padding-left: 25px;
  opacity: 1;
  visibility: visible;
}
.no-touch .productgrid-listview .productitem--actions .productitem--action,
.productgrid-listview .productitem--actions .productitem--action {
  display: block;
  flex: 1 0 auto;
  min-width: 47%;
  padding: 0;
  margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
  margin-right: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
}
.no-touch .productgrid-listview .productitem--actions .productitem--action .productitem--action-trigger,
.productgrid-listview .productitem--actions .productitem--action .productitem--action-trigger {
  border-radius: {{ settings.button_border_radius | append: 'px' }};
}
.no-touch .productgrid-listview .productitem--actions .productitem--action:nth-of-type(2n),
.productgrid-listview .productitem--actions .productitem--action:nth-of-type(2n) {
  order: 1;
}
@media screen and (max-width: 1023px) {
  .no-touch .productgrid-listview .productitem--actions .productitem--action.productitem-action--desktop,
.productgrid-listview .productitem--actions .productitem--action.productitem-action--desktop {
    display: none;
  }
}
.no-touch .productgrid-listview .productitem--actions .productitem--listview-price,
.productgrid-listview .productitem--actions .productitem--listview-price {
  display: none;
  width: 100%;
  margin-bottom: 20px;
  text-align: right;
}
.no-touch .productgrid-listview .productitem--actions .productitem--listview-badge,
.productgrid-listview .productitem--actions .productitem--listview-badge {
  display: none;
  justify-content: flex-end;
  width: 100%;
  margin-bottom: 0.75rem;
}
.no-touch .productgrid-listview .productitem--actions .productitem--listview-badge .productitem--badge,
.productgrid-listview .productitem--actions .productitem--listview-badge .productitem--badge {
  position: relative;
  top: -0.375rem;
}
@media screen and (max-width: 859px) {
  .no-touch .productgrid-listview .productitem--actions,
.productgrid-listview .productitem--actions {
    max-height: 7.5rem;
  }
}
@media screen and (min-width: 860px) {
  .no-touch .productgrid-listview .productitem--actions,
.productgrid-listview .productitem--actions {
    display: block;
    flex: 0 0 200px;
  }
  .no-touch .productgrid-listview .productitem--actions .productitem--image-link,
.productgrid-listview .productitem--actions .productitem--image-link {
    width: 25%;
  }
  .no-touch .productgrid-listview .productitem--actions .productitem--listview-price,
.productgrid-listview .productitem--actions .productitem--listview-price {
    display: block;
  }
  .no-touch .productgrid-listview .productitem--actions .productitem--listview-badge,
.productgrid-listview .productitem--actions .productitem--listview-badge {
    display: flex;
  }
  .no-touch .productgrid-listview .productitem--actions .productitem--action,
.productgrid-listview .productitem--actions .productitem--action {
    width: 100%;
    margin-top: 0.5rem;
    margin-right: 0;
    padding: 0;
  }
}
.productgrid-listview .productitem--swatches {
  position: relative;
  order: 1;
  opacity: 1;
  visibility: visible;
}
.productgrid-listview .productitem--swatches-show-on-hover {
  padding: 0;
}
.productgrid-listview .productitem--description {
  order: 2;
}
.productgrid-listview .productitem {
  display: grid;
  grid-template-columns: 25% 75%;
  grid-template-rows: auto minmax(0, 1fr);
}
@media screen and (min-width: 860px) {
  .productgrid-listview .productitem {
    display: flex;
    justify-content: space-between;
  }
}
.productgrid-listview .productitem--info,
.productgrid-listview .productgrid--no-spacing .productitem--info {
  display: flex;
  flex-direction: column;
  padding: 0;
  margin: 0 0 0 25px;
}
@media screen and (min-width: 860px) {
  .productgrid-listview .productitem--info,
.productgrid-listview .productgrid--no-spacing .productitem--info {
    width: 50%;
    margin: 0 50px 0 25px;
  }
}
@media screen and (min-width: 860px) {
  .productgrid-listview .productitem--info .productitem--price,
.productgrid-listview .productgrid--no-spacing .productitem--info .productitem--price {
    display: none;
  }
}
@media screen and (max-width: 859px) and (min-width: 680px) {
  .productgrid-listview .productitem--info .productitem--price,
.productgrid-listview .productgrid--no-spacing .productitem--info .productitem--price {
    margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
  }
}
@media screen and (min-width: 860px) {
  .productgrid-listview .productitem--title {
    font-family: {{ fonts_type_product_card_title_family }};
    font-style: {{ fonts_type_product_card_title_style }};
    font-weight: {{ fonts_type_product_card_title_weight }};
    font-size: var(--font-size-product-card);
    color: {{ settings.color_text_headings }};
  }
}
.productgrid-listview .price--compare-at.visible {
  display: block;
}
.productgrid-listview .price--compare-at.visible .price--spacer {
  display: none;
}
@media screen and (min-width: 860px) {
  .productgrid-listview .productitem--description {
    display: block;
  }
}
.shopify-section.collection--section .breadcrumbs-container {
  margin-top: 0;
}

.utils-filter,
.utils-sortby,
.utils-view {
  font-size: var(--font-size-body-small);
  display: table-cell;
  width: 40%;
  padding: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }} {{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }};
  vertical-align: middle;
}

.utils-filter {
  text-align: left;
}
@media screen and (min-width: 860px) {
  .utils-filter {
    display: none;
  }
}

.utils-filter-button {
  display: table;
  transition: color 0.1s ease;
}

.utils-filter-icon {
  display: table-cell;
  padding-right: 11px;
  vertical-align: middle;
}
.utils-filter-icon svg {
  display: block;
  width: 19px;
  height: 13px;
  transition: fill 0.1s ease;
}

.utils-filter-text {
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight_bolder }};
  font-size: var(--font-size-body-small);
  display: table-cell;
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
  vertical-align: middle;
}

.utils-sortby {
  font-size: 0;
  letter-spacing: 0;
  text-align: right;
}
@media screen and (min-width: 860px) {
  .utils-sortby {
    text-align: left;
  }
}

.utils-sortby-select,
.utils-sortby-title {
  display: inline-block;
  vertical-align: middle;
}

.utils-sortby-title {
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
  cursor: pointer;
}
{%- if settings.type_body_custom == blank and settings.type_body_enable_bold -%}
.utils-sortby-title {
    font-family: {{ fonts_type_body_bold_family }};
    font-style: {{ fonts_type_body_bold_style }};
    font-weight: {{ fonts_type_body_bold_weight }};
  }
{%- else -%}
.utils-sortby-title {
    font-family: {{ fonts_type_body_family }};
    font-style: {{ fonts_type_body_style }};
    font-weight: {{ fonts_type_body_weight }};
  }
{%- endif -%}
@media screen and (min-width: 860px) {
  .utils-sortby-title {
    font-size: var(--font-size-body-small);
    display: inline-block;
  }
}

.utils-sortby-button {
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight_bolder }};
  font-size: var(--font-size-body-small);
  display: inline-block;
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
  vertical-align: middle;
}
@media screen and (min-width: 860px) {
  .utils-sortby-button {
    display: none;
  }
}

.utils-sortby-select {
  display: none;
  width: auto;
  max-width: 100%;
}
@media screen and (min-width: 860px) {
  .utils-sortby-select {
    display: inline-block;
    margin-left: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
  }
}
.utils-sortby-select .form-field-select {
  font-size: var(--font-size-body-smaller);
  max-width: 100%;
  padding-top: 0;
  padding-bottom: 0;
  background-color: transparent;
  color: {{ settings.color_text_regular_text }};
  border: 0;
  box-shadow: none;
}
.utils-sortby-select .form-field-select:focus {
  outline: 5px auto -webkit-focus-ring-color;
}
.utils-sortby-select svg {
  color: {{ settings.color_text_regular_text }};
}

.utils-sortby--modal {
  display: none;
}

.utils-sortby--modal-title {
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight_bolder }};
  font-size: var(--font-size-heading-5);
  display: block;
  margin-bottom: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
  color: {{ settings.color_text_headings }};
}

.utils-sortby--modal-list {
  padding-left: 0;
  margin-top: 0;
  margin-bottom: 0;
  list-style: none;
}

.utils-sortby--modal-item {
  margin-top: {{ settings.type_size_base | times: 0.75 | divided_by: 16.0 | append: 'rem' }};
}
.utils-sortby--modal-item:first-child {
  margin-top: 0;
}

.utils-sortby--modal-button {
  display: block;
  width: 100%;
  transition-duration: 0s;
}
.utils-sortby--modal-button:active, .utils-sortby--modal-button:active:hover, .utils-sortby--modal-button:focus, .utils-sortby--modal-button:focus:hover, .utils-sortby--modal-button.utils-sortby--modal-button--active, .utils-sortby--modal-button.utils-sortby--modal-button--active:hover {
  color: {{ settings.color_layout_site_background }};
  background: {{ settings.color_text_links }};
}

.utils-showby {
  display: flex;
  margin-top: 0;
  margin-bottom: 0;
  text-align: right;
}
@media screen and (max-width: 859px) {
  .utils-showby {
    display: none;
  }
}
.utils-showby li {
  display: block;
  list-style: none;
}
.utils-showby li:not(:first-child) {
  margin-left: {{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }};
}

.utils-showby-title {
  font-size: var(--font-size-body-small);
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
}
{%- if settings.type_body_custom == blank and settings.type_body_enable_bold -%}
.utils-showby-title {
    font-family: {{ fonts_type_body_bold_family }};
    font-style: {{ fonts_type_body_bold_style }};
    font-weight: {{ fonts_type_body_bold_weight }};
  }
{%- else -%}
.utils-showby-title {
    font-family: {{ fonts_type_body_family }};
    font-style: {{ fonts_type_body_style }};
    font-weight: {{ fonts_type_body_weight }};
  }
{%- endif -%}

.utils-showby-item {
  font-size: var(--font-size-body-smaller);
}
.utils-showby-item:hover {
  color: {{ settings.color_text_links }};
}
.processing--filter .utils-showby-item:hover {
  color: {{ settings.color_text_regular_text }};
}
.processing--filter .utils-showby-item.utils-showby-item--active:hover {
  color: {{ settings.color_text_links }};
}

.modal--productgrid-sort .modal-inner,
.modal--productgrid-filters .modal-inner {
  max-width: 31.25rem;
}

.productgrid--outer:not(.layout--has-sidebar) .utils-sortby {
  text-align: left;
}

.utils-view {
  width: 6.375rem;
}
@media screen and (max-width: 859px) {
  .utils-view {
    padding: 0 {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }} 0 0;
  }
  .utils-view.utils-hide {
    display: none;
  }
}
@media screen and (min-width: 860px) {
  .utils-view {
    width: 60%;
  }
}

.utils-view-container {
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.utils-viewtoggle {
  display: flex;
  align-items: center;
}
@media screen and (min-width: 860px) {
  .utils-viewtoggle {
    margin-left: 40px;
  }
}

.utils-viewtoggle-label {
  display: none;
  margin-right: 10px;
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
}
{%- if settings.type_body_custom == blank and settings.type_body_enable_bold -%}
.utils-viewtoggle-label {
    font-family: {{ fonts_type_body_bold_family }};
    font-style: {{ fonts_type_body_bold_style }};
    font-weight: {{ fonts_type_body_bold_weight }};
  }
{%- else -%}
.utils-viewtoggle-label {
    font-family: {{ fonts_type_body_family }};
    font-style: {{ fonts_type_body_style }};
    font-weight: {{ fonts_type_body_weight }};
  }
{%- endif -%}
@media screen and (min-width: 860px) {
  .utils-viewtoggle-label {
    display: block;
  }
}

.utils-viewtoggle-button {
  padding: 5px 13px 2px;
  margin-left: 0;
  color: {{ settings.color_text_regular_text | color_lighten: 40 }};
  cursor: pointer;
  background: {{ settings.color_layout_site_background }};
  border: 0;
  border-top: 1px solid {{ settings.color_text_regular_text | color_lighten: 40 }};
  border-bottom: 1px solid {{ settings.color_text_regular_text | color_lighten: 40 }};
  outline: 0;
  transition: color 0.1s ease;
  -webkit-appearance: none;
}
.utils-viewtoggle-button:nth-of-type(1) {
  border-left: 1px solid {{ settings.color_text_regular_text | color_lighten: 40 }};
  border-radius: 3px 0 0 3px;
}
.utils-viewtoggle-button:nth-of-type(1).active {
  border-color: {{ settings.color_text_links }};
}
.utils-viewtoggle-button:nth-of-type(2) {
  border-right: 1px solid {{ settings.color_text_regular_text | color_lighten: 40 }};
  border-radius: 0 3px 3px 0;
}
.utils-viewtoggle-button:nth-of-type(2).active {
  border-color: {{ settings.color_text_links }};
}
.utils-viewtoggle-button:focus {
  box-shadow: 0 0 0 2px {{ settings.color_text_regular_text | color_modify: 'alpha', 0.20 }};
}
.utils-viewtoggle-button:focus.active {
  border-color: {{ settings.color_text_links_hover }};
  box-shadow: 0 0 0 2px {{ settings.color_text_links | color_modify: 'alpha', 0.40 }};
}
.results--container:not(.processing--filter) .utils-viewtoggle-button:hover:not(.active) {
  color: {{ settings.color_text_regular_text | color_lighten: 20 }};
}
.utils-viewtoggle-button.active {
  color: {{ settings.color_layout_site_background }};
  background: {{ settings.color_text_links }};
}
@media screen and (min-width: 860px) {
  .utils-viewtoggle-button {
    height: 20px;
    padding: 0;
    margin-left: 6px;
    background-color: transparent;
  }
  .utils-viewtoggle-button:nth-of-type(1) {
    border: 0;
    border-radius: 2px;
  }
  .utils-viewtoggle-button:nth-of-type(2) {
    border: 0;
    border-radius: 2px;
  }
  .utils-viewtoggle-button.active {
    color: {{ settings.color_text_links }};
    background-color: transparent;
  }
}

.productgrid--sidebar-item.filter-group {
  margin-top: calc({{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }} - 0.1875rem);
}
.productgrid--sidebar-item.filter-group.productgrid--sidebar-item-swatches-grid, .productgrid--sidebar-item.filter-group.productgrid--sidebar-item-grid {
  margin: {{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }} -{{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }} -{{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }} 0;
}
.modal .productgrid--sidebar-item.filter-group.productgrid--sidebar-item-swatches-grid, .modal .productgrid--sidebar-item.filter-group.productgrid--sidebar-item-grid {
  margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
}

.productgrid--sidebar-item-swatches-grid,
.productgrid--sidebar-item-grid {
  display: flex;
  flex-wrap: wrap;
}
.productgrid--sidebar-item-swatches-grid .filter-item,
.productgrid--sidebar-item-grid .filter-item {
  margin: 0 {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }} {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }} 0;
}
.modal .productgrid--sidebar-item-swatches-grid .filter-item:first-child,
.modal .productgrid--sidebar-item-grid .filter-item:first-child {
  margin-top: 0;
}
.modal .productgrid--sidebar-item-swatches-grid .filter-item.filter-item--toggle-more,
.modal .productgrid--sidebar-item-grid .filter-item.filter-item--toggle-more {
  border: 0;
}
.productgrid--sidebar-item-swatches-grid .filter-item--toggle-more,
.productgrid--sidebar-item-grid .filter-item--toggle-more {
  width: 100%;
  margin-top: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
}

.productgrid--sidebar-item-swatches-grid {
  line-height: 0;
}
.productgrid--sidebar-item-swatches-grid .filter-item a {
  padding: 0;
  margin: 0;
}
.modal .productgrid--sidebar-item-swatches-grid .filter-item {
  border-top: 0;
}
.modal .productgrid--sidebar-item-swatches-grid .filter-item a {
  padding: 0;
}
.modal .productgrid--sidebar-item-swatches-grid .filter-item:last-child {
  border-bottom: 0;
}

.productgrid--sidebar-item-swatches-list .filter-item a {
  display: flex;
  align-items: center;
}
.productgrid--sidebar-item-swatches-list .filter-item--swatch-wrapper {
  margin-left: 0.5625rem;
}

.filter-item--swatch-wrapper {
  position: relative;
  height: {{ settings.swatches_sidebar_filter_size | append: 'px' }};
  padding: 0;
  cursor: pointer;
  border: 0;
  box-shadow: 0 0 0 0.0625rem {{ settings.color_forms_selected_input | color_modify: 'alpha', 0 }};
  transition: box-shadow 0.15s ease;
}
{%- if settings.swatches_shape == 'circle' -%}
.filter-item--swatch-wrapper {
    border-radius: 50%;
  }
{%- elsif settings.swatches_sidebar_filter_size <= 26 -%}
.filter-item--swatch-wrapper {
    border-radius: calc({{ settings.form_border_radius | divided_by: 2.0 | append: 'px' }} * 0.75);
  }
{%- elsif settings.swatches_sidebar_filter_size <= 46 -%}
.filter-item--swatch-wrapper {
    border-radius: {{ settings.form_border_radius | divided_by: 2.0 | append: 'px' }};
  }
{%- else -%}
.filter-item--swatch-wrapper {
    border-radius: {{ settings.form_border_radius | append: 'px' }};
  }
{%- endif -%}
.filter-item--swatch {
  height: 100%;
  overflow: hidden;
  pointer-events: none;
  transition: transform 0.15s ease;
}
{%- if settings.swatches_shape == 'circle' -%}
.filter-item--swatch {
    border-radius: 50%;
  }
{%- elsif settings.swatches_sidebar_filter_size <= 26 -%}
.filter-item--swatch {
    border-radius: calc({{ settings.form_border_radius | divided_by: 2.0 | append: 'px' }} * 0.75);
  }
{%- elsif settings.swatches_sidebar_filter_size <= 46 -%}
.filter-item--swatch {
    border-radius: {{ settings.form_border_radius | divided_by: 2.0 | append: 'px' }};
  }
{%- else -%}
.filter-item--swatch {
    border-radius: {{ settings.form_border_radius | append: 'px' }};
  }
{%- endif -%}
{%- if settings.swatches_sidebar_filter_size < 26 -%}
.productgrid--sidebar-item-swatches-grid .filter-item--active .filter-item--swatch {
    transform: scale(0.8);
    transform: scale(var(--swatch-inner-transform-x, 0.8), 0.8);
  }
{%- else -%}
.productgrid--sidebar-item-swatches-grid .filter-item--active .filter-item--swatch {
    transform: scale(0.85);
    transform: scale(var(--swatch-inner-transform-x, 0.85), 0.85);
  }
{%- endif -%}

.filter-item--swatch-inner {
  width: {{ settings.swatches_sidebar_filter_size | append: 'px' }};
}

.filter-item {
  position: relative;
  margin-top: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
  transition-duration: 0s;
}
.modal .filter-item {
  margin-top: 0;
  border-top: 1px solid {{ color_layout_site_background_border_mix | color_modify: 'alpha', 0.15 }};
}
.modal .filter-item:first-child {
  margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
}
.modal .filter-item:last-child {
  border-bottom: 1px solid {{ color_layout_site_background_border_mix | color_modify: 'alpha', 0.15 }};
}
.modal .filter-item.filter-item--toggle {
  padding-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
  border-bottom: 0;
}
.filter-item.filter-item--hidden {
  display: none;
}
.filter-item a {
  font-size: var(--font-size-body-small);
  position: relative;
  z-index: 100;
  display: inline-block;
  padding: 0.1875rem;
  margin-left: -0.1875rem;
  line-height: 1.15;
  color: currentColor;
  text-decoration: none;
}
.filter-item a:hover {
  z-index: 101;
}
.modal .filter-item a {
  padding: 0.5625rem 0.1875rem;
}
{%- if settings.type_body_underline_links -%}
.filter-item a.filter-text--link {
    text-decoration: underline;
  }
{%- endif -%}
.filter-item .filter-text,
.filter-item .filter-icon--checkbox {
  display: inline-block;
  vertical-align: middle;
}
.filter-item .filter-text {
  max-width: calc(100% - calc(0.5625rem0.8125rem));
  margin-left: 0.5625rem;
}
.modal .filter-item .filter-text {
  white-space: normal;
}

.filtered-product-count {
  font-size: var(--font-size-body-smallest);
  vertical-align: middle;
}
.productgrid--sidebar-item-swatches-list .filtered-product-count {
  margin-left: 3px;
}

.productgrid--sidebar-item-grid .filter-item:not(.filter-item--toggle-more) {
  width: auto;
  min-width: 40px;
  padding: 0;
  text-align: center;
  cursor: pointer;
  transition: 0.2s;
}
.productgrid--sidebar-item-grid .filter-item:not(.filter-item--toggle-more) .filter-text {
  max-width: 100%;
  margin-left: 0;
}
.productgrid--sidebar-item-grid .filter-item:not(.filter-item--toggle-more) a {
  width: 100%;
  padding: 9px 10px;
  margin: 0;
}
.productgrid--sidebar-item-grid .filter-item:not(.filter-item--toggle-more).filter-item--active {
  color: {{ settings.color_text_links }};
  background-color: {{ settings.color_text_links | color_modify: 'alpha', 0.10 }};
  border-color: {{ settings.color_text_links | color_modify: 'alpha', 0.80 }};
}

.filter-item--inactive a:hover {
  color: {{ settings.color_text_regular_text }};
}

.filter-item--active {
  transition-duration: 0s;
}
.filter-item--active a {
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
}
{%- if settings.type_body_custom == blank and settings.type_body_enable_bold -%}
.filter-item--active a {
    font-family: {{ fonts_type_body_bold_family }};
    font-style: {{ fonts_type_body_bold_style }};
    font-weight: {{ fonts_type_body_bold_weight }};
  }
{%- else -%}
.filter-item--active a {
    font-family: {{ fonts_type_body_family }};
    font-style: {{ fonts_type_body_style }};
    font-weight: {{ fonts_type_body_weight }};
  }
{%- endif -%}
.filter-item--active a, .filter-item--active a:hover {
  color: {{ settings.color_text_links }};
}
.filter-group--grid {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  padding: 0;
  margin: 0;
  white-space: normal;
}
.filter-group--grid .active-tag-group {
  margin-right: 10px;
}
.filter-group--grid .active-tag-group .filter-item--grid {
  margin-right: 1px;
  margin-left: 0;
}

.filter-item--grid-simple,
.filter-item--grid {
  display: inline-block;
  margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
  margin-right: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
}

.filter-item--grid a {
  display: block;
  color: {{ settings.color_layout_site_background }};
  background: {{ settings.color_text_links }};
}
.filter-item--grid .filter-icon--remove,
.filter-item--grid .filtered-product-count,
.filter-item--grid .filter-text {
  font-size: var(--font-size-body-small);
  display: inline-block;
  color: currentColor;
  vertical-align: middle;
}
.filter-item--grid .filter-text {
  padding: 0.4375rem 0.3125rem 0.4375rem 0.625rem;
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
}
{%- if settings.type_body_custom == blank and settings.type_body_enable_bold -%}
.filter-item--grid .filter-text {
    font-family: {{ fonts_type_body_bold_family }};
    font-style: {{ fonts_type_body_bold_style }};
    font-weight: {{ fonts_type_body_bold_weight }};
  }
{%- else -%}
.filter-item--grid .filter-text {
    font-family: {{ fonts_type_body_family }};
    font-style: {{ fonts_type_body_style }};
    font-weight: {{ fonts_type_body_weight }};
  }
{%- endif -%}
.filter-item--grid .filter-icon--remove {
  padding: 0.625rem 0.625rem 0.625rem {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
}
.filter-item--grid .filter-icon--remove svg {
  display: block;
  width: 16px;
  height: 16px;
  fill: currentColor;
}

@media screen and (max-width: 859px) {
  .filter-item--grid-simple {
    width: 100%;
    margin-top: {{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }};
  }
}
.filter-item--grid-simple a {
  font-size: var(--font-size-body-small);
  padding: 0.3125rem;
  background-color: transparent;
}
@media screen and (max-width: 859px) {
  .filter-item--grid-simple a {
    padding-right: 0;
    padding-left: 0;
  }
}

.productitem {
  position: relative;
  flex-grow: 1;
  width: 100%;
  min-height: 100%;
  padding: 0.9375rem;
  background: {{ settings.color_product_cards_background }};
  box-shadow: 0 0 0 rgba(0, 0, 0, 0);
  border-radius: {{ settings.product_card_border_radius | append: 'px' }};
  transition: height 0.25s ease, box-shadow 0.25s ease;
}
.productgrid--no-spacing .productitem {
  flex-grow: 0;
  min-height: auto;
  padding: 0;
  background: transparent;
  border-radius: 0;
}
@media screen and (min-width: 1024px) {
  .productgrid--item.animating .productitem, .productgrid--item.visible .productitem {
    position: absolute;
  }
  .productgrid--items:not(.productgrid--no-spacing) .productgrid--item.animating .productitem {
    overflow: hidden;
  }
}
.no-touch .productitem:hover, .no-touch .productitem:focus, .no-touch .visible .productitem {
  box-shadow: 0 4px 7px rgba(0, 0, 0, 0.1);
}
.productgrid--no-spacing .productitem:hover, .productgrid--no-spacing .productitem:focus, .productgrid--no-spacing .visible .productitem {
  box-shadow: none;
}
.productitem:hover .productitem--image-alternate ~ .productitem--image-primary, .productitem:focus .productitem--image-alternate ~ .productitem--image-primary, .visible .productitem .productitem--image-alternate ~ .productitem--image-primary {
  visibility: hidden;
}
.productitem:hover .productitem--image-alternate, .productitem:focus .productitem--image-alternate, .visible .productitem .productitem--image-alternate {
  visibility: visible;
}

.productitem--badge {
  position: absolute;
  bottom: 0;
  left: 0;
  width: auto;
  height: auto;
  font-size: 0.8125rem;
}

.productitem--info {
  position: relative;
  z-index: 100;
  padding: {{ settings.type_size_base | times: 0.75 | divided_by: 16.0 | append: 'rem' }} 0.9375rem 0;
  margin-right: -0.9375rem;
  margin-left: -0.9375rem;
  background-color: {{ settings.color_product_cards_background }};
}
.productgrid--no-spacing .productitem--info {
  padding: {{ settings.type_size_base | times: 0.75 | divided_by: 16.0 | append: 'rem' }} 0 0;
  margin-right: 0;
  margin-left: 0;
  background-color: transparent;
}
.productgrid--no-spacing .productitem--info .productitem--swatches-container {
  background-color: transparent;
}
.productitem--emphasis .productitem--info {
  padding-top: 0;
}

.productitem--price {
  font-family: {{ fonts_type_product_price_family }};
  font-style: {{ fonts_type_product_price_style }};
  font-weight: {{ fonts_type_product_price_weight }};
  letter-spacing: 0;
}
.productitem--price,
.productitem--price + .productitem--title {
  margin-top: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
}
.productitem--price .price--spacer {
  display: block;
  height: 1.12125rem;
}
.productitem--emphasis .productitem--price .price--main {
  font-size: var(--font-size-body-larger);
  margin-top: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
}
.price--varies .productitem--emphasis .productitem--price .price--main {
  font-size: var(--font-size-body-large);
}
.productitem--emphasis .productitem--price .price--main .price--label {
  font-size: var(--font-size-body-medium);
}
.productitem--sale .productitem--price .price--main {
  color: {{ settings.color_products_sale_price }};
}

.productitem--title {
  font-family: {{ fonts_type_product_card_title_family }};
  font-style: {{ fonts_type_product_card_title_style }};
  font-weight: {{ fonts_type_product_card_title_weight }};
  font-size: var(--font-size-product-card);
  margin: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }} 0 0;
  line-height: 1.3125;
  text-transform: none;
  letter-spacing: normal;
  white-space: normal;
}
.productitem--vendor {
  font-family: {{ fonts_type_product_vendor_family }};
  font-style: {{ fonts_type_product_vendor_style }};
  font-weight: {{ fonts_type_product_vendor_weight }};
  font-size: var(--font-size-body-smallest);
  margin: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }} 0 0;
  display: block;
  line-height: 1.3125;
  letter-spacing: {{ settings.type_product_vendor_spacing | divided_by: 100.0 | append: 'em' }};
  color: {{ settings.color_products_vendor_name }};
  white-space: normal;
}
{%- if settings.type_product_capitalize -%}
.productitem--vendor {
    text-transform: uppercase;
  }
{%- else -%}
.productitem--vendor {
    text-transform: none;
  }
{%- endif -%}
.productitem--emphasis .productitem--vendor {
  margin-top: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
}

.productitem--ratings .spr-badge {
  margin-top: 0.375rem;
  margin-bottom: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
  line-height: 1;
}
.productitem--info .productitem--ratings .spr-badge {
  margin-bottom: 0;
}

.productitem--actions {
  display: flex;
  flex-wrap: wrap;
  z-index: 50;
  margin: 0 -2.5% 0 0;
  padding-top: {{ settings.type_size_base | times: 0.75 | divided_by: 16.0 | append: 'rem' }};
  text-align: center;
  overflow: hidden;
}
.productitem--actions .product--stock-level {
  margin: {{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }} 0;
}
.productitem--actions .productitem--listview-price,
.productitem--actions .productitem--listview-stock-level,
.productitem--actions .productitem--listview-badge {
  display: none;
}
@media screen and (min-width: 1024px) {
  .no-touch .productitem--actions {
    position: absolute;
    right: 0;
    bottom: 0;
    left: 0;
    margin: 0;
    visibility: hidden;
    opacity: 0;
    border-radius: 0 0 {{ settings.product_card_border_radius | append: 'px' }} {{ settings.product_card_border_radius | append: 'px' }};
  }
}
.productgrid--no-spacing .productitem--actions {
  background: {{ settings.color_layout_site_background }};
}
@media screen and (min-width: 1024px) {
  .product-row--no-spacing .productitem--actions, .productgrid--no-spacing .productitem--actions {
    margin-right: -2.5%;
    border-radius: 0;
  }
}

.productitem--actions,
.productitem--swatches-show-on-hover {
  transition: opacity 0.2s ease 0s;
}
@media screen and (min-width: 1024px) {
  .productitem--actions .productgrid--item:hover, .productgrid--item.animating .productitem--actions, .productgrid--item.visible .productitem--actions,
.productitem--swatches-show-on-hover .productgrid--item:hover,
.productgrid--item.animating .productitem--swatches-show-on-hover,
.productgrid--item.visible .productitem--swatches-show-on-hover {
    visibility: visible;
  }
  .productgrid--item.animating-in:not(.animating-out) .productitem--actions,
.productgrid--item.animating-in:not(.animating-out) .productitem--swatches-show-on-hover {
    transition: opacity 0.2s ease 0.05s;
  }
  .productgrid--item.animating-in:not(.animating-out) .productitem--actions, .productgrid--item.visible:not(.animating-out) .productitem--actions, .productgrid--item.visible.animating-out:hover .productitem--actions,
.productgrid--item.animating-in:not(.animating-out) .productitem--swatches-show-on-hover,
.productgrid--item.visible:not(.animating-out) .productitem--swatches-show-on-hover,
.productgrid--item.visible.animating-out:hover .productitem--swatches-show-on-hover {
    opacity: 1;
  }
  .productgrid--item.animating-in.animating-out .productitem--actions,
.productgrid--item.animating-in.animating-out .productitem--swatches-show-on-hover {
    opacity: 0;
  }
}

.productitem--action {
  flex: 1 0 auto;
  min-width: 47.5%;
  margin-right: 2.5%;
  margin-bottom: 2.5%;
  overflow: hidden;
  border-radius: {{ settings.button_border_radius | append: 'px' }};
}
@media screen and (min-width: 1024px) {
  .no-touch .productgrid--items:not(.productgrid--no-spacing) .productitem--action, .no-touch .product-row:not(.product-row--no-spacing) .productitem--action {
    min-width: 50%;
    margin-right: 0;
    margin-bottom: 0;
    overflow: visible;
    border-radius: 0;
  }
}
@media screen and (max-width: 1023px) {
  .productitem--action.productitem-action--desktop {
    display: none;
  }
}

.productitem--action-trigger {
  display: block;
  width: 100%;
  padding-right: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
  padding-left: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
  text-align: center;
  vertical-align: middle;
}
.productgrid-listview .productitem--action-trigger {
  border-radius: {{ settings.button_border_radius | append: 'px' }};
}

.productgrid--items.productgrid--no-spacing .productgrid--item.animating-in .productitem--actions {
  transition: opacity 0.2s ease 0.1s;
}
.productgrid--items.productgrid--no-spacing .productgrid--item.animating-out .productitem {
  background: transparent;
  transition: background-color 0.2s ease, height 0.2s ease 0.3s, box-shadow 0.25s ease;
}

.productgrid--outer.productgrid-gridview .productitem--gridview-stock-level svg {
  display: none;
}
.productgrid--outer.productgrid-gridview .productitem--gridview-stock-level .stock-level--text {
  font-size: var(--font-size-body-smaller);
}
.productgrid--outer.productgrid-gridview .productitem--gridview-stock-level .product--stock-level {
  margin: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }} 0 {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
}
@media screen and (min-width: 1024px) {
  .no-touch .productgrid--outer.productgrid-gridview .productgrid--items:not(.productgrid--no-spacing) .productitem--action-trigger {
    border-radius: 0;
  }
  .no-touch .productgrid--outer.productgrid-gridview .productgrid--items:not(.productgrid--no-spacing) .productitem--action-trigger.productitem--action-qs {
    border-right-color: {{ settings.color_buttons_secondary_button_background }};
    border-bottom-color: {{ settings.color_buttons_secondary_button_background }};
    border-left-color: {{ settings.color_buttons_secondary_button_background }};
  }
  .no-touch .productgrid--outer.productgrid-gridview .productgrid--items:not(.productgrid--no-spacing) .productitem--action-trigger.productitem--action-qs:not(.disabled):hover {
    border-right-color: {{ settings.color_buttons_secondary_button_background_hover }};
    border-bottom-color: {{ settings.color_buttons_secondary_button_background_hover }};
    border-left-color: {{ settings.color_buttons_secondary_button_background_hover }};
  }
}

.productgrid--outer.productgrid-listview .productitem--listview-stock-level {
  display: block;
  text-align: left;
}
.productgrid--outer.productgrid-listview .productitem--listview-stock-level .product--stock-level {
  justify-content: flex-end;
  margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
}
.productgrid--outer.productgrid-listview .productitem--listview-stock-level .stock-level--text {
  font-size: var(--font-size-body-small);
}

.productitem--action-atc.disabled {
  color: {{ settings.color_buttons_sold_out_button_text }};
  background-color: {{ settings.color_buttons_sold_out_button_background }};
  border: 1px solid {{ settings.color_buttons_sold_out_button_background }};
}

.productitem--swatches {
  position: relative;
  z-index: 1;
  display: flex;
  align-items: start;
  justify-content: flex-start;
  height: {{ settings.swatches_product_card_size | append: 'px' }};
  margin-top: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
  margin-bottom: {{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }};
  overflow: hidden;
}
.productgrid--outer:not(.productgrid-listview) .productitem--emphasis .productitem--swatches {
  margin-top: {{ settings.type_size_base | times: 0.75 | divided_by: 16.0 | append: 'rem' }};
}
.productitem--swatches-summary + .productitem--swatches {
  margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
}
.productitem--swatches.processed {
  overflow: visible;
}

.productitem--swatches-container {
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  padding-right: calc({{ settings.swatches_product_card_size | append: 'px' }} * 1.5);
  margin-bottom: -6px;
  background: {{ settings.color_product_cards_background }};
}
.productitem--swatches-expanded .productitem--swatches-container {
  padding-bottom: {{ settings.type_size_base | times: 0.75 | divided_by: 16.0 | append: 'rem' }};
}

.productitem--swatches-swatch-wrapper {
  position: relative;
  height: {{ settings.swatches_product_card_size | append: 'px' }};
  padding: 0;
  cursor: pointer;
  border: 0;
  box-shadow: 0 0 0 0.0625rem {{ settings.color_forms_selected_input | color_modify: 'alpha', 0 }};
  transition: box-shadow 0.15s ease;
  margin-right: 6px;
  margin-bottom: 6px;
  overflow: hidden;
}
{%- if settings.swatches_shape == 'circle' -%}
.productitem--swatches-swatch-wrapper {
    border-radius: 50%;
  }
{%- elsif settings.swatches_product_card_size <= 26 -%}
.productitem--swatches-swatch-wrapper {
    border-radius: calc({{ settings.form_border_radius | divided_by: 2.0 | append: 'px' }} * 0.75);
  }
{%- elsif settings.swatches_product_card_size <= 46 -%}
.productitem--swatches-swatch-wrapper {
    border-radius: {{ settings.form_border_radius | divided_by: 2.0 | append: 'px' }};
  }
{%- else -%}
.productitem--swatches-swatch-wrapper {
    border-radius: {{ settings.form_border_radius | append: 'px' }};
  }
{%- endif -%}
{%- if settings.swatches_product_card_size < 26 -%}
.productitem--swatches-input:checked + .productitem--swatches-swatch-wrapper .productitem--swatches-swatch {
    transform: scale(0.8);
    transform: scale(var(--swatch-inner-transform-x, 0.8), 0.8);
  }
{%- else -%}
.productitem--swatches-input:checked + .productitem--swatches-swatch-wrapper .productitem--swatches-swatch {
    transform: scale(0.85);
    transform: scale(var(--swatch-inner-transform-x, 0.85), 0.85);
  }
{%- endif -%}

.productitem--swatches-count-button {
  font-size: var(--font-size-body-smaller);
  font-family: {{ fonts_type_body_family }};
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight_bolder }};
  display: none;
  position: absolute;
  align-items: center;
  justify-content: center;
  min-width: calc({{ settings.swatches_product_card_size | append: 'px' }} * 1.5);
  min-height: {{ settings.swatches_product_card_size | append: 'px' }};
  color: {{ settings.color_text_regular_text }};
  cursor: pointer;
  background-color: {{ settings.color_layout_site_background }};
  border: 1px solid {{ color_layout_site_background_border_mix | color_modify: 'alpha', 0.15 }};
}
{%- if settings.swatches_shape == 'circle' -%}
.productitem--swatches-count-button {
    border-radius: 50%;
  }
{%- elsif settings.swatches_product_card_size < 26 -%}
.productitem--swatches-count-button {
    border-radius: calc({{ settings.form_border_radius | divided_by: 2.0 | append: 'px' }} * 0.75);
  }
{%- else -%}
.productitem--swatches-count-button {
    border-radius: {{ settings.form_border_radius | append: 'px' }};
  }
{%- endif -%}

.productitem--swatches-count {
  text-align: center;
  outline: none;
}

.productitem--swatches-expanded .productitem--swatches-count-button::before {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 8px;
  height: 2px;
  background: {{ settings.color_text_regular_text }};
  content: "";
  transform: translate(-50%, -50%);
}
.productitem--swatches-expanded .productitem--swatches-count {
  display: none;
}

.productitem--swatches-swatch-hidden {
  display: none;
}
.productitem--swatches-expanded .productitem--swatches-swatch-hidden {
  display: block;
}

.user-is-tabbing .productitem--swatches-input:focus ~ .productitem--swatches-swatch-wrapper {
  box-shadow: 0 0 2px 2px {{ settings.color_forms_selected_input }};
}

.productitem--swatches-input {
  position: absolute;
  opacity: 0;
}

.productitem--swatches-swatch {
  height: 100%;
  overflow: hidden;
  pointer-events: none;
  transition: transform 0.15s ease;
}
{%- if settings.swatches_shape == 'circle' -%}
.productitem--swatches-swatch {
    border-radius: 50%;
  }
{%- elsif settings.swatches_product_card_size <= 26 -%}
.productitem--swatches-swatch {
    border-radius: calc({{ settings.form_border_radius | divided_by: 2.0 | append: 'px' }} * 0.75);
  }
{%- elsif settings.swatches_product_card_size <= 46 -%}
.productitem--swatches-swatch {
    border-radius: {{ settings.form_border_radius | divided_by: 2.0 | append: 'px' }};
  }
{%- else -%}
.productitem--swatches-swatch {
    border-radius: {{ settings.form_border_radius | append: 'px' }};
  }
{%- endif -%}

.productitem--swatches-swatch-inner {
  width: {{ settings.swatches_product_card_size | append: 'px' }};
}

.productitem--swatches-show-on-hover {
  position: absolute;
  left: 0;
  width: 100%;
  height: auto;
  padding: 0 0.9375rem;
  margin: 0;
  opacity: 0;
  visibility: hidden;
  overflow: visible;
}
.productgrid--no-spacing .productitem--swatches-show-on-hover {
  padding: 0 0 {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
}
.productgrid--no-spacing .productitem--swatches-show-on-hover.productitem--swatches {
  background: {{ settings.color_layout_site_background }};
}
.productitem--swatches-show-on-hover .productitem--swatches-container {
  width: 100%;
  padding-right: 0;
  padding-bottom: 0;
}

.productitem--swatches-summary {
  font-size: var(--font-size-body-tiny);
  margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
  line-height: 1.3125;
  color: {{ settings.color_text_light_text }};
}

.productitem--image-link {
  display: block;
}

.productitem--image {
  position: relative;
  width: 100%;
  height: auto;
  padding: 0;
  margin: 0;
  overflow: hidden;
  background-size: 0;
}
.imagestyle--no-image .productitem--image {
  height: 0;
  padding-bottom: 100%;
}
.productitem--image img {
  display: block;
  width: 100%;
  height: auto;
  margin: 0 auto;
  background-color: {{ settings.color_products_product_image_backgrounds }};
  visibility: hidden;
}
.productitem--image .productitem--image-alternate,
.productitem--image .productitem--image-swatch {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.productitem--image .productitem--image-primary {
  visibility: visible;
}
.productitem--image svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.in-theme-editor .imagestyle--small .productitem--image, .in-theme-editor .imagestyle--medium .productitem--image, .in-theme-editor .imagestyle--large .productitem--image {
  background-color: {{ settings.color_layout_secondary_backgrounds }};
}
.imagestyle--small .productitem--image img,
.imagestyle--small .productitem--image svg, .imagestyle--medium .productitem--image img,
.imagestyle--medium .productitem--image svg, .imagestyle--large .productitem--image img,
.imagestyle--large .productitem--image svg {
  position: absolute;
  top: 50%;
  left: 50%;
  height: 100%;
  transform: translate(-50%, -50%);
  object-fit: contain;
}
.imagestyle--small .productitem--image.product-item-image-no-objectfit, .imagestyle--medium .productitem--image.product-item-image-no-objectfit, .imagestyle--large .productitem--image.product-item-image-no-objectfit {
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
}
.imagestyle--small .productitem--image.product-item-image-no-objectfit img, .imagestyle--medium .productitem--image.product-item-image-no-objectfit img, .imagestyle--large .productitem--image.product-item-image-no-objectfit img {
  display: none;
}
.imagestyle--small .productitem--image.product-item-image-no-objectfit [data-rimg-canvas], .imagestyle--medium .productitem--image.product-item-image-no-objectfit [data-rimg-canvas], .imagestyle--large .productitem--image.product-item-image-no-objectfit [data-rimg-canvas] {
  display: none;
}
.imagestyle--small .productitem--image, .imagestyle--medium .productitem--image, .imagestyle--large .productitem--image, .imagestyle--cropped-small .productitem--image, .imagestyle--cropped-medium .productitem--image, .imagestyle--cropped-large .productitem--image {
  height: 0;
}
.imagestyle--small .productitem--image, .imagestyle--cropped-small .productitem--image {
  padding-bottom: 75%;
}
.imagestyle--medium .productitem--image, .imagestyle--cropped-medium .productitem--image {
  padding-bottom: 100%;
}
.imagestyle--large .productitem--image, .imagestyle--cropped-large .productitem--image {
  padding-bottom: 150%;
}
.imagestyle--cropped-small .productitem--image img,
.imagestyle--cropped-small .productitem--image svg, .imagestyle--cropped-medium .productitem--image img,
.imagestyle--cropped-medium .productitem--image svg, .imagestyle--cropped-large .productitem--image img,
.imagestyle--cropped-large .productitem--image svg {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.imagestyle--cropped-small .productitem--image .productitem--image-alternate,
.imagestyle--cropped-small .productitem--image .productitem--image-swatch, .imagestyle--cropped-medium .productitem--image .productitem--image-alternate,
.imagestyle--cropped-medium .productitem--image .productitem--image-swatch, .imagestyle--cropped-large .productitem--image .productitem--image-alternate,
.imagestyle--cropped-large .productitem--image .productitem--image-swatch {
  transform: translate(-50%, 0);
}
.imagestyle--cropped-small .productitem--image.product-item-image-no-objectfit, .imagestyle--cropped-medium .productitem--image.product-item-image-no-objectfit, .imagestyle--cropped-large .productitem--image.product-item-image-no-objectfit {
  background-position: center;
  background-size: cover;
}
.imagestyle--cropped-small .productitem--image.product-item-image-no-objectfit img, .imagestyle--cropped-medium .productitem--image.product-item-image-no-objectfit img, .imagestyle--cropped-large .productitem--image.product-item-image-no-objectfit img {
  display: none;
}
.imagestyle--cropped-small .productitem--image.product-item-image-no-objectfit [data-rimg-canvas], .imagestyle--cropped-medium .productitem--image.product-item-image-no-objectfit [data-rimg-canvas], .imagestyle--cropped-large .productitem--image.product-item-image-no-objectfit [data-rimg-canvas] {
  display: none;
}

.product-details {
  color: {{ settings.color_text_regular_text }};
}
@media screen and (max-width: 719px) {
  .product-details {
    margin-top: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
    margin-bottom: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
  }
}

.product-title {
  font-size: var(--font-size-heading-3);
  margin-top: 0;
  margin-bottom: 0;
  color: {{ settings.color_text_headings }};
  line-height: 1.2;
}
@media screen and (min-width: 720px) {
  .product-title {
    font-size: var(--font-size-heading-1);
  }
}
.product-title a {
  color: {{ settings.color_text_headings }};
  text-decoration: none;
}

.product-vendor {
  font-family: {{ fonts_type_product_vendor_family }};
  font-style: {{ fonts_type_product_vendor_style }};
  font-weight: {{ fonts_type_product_vendor_weight }};
  font-size: var(--font-size-body);
  letter-spacing: {{ settings.type_product_vendor_spacing | divided_by: 100.0 | append: 'em' }};
  margin-top: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
  line-height: 1.6;
  color: {{ settings.color_text_light_text }};
}
{%- if settings.type_product_capitalize -%}
.product-vendor {
    text-transform: uppercase;
  }
{%- else -%}
.product-vendor {
    text-transform: none;
  }
{%- endif -%}
.product-vendor a {
  color: {{ settings.color_products_vendor_name }};
}
.product-vendor a:hover {
  color: {{ color_morph_products_vendor_name }};
}

.product-ratings {
  margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
}
.product-ratings .spr-badge .spr-badge-caption {
  margin-left: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
}
.product-ratings .spr-badge .spr-badge-starrating {
  position: relative;
  top: -1px;
}
.product-ratings .spr-badge .spr-badge-starrating .spr-icon {
  font-size: 0;
  letter-spacing: 0;
}
.product-ratings .spr-badge .spr-badge-starrating .spr-icon::before {
  font-size: var(--font-size-body-smaller);
}
@media screen and (min-width: 720px) {
  .product-ratings .spr-badge .spr-badge-starrating .spr-icon::before {
    font-size: calc({{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }} + 1px);
  }
}

.product-pricing {
  font-family: {{ fonts_type_product_price_family }};
  font-style: {{ fonts_type_product_price_style }};
  font-weight: {{ fonts_type_product_price_weight }};
  margin-top: {{ settings.type_size_base | times: 0.75 | divided_by: 16.0 | append: 'rem' }};
  margin-bottom: calc(-1 * {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }});
  letter-spacing: 0;
}
@media screen and (min-width: 720px) {
  .product-pricing {
    margin-top: {{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }};
  }
}

.product-sku {
  margin: {{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }} 0 {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
  font-size: 0.875rem;
  line-height: 1.5;
  color: {{ settings.color_text_light_text }};
}
.product-sku.product-sku--empty {
  display: none;
}
.modal .product-sku {
  margin-bottom: 10px;
}

.product--badge {
  display: inline-block;
  height: 100%;
  margin-right: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
  margin-bottom: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
  font-size: 0.8125rem;
  white-space: nowrap;
}

.product--price {
  display: inline;
}
.product--price .price--compare-at,
.product--price .price--main {
  font-size: var(--font-size-heading-4);
  margin-bottom: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
  line-height: 1.15;
  white-space: nowrap;
}
@media screen and (min-width: 720px) {
  .product--price .price--compare-at,
.product--price .price--main {
    font-size: calc({{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }} * 1.25);
  }
}
.product--price .price--main {
  display: inline-block;
}
.product--price .price--compare-at {
  margin-right: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
}
.product--price .price--compare-at.visible + .price--main {
  color: {{ settings.color_products_sale_price }};
}

.product-section--container {
  margin-top: {{ settings.type_size_base | times: 3.125 | divided_by: 16.0 | append: 'rem' }};
}
@media screen and (min-width: 1024px) {
  .product-section--container {
    margin-top: {{ settings.type_size_base | times: 4.25 | divided_by: 16.0 | append: 'rem' }};
  }
}

.product-section--title {
  font-size: var(--font-size-heading-4);
  margin-bottom: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
  color: {{ settings.color_text_headings }};
}
@media screen and (min-width: 860px) {
  .product-section--title {
    margin-bottom: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
  }
}

.product-section--content {
  margin-top: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
}
@media screen and (min-width: 860px) {
  .product-section--content {
    margin-top: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
  }
}

.product-message--container {
  display: none;
  max-height: 200px;
  overflow: hidden;
}
.product-message--container.visible {
  display: block;
}
.product-message--container div {
  padding: {{ settings.type_size_base | times: 0.75 | divided_by: 16.0 | append: 'rem' }};
}

.product-message--error {
  outline: none;
}

.price--compare-at {
  display: none;
  font-size: 0.8125rem;
  line-height: 1.38;
  color: {{ settings.color_products_compare_at_price }};
  text-decoration: line-through;
}
.price--compare-at.visible {
  display: inline-block;
}

.price--main {
  margin-right: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
  font-size: var(--font-size-body);
  line-height: 1.4375rem;
  color: {{ settings.color_products_regular_price }};
}

.product__unit-price {
  display: inline-block;
  margin-bottom: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
  font-size: var(--font-size-body-smallest);
  color: {{ settings.color_text_regular_text | color_modify: 'alpha', 0.8 }};
}
.product__unit-price.hidden {
  display: none;
}
.productgrid--item .product__unit-price {
  margin-top: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
}

.product__tax {
  margin-top: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
  margin-bottom: {{ settings.type_size_base | times: 1.75 | divided_by: 16.0 | append: 'rem' }};
  font-size: var(--font-size-body-smallest);
  color: {{ settings.color_text_regular_text | color_modify: 'alpha', 0.8 }};
}
.product__tax a {
  color: {{ settings.color_text_regular_text | color_modify: 'alpha', 0.8 }};
}
.product__tax.hidden {
  display: none;
}

.product-gallery {
  position: relative;
}

.product-gallery--viewer {
  position: relative;
  width: 100%;
  overflow: hidden;
  transition: height 0.2s ease;
}
@media screen and (min-width: 720px) {
  .product-gallery--viewer {
    margin-top: 0;
  }
}
@media screen and (min-width: 1024px) {
  .hover-zoom-enabled .product-gallery--viewer {
    cursor: crosshair;
  }
}
.click-to-zoom-enabled .product-gallery--viewer {
  cursor: pointer;
}
.product-gallery--viewer.product-gallery--has-media .product-gallery--media:not([data-gallery-selected=true]) {
  position: absolute;
  opacity: 0;
}

.product-gallery:not([data-product-gallery-aspect-ratio=natural]) .product-gallery--image-background {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-position: center;
  background-size: cover;
}

[data-product-gallery-aspect-ratio=natural] .product-gallery--image-background {
  background-size: 0;
}
[data-product-gallery-aspect-ratio=natural] .product-gallery--external_video {
  padding-bottom: 56.25%;
}

[data-product-gallery-aspect-ratio=short] .product-gallery--media,
[data-product-gallery-aspect-ratio=square] .product-gallery--media,
[data-product-gallery-aspect-ratio=tall] .product-gallery--media,
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=short] .product-gallery--media,
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=square] .product-gallery--media,
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=tall] .product-gallery--media {
  height: 0;
}

[data-product-gallery-aspect-ratio=short] .product-gallery--loaded-image,
[data-product-gallery-aspect-ratio=square] .product-gallery--loaded-image,
[data-product-gallery-aspect-ratio=tall] .product-gallery--loaded-image {
  position: absolute;
  top: 50%;
  left: 50%;
  display: block;
  width: auto;
  height: auto;
  max-width: 100%;
  max-height: 100%;
  margin: 0 auto;
  transform: translate(-50%, -50%);
}

[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=short] .product-gallery--media img,
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=square] .product-gallery--media img,
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=tall] .product-gallery--media img {
  position: absolute;
  top: 0;
  left: 0;
  overflow-x: hidden;
  transform: none;
}
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=short] .product-gallery--media img[data-rimg=noscript],
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=square] .product-gallery--media img[data-rimg=noscript],
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=tall] .product-gallery--media img[data-rimg=noscript] {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
[data-product-gallery-aspect-ratio=short] .product-gallery--media,
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=short] .product-gallery--media {
  padding-bottom: 75%;
}

[data-product-gallery-aspect-ratio=square] .product-gallery--loaded-image,
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=square] .product-gallery--loaded-image {
  height: 100%;
}
[data-product-gallery-aspect-ratio=square] .gallery-image-wide .product-gallery--loaded-image,
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=square] .gallery-image-wide .product-gallery--loaded-image {
  height: auto;
  width: 100%;
}
[data-product-gallery-aspect-ratio=square] .product-gallery--media,
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=square] .product-gallery--media {
  padding-bottom: 100%;
}

[data-product-gallery-aspect-ratio=tall] .product-gallery--media,
[data-product-gallery-image-crop][data-product-gallery-aspect-ratio=tall] .product-gallery--media {
  padding-bottom: 150%;
}

.product-gallery--media {
  width: 100%;
  margin: 0;
  overflow: hidden;
  outline: none;
  opacity: 0;
  transition: opacity 0.2s ease;
}
.product-gallery--media video,
.product-gallery--media .video,
.product-gallery--media .shopify-model-viewer-ui {
  display: none;
}
.product-gallery--media[data-gallery-selected=true] video,
.product-gallery--media[data-gallery-selected=true] .video,
.product-gallery--media[data-gallery-selected=true] .shopify-model-viewer-ui {
  display: block;
}
@media screen and (max-width: 719px) {
  .flickity-enabled .product-gallery--media, .product-gallery--media[data-gallery-selected=true] {
    opacity: 1;
  }
}
@media screen and (min-width: 720px) {
  .product-gallery--media {
    left: 0 !important;
    z-index: -1;
    opacity: 0;
  }
  .product-gallery--media.product-gallery--image-placeholder, .product-gallery--media[data-gallery-selected=true], .product-gallery--media.is-selected {
    z-index: 0;
    opacity: 1;
  }
}
.product-gallery--media img {
  background-color: {{ settings.color_products_product_image_backgrounds }};
}
[data-product-gallery-aspect-ratio=natural] .product-gallery--media img,
.product-gallery--media svg {
  display: block;
  width: 100%;
  margin: 0 auto;
  transform: none;
}

[data-lazy-loading-disabled] [data-product-gallery-image-crop][data-product-gallery-aspect-ratio=short] .product-gallery--loaded-image,
[data-lazy-loading-disabled] [data-product-gallery-image-crop][data-product-gallery-aspect-ratio=square] .product-gallery--loaded-image,
[data-lazy-loading-disabled] [data-product-gallery-image-crop][data-product-gallery-aspect-ratio=tall] .product-gallery--loaded-image {
  opacity: 0;
}

.product-gallery--navigation {
  position: relative;
  width: 100%;
  margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
  margin-left: -0.125rem;
  padding-bottom: 0.125rem;
  font-size: 0;
  text-align: left;
  transition: opacity 0.2s ease;
}
.product-gallery--navigation.loading {
  position: absolute;
  opacity: 0;
}
.product-gallery--navigation::-webkit-scrollbar {
  display: none;
}
@media screen and (min-width: 720px) {
  .product-gallery--navigation {
    margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
    margin-right: -0.3125rem;
    margin-left: -0.3125rem;
  }
}
@media screen and (max-width: 1023px) and (min-width: 720px) {
  .modal--quickshop-full .product-gallery--navigation {
    margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
    margin-right: 0;
    margin-left: 0;
  }
}

.gallery-navigation--scroll-button {
  position: absolute;
  height: 100%;
  width: 2rem;
  display: none;
  background: {{ settings.color_layout_site_background }};
  color: {{ settings.color_text_headings }};
  border-top: none;
  border-bottom: none;
  outline: none;
  z-index: 2;
  transform: translate3d(0, 0, 0);
  cursor: pointer;
}
.gallery-navigation--scroll-button.visible {
  display: block;
}
.gallery-navigation--scroll-button.scroll-left {
  left: 0;
  padding-left: 0;
  border-right: 1px solid {{ color_border | color_modify: 'alpha', 0.30 }};
  border-left: none;
}
.gallery-navigation--scroll-button.scroll-left svg {
  transform: rotate(90deg);
}
.gallery-navigation--scroll-button.scroll-right {
  right: 0;
  padding-right: 0;
  border-right: none;
  border-left: 1px solid {{ color_border | color_modify: 'alpha', 0.30 }};
}
.gallery-navigation--scroll-button.scroll-right svg {
  transform: rotate(270deg);
}
.modal--quickshop-full .gallery-navigation--scroll-button {
  background: {{ settings.color_popups_background }};
}
.featured-product--container .gallery-navigation--scroll-button {
  background: {{ settings.color_content_containers_background }};
}

.gallery-navigation--scroller {
  padding-top: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
  padding-bottom: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
  overflow-x: scroll;
  overflow-y: hidden;
  white-space: nowrap;
  scroll-behavior: smooth;
}
.gallery-navigation--scroller .product-gallery--media-thumbnail:last-child {
  margin-right: 10px;
}
.gallery-navigation--scroller::-webkit-scrollbar {
  display: none;
}
@media screen and (min-width: 720px) {
  .gallery-navigation--scroller {
    overflow: visible;
    white-space: normal;
  }
  .gallery-navigation--scroller .product-gallery--media-thumbnail:last-child {
    margin-right: 0;
  }
}
@media screen and (max-width: 1023px) and (min-width: 720px) {
  .modal--quickshop-full .gallery-navigation--scroller {
    overflow: scroll;
    white-space: nowrap;
  }
  .modal--quickshop-full .gallery-navigation--scroller .product-gallery--media-thumbnail:last-child {
    margin-right: 10px;
  }
}

.product-gallery--media-thumbnail {
  position: relative;
  display: inline-block;
  height: 4rem;
  padding: 2px;
  margin-right: 0.1875rem;
  margin-left: 0.1875rem;
  vertical-align: middle;
  border-radius: 2px;
  box-shadow: 0 0 2px transparent;
  transition: box-shadow 0.1s linear;
}
@media screen and (min-width: 720px) {
  .product-gallery--media-thumbnail {
    margin-top: 0.375rem;
  }
}
@media screen and (min-width: 1280px) {
  .product-gallery--media-thumbnail {
    height: 4.9375rem;
  }
  .modal--quickshop-full .product-gallery--media-thumbnail {
    height: 4rem;
  }
}
@media screen and (max-width: 1023px) and (min-width: 720px) {
  .modal--quickshop-full .product-gallery--media-thumbnail {
    margin-top: 0;
  }
}
.no-js .product-gallery--media-thumbnail {
  cursor: default;
}
.product-gallery--media-thumbnail:focus {
  outline: none;
  box-shadow: 0 0 0 2px {{ settings.color_text_links | color_modify: 'alpha', 0.70 }};
}
.product-gallery--media-thumbnail[data-gallery-selected=true] {
  box-shadow: 0 0 0 2px {{ settings.color_text_links }};
}
.product-gallery--media-thumbnail[data-gallery-selected=true]:focus {
  box-shadow: 0 0 0 2px {{ settings.color_text_links | color_modify: 'alpha', 0.80 }}, 0 0 10px 0 {{ settings.color_text_links }};
}
.product-gallery--media-thumbnail .icon-play-thumb,
.product-gallery--media-thumbnail .icon-model-thumb {
  position: absolute;
  top: 0.3125rem;
  right: 0.3125rem;
  width: 1.25rem;
  height: 1.25rem;
  background: {{ settings.color_layout_site_background }};
  color: {{ settings.color_text_headings }};
  z-index: 1;
  border-radius: calc({{ settings.button_border_radius | append: 'px' }} / 2);
  box-shadow: 0 0 0 1px {{ settings.color_text_headings | color_modify: 'alpha', 0.05 }};
  pointer-events: none;
}
.no-js .product-gallery--media-thumbnail .icon-play-thumb,
.no-js .product-gallery--media-thumbnail .icon-model-thumb {
  display: none;
}

.product-gallery--media-thumbnail-img {
  display: block;
  max-width: 100%;
  height: 100%;
  pointer-events: none;
}

.product-gallery--media-thumbnail:focus,
.product-gallery--media-thumbnail-img-wrapper:focus {
  outline: none;
}

@media screen and (min-width: 720px) {
  [data-product-gallery-thumbnails=left] {
    display: flex;
  }
  [data-product-gallery-thumbnails=left] .product-gallery--navigation {
    flex: 1 0 auto;
    max-width: 4.375rem;
    max-height: 34.375rem;
    padding: 0;
    margin-top: 0;
    margin-right: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
  }
}
@media screen and (min-width: 720px) and (min-width: 720px) {
  .layout--two-col-medium [data-product-gallery-thumbnails=left] .product-gallery--navigation, .layout--two-col-large [data-product-gallery-thumbnails=left] .product-gallery--navigation {
    max-height: 30rem;
    max-width: 4.25rem;
  }
}
@media screen and (min-width: 720px) and (min-width: 860px) {
  .layout--two-col-large [data-product-gallery-thumbnails=left] .product-gallery--navigation {
    max-height: 35rem;
    max-width: 4.875rem;
  }
}
@media screen and (min-width: 720px) {
  [data-product-gallery-thumbnails=left] .gallery-navigation--scroller {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    max-height: 34.375rem;
  }
}
@media screen and (min-width: 720px) {
  [data-product-gallery-thumbnails=left] .product-gallery--media-thumbnail {
    width: 4rem;
    height: auto;
    margin-top: -2px;
    margin-bottom: 0.375rem;
  }
}
@media screen and (min-width: 720px) and (min-width: 720px) {
  .layout--two-col-medium [data-product-gallery-thumbnails=left] .product-gallery--media-thumbnail, .layout--two-col-large [data-product-gallery-thumbnails=left] .product-gallery--media-thumbnail {
    width: 4.25rem;
  }
}
@media screen and (min-width: 720px) and (min-width: 860px) {
  .layout--two-col-large [data-product-gallery-thumbnails=left] .product-gallery--media-thumbnail {
    width: 4.875rem;
  }
}
@media screen and (min-width: 720px) {
  [data-product-gallery-thumbnails=left] .product-gallery--media-thumbnail-img-wrapper {
    width: 100%;
    height: auto;
  }
}
@media screen and (min-width: 720px) {
  [data-product-gallery-thumbnails=left] .product-gallery--media-thumbnail-img {
    width: 100%;
    height: auto;
    max-width: auto;
    max-height: 100%;
  }
}
@media screen and (min-width: 720px) {
  [data-product-gallery-thumbnails=left] .product-gallery--viewer {
    padding: 0;
  }
}
@media screen and (min-width: 720px) {
  [data-product-gallery-thumbnails=left] .product-gallery--thumbnail {
    width: 100%;
  }
}
@media screen and (min-width: 720px) {
  [data-product-gallery-thumbnails=left] .product-gallery--slider {
    padding: 0;
  }
}
@media screen and (max-width: 1023px) and (min-width: 720px) {
  .modal--quickshop-full [data-product-gallery-thumbnails=left] {
    display: block;
  }
  .modal--quickshop-full [data-product-gallery-thumbnails=left] .product-gallery--navigation {
    max-width: none;
    max-height: none;
    margin-top: {{ settings.type_size_base | times: 0.5 | divided_by: 16.0 | append: 'rem' }};
    margin-right: 0;
  }
  .modal--quickshop-full [data-product-gallery-thumbnails=left] .gallery-navigation--scroller {
    display: block;
    max-height: none;
  }
  .modal--quickshop-full [data-product-gallery-thumbnails=left] .product-gallery--media-thumbnail {
    width: auto;
    height: 4rem;
    margin-top: 0;
    margin-bottom: 0;
  }
  .modal--quickshop-full [data-product-gallery-thumbnails=left] .product-gallery--media-thumbnail-img-wrapper {
    width: auto;
    height: 100%;
  }
  .modal--quickshop-full [data-product-gallery-thumbnails=left] .product-gallery--media-thumbnail-img {
    height: 100%;
    width: auto;
    max-width: 100%;
    max-height: auto;
  }
}
@media screen and (min-width: 1024px) {
  .modal--quickshop-full [data-product-gallery-thumbnails=left] {
    display: flex;
  }
}

.product-gallery--external-video {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.product-gallery--external-video .video {
  width: 100%;
  height: 100%;
  padding-bottom: 0;
}

.product-gallery--video video {
  width: 100%;
}

.product-gallery--model {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 100%;
}

.product-gallery--viewinyourspace {
  font-family: {{ fonts_type_body_family }};
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight }};
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: auto;
  color: {{ settings.color_text_regular_text }};
  background-color: {{ settings.color_text_headings | color_modify: 'alpha', 0.08 }};
  border: 0;
}
.product-gallery--viewinyourspace[data-shopify-xr-hidden] {
  visibility: hidden;
}
@media screen and (min-width: 720px) {
  .product-gallery--viewinyourspace[data-shopify-xr-hidden] {
    display: none;
  }
}
.product-gallery--viewinyourspace svg {
  width: 44px;
  height: 44px;
}

.form-options {
  z-index: 0;
  padding: 0;
  margin-top: {{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }};
  margin-right: 0;
  margin-left: 0;
  border: 0;
}
.no-js .form-options.no-js-required {
  display: block;
  width: 100%;
}
.no-js .form-options.js-required {
  display: none;
}
.js .form-options.no-js-required {
  display: none;
}
.js .form-options.js-required {
  display: block;
}

.product-form--alt .form-options-first {
  margin-top: 0;
}

@media screen and (min-width: 1024px) {
  .product-form--alt .product--stock-level {
    margin-top: 0;
  }
  .product-form--alt .product-options-style-select + .stock-level--wrapper .product--stock-level {
    margin-top: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
  }
}

.form-options-swatches {
  z-index: 5;
}

.product-form--atc {
  position: relative;
  z-index: 0;
  display: flex;
  align-items: center;
  margin-top: {{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }};
}
.product-sold-out .product-form--atc {
  display: none;
}
.smart-payment-enabled .product-form--atc {
  align-items: flex-start;
  flex-direction: column;
}
.product-form--alt input[type=hidden] + .product-form--atc {
  margin-top: 0;
}

.product-form--atc-qty {
  width: 7.1875rem;
  margin-right: {{ settings.type_size_base | times: 0.75 | divided_by: 16.0 | append: 'rem' }};
}

.product-form--atc-button {
  font-size: var(--font-size-button-large);
  padding: 0.875rem 2.125rem;
  letter-spacing: {{ settings.type_button_spacing | divided_by: 100.0 | append: 'em' }};
  width: calc(100% - {{ settings.type_size_base | times: 0.75 | divided_by: 16.0 | append: 'rem' }} - 7.1875rem);
  padding-right: 0.3125rem;
  padding-left: 0.3125rem;
  margin-left: 0;
}
{%- if settings.type_button_capitalize -%}
.product-form--atc-button {
    text-transform: uppercase;
  }
{%- else -%}
.product-form--atc-button {
    text-transform: none;
  }
{%- endif -%}
.product-form--atc-button.disabled {
  color: {{ settings.color_buttons_sold_out_button_text }};
  background-color: {{ settings.color_buttons_sold_out_button_background }};
  border: 1px solid {{ settings.color_buttons_sold_out_button_background }};
}
@media screen and (max-width: 1279px) {
  .product-form--alt .product-form--atc-button {
    font-size: {{ settings.type_size_base | divided_by: 16.0 | append: 'rem' }};
  }
}

.product-options-style-select .option-name {
  font-family: {{ fonts_type_body_family }};
  font-style: {{ fonts_type_body_style }};
  font-weight: {{ fonts_type_body_weight }};
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
}
.product-options-style-radio .option-name {
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
}
{%- if settings.type_body_custom == blank and settings.type_body_enable_bold -%}
.product-options-style-radio .option-name {
    font-family: {{ fonts_type_body_bold_family }};
    font-style: {{ fonts_type_body_bold_style }};
    font-weight: {{ fonts_type_body_bold_weight }};
  }
{%- else -%}
.product-options-style-radio .option-name {
    font-family: {{ fonts_type_body_family }};
    font-style: {{ fonts_type_body_style }};
    font-weight: {{ fonts_type_body_weight }};
  }
{%- endif -%}
@media screen and (min-width: 720px) {
  .option-name {
    font-size: var(--font-size-body-smaller);
  }
}

.option-swatch-value {
  letter-spacing: {{ settings.type_body_spacing | divided_by: 100.0 | append: 'em' }};
}
{%- if settings.type_body_custom == blank and settings.type_body_enable_bold -%}
.option-swatch-value {
    font-family: {{ fonts_type_body_bold_family }};
    font-style: {{ fonts_type_body_bold_style }};
    font-weight: {{ fonts_type_body_bold_weight }};
  }
{%- else -%}
.option-swatch-value {
    font-family: {{ fonts_type_body_family }};
    font-style: {{ fonts_type_body_style }};
    font-weight: {{ fonts_type_body_weight }};
  }
{%- endif -%}

.option-values {
  margin-top: 10px;
}

.option-value {
  display: inline-block;
}

.option-value-input {
  position: absolute;
  opacity: 0;
}
.option-value-input + .option-value-name {
  display: inline-block;
  width: auto;
  padding: 7.5px 10px;
  margin: 0 5px 10px 0;
  cursor: pointer;
}
@media screen and (min-width: 720px) {
  .option-value-input + .option-value-name {
    font-size: var(--font-size-body-smaller);
  }
}
.option-value-input:focus ~ .option-value-name {
  box-shadow: {{ settings.color_forms_selected_input }} 0 0 0 1px;
}
.option-value-input:checked + .option-value-name {
  color: {{ settings.color_forms_selected_input }};
  background-color: {{ settings.color_forms_selected_input | color_modify: 'alpha', 0.10 }};
}
.option-value-input:disabled + .option-value-name {
  text-decoration: line-through;
  cursor: default;
  opacity: 0.5;
}
.option-value-input + .option-value-swatch-wrapper {
  position: relative;
  height: {{ settings.swatches_product_page_size | append: 'px' }};
  padding: 0;
  cursor: pointer;
  border: 0;
  box-shadow: 0 0 0 0.0625rem {{ settings.color_forms_selected_input | color_modify: 'alpha', 0 }};
  transition: box-shadow 0.15s ease;
}
{%- if settings.swatches_shape == 'circle' -%}
.option-value-input + .option-value-swatch-wrapper {
    border-radius: 50%;
  }
{%- elsif settings.swatches_product_page_size <= 26 -%}
.option-value-input + .option-value-swatch-wrapper {
    border-radius: calc({{ settings.form_border_radius | divided_by: 2.0 | append: 'px' }} * 0.75);
  }
{%- elsif settings.swatches_product_page_size <= 46 -%}
.option-value-input + .option-value-swatch-wrapper {
    border-radius: {{ settings.form_border_radius | divided_by: 2.0 | append: 'px' }};
  }
{%- else -%}
.option-value-input + .option-value-swatch-wrapper {
    border-radius: {{ settings.form_border_radius | append: 'px' }};
  }
{%- endif -%}
.option-value-input + .option-value-swatch-wrapper::after {
  position: absolute;
  bottom: 0;
  left: 50%;
  pointer-events: none;
  content: "";
  will-change: transform;
}
.option-value-input + .option-value-swatch-wrapper:hover {
  z-index: 5;
}
.option-value-input + .option-value-swatch-wrapper .swatch {
  height: 100%;
  overflow: hidden;
  pointer-events: none;
  transition: transform 0.15s ease;
}
{%- if settings.swatches_shape == 'circle' -%}
.option-value-input + .option-value-swatch-wrapper .swatch {
    border-radius: 50%;
  }
{%- elsif settings.swatches_product_page_size <= 26 -%}
.option-value-input + .option-value-swatch-wrapper .swatch {
    border-radius: calc({{ settings.form_border_radius | divided_by: 2.0 | append: 'px' }} * 0.75);
  }
{%- elsif settings.swatches_product_page_size <= 46 -%}
.option-value-input + .option-value-swatch-wrapper .swatch {
    border-radius: {{ settings.form_border_radius | divided_by: 2.0 | append: 'px' }};
  }
{%- else -%}
.option-value-input + .option-value-swatch-wrapper .swatch {
    border-radius: {{ settings.form_border_radius | append: 'px' }};
  }
{%- endif -%}
.option-value-input + .option-value-swatch-wrapper .swatch-inner {
  width: {{ settings.swatches_product_page_size | append: 'px' }};
}
.option-value-input:checked + .option-value-swatch-wrapper {
  background-color: transparent;
}
{%- if settings.swatches_product_page_size < 26 -%}
.option-value-input:checked + .option-value-swatch-wrapper .swatch {
    transform: scale(0.8);
    transform: scale(var(--swatch-inner-transform-x, 0.8), 0.8);
  }
{%- else -%}
.option-value-input:checked + .option-value-swatch-wrapper .swatch {
    transform: scale(0.85);
    transform: scale(var(--swatch-inner-transform-x, 0.85), 0.85);
  }
{%- endif -%}
.option-value-input:disabled + .option-value-swatch-wrapper {
  cursor: not-allowed;
  opacity: 1;
}
.user-is-tabbing .option-value-input:focus ~ .option-value-swatch-wrapper {
  box-shadow: 0 0 2px 2px {{ settings.color_forms_selected_input }};
}

.in-stock-notification-form {
  display: none;
  margin-top: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
  border-top: 1px solid {{ color_layout_site_background_border_mix | color_modify: 'alpha', 0.15 }};
}
.product-sold-out .in-stock-notification-form {
  display: block;
}
.in-stock-notification-form .form-title {
  font-size: var(--font-size-heading-4);
  margin: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }} 0;
}
.layout--three-col .in-stock-notification-form.no-variants {
  margin-top: 0;
  border-top: 0;
}
.layout--three-col .in-stock-notification-form.no-variants .form-title {
  margin-top: 0;
}
.in-stock-notification-form p {
  margin: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }} 0;
}
.in-stock-notification-form .success-message {
  color: #51a551;
}
.in-stock-notification-form .success-message svg {
  margin-right: {{ settings.type_size_base | times: 0.75 | divided_by: 16.0 | append: 'rem' }};
}
.in-stock-notification-form .error-message {
  color: #f05d5d;
}
.in-stock-notification-form button {
  font-size: var(--font-size-button-large);
  padding: 0.875rem 2.125rem;
  letter-spacing: {{ settings.type_button_spacing | divided_by: 100.0 | append: 'em' }};
  width: 100%;
  margin-top: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }};
}
{%- if settings.type_button_capitalize -%}
.in-stock-notification-form button {
    text-transform: uppercase;
  }
{%- else -%}
.in-stock-notification-form button {
    text-transform: none;
  }
{%- endif -%}

.product--stock-level {
  font-size: var(--font-size-body-small);
  display: flex;
  align-items: center;
  margin: {{ settings.type_size_base | times: 1.25 | divided_by: 16.0 | append: 'rem' }} 0;
}
.product--stock-level .stock-level--availability {
  padding-right: 0.35rem;
}
{%- if settings.type_body_custom == blank and settings.type_body_enable_bold -%}
.product--stock-level .stock-level--availability {
    font-family: {{ fonts_type_body_bold_family }};
    font-style: {{ fonts_type_body_bold_style }};
    font-weight: {{ fonts_type_body_bold_weight }};
  }
{%- else -%}
.product--stock-level .stock-level--availability {
    font-family: {{ fonts_type_body_family }};
    font-style: {{ fonts_type_body_style }};
    font-weight: {{ fonts_type_body_weight }};
  }
{%- endif -%}
.product--stock-level.stock-level--in-stock .stock-level--text, .product--stock-level.stock-level--in-stock svg {
  color: {{ settings.color_products_in_stock }};
}
.product--stock-level.stock-level--in-stock svg {
  margin-right: {{ settings.type_size_base | times: 0.25 | divided_by: 16.0 | append: 'rem' }};
}
.product--stock-level.stock-level--low-stock .stock-level--text {
  color: {{ settings.color_products_low_stock }};
}
.product--stock-level.stock-level--low-stock svg {
  display: none;
}
.product--stock-level.stock-level--no-stock .stock-level--text {
  color: {{ settings.color_products_no_stock }};
}
.product--stock-level.stock-level--no-stock svg {
  display: none;
}

.site-mobile-nav,
.live-search-takeover-cancel,
.search-flydown,
.skip-to-main,
.visually-hidden,
.share-buttons {
  display: none;
}

.slideshow-slide:not(:first-child) {
  display: none;
}